#usda 1.0
(
    defaultPrim = "Cache1"
)

def MayaReference "Cache1" (
    kind = "component"
)
{
    def Xform "Wall_e_RIG_v001_rig_grp"
    {
        def Xform "Wall_e_RIG_v001_parts_grp"
        {
            def Xform "Wall_e_RIG_v001_c_global_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_global_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_global_inputs_grp"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_global_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_world_output_grp"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_global_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_global_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_global_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_global_controls_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_global_ctrl_offset_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_global_ctrl"
                        {
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            uniform token[] xformOpOrder = ["xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_global_002_ctrl_offset_grp"
                            {
                                def Xform "Wall_e_RIG_v001_c_global_002_ctrl"
                                {
                                    def Xform "Wall_e_RIG_v001_c_global_003_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_c_global_003_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_pivot_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_pivot_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_pivot_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_pivot_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_pivot_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_pivot_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_pivot_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_pivot_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 2.220446049250313e-16, -4.440892098500626e-16),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_pivot_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_pivot_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_pivot_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_pivot_ctrl_offset_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_pivot_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_pivot_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_pivot_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_c_pivot_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_pivot_x_plus_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate = (7.875, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_pivot_x_minus_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            double3 xformOp:translate = (-15.749784469604492, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_c_pivot_z_plus_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                double3 xformOp:translate = (7.874784469604492, 1.41892671585083, 3.1995198726654053)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_c_pivot_z_minus_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, 0, 0),
                                    }
                                    double3 xformOp:translate = (0, 0.0002243518829345703, -6.400041103363037)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_pivot_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_pivot_untouchables_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_body_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_body_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_body_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_body_exclude_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_body_exclude_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_body_exclude_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_body_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_body_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 6.767270088195801, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_body_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_body_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_body_001_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_body_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_body_tilt_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate = (0, 2.2199244499206543, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_body_tilt_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_c_body_tilt_ctrl"
                            {
                                double3 xformOp:translate = (0, 4.5473456382751465, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                def "Wall_e_RIG_v001_c_body_ctrl_offset_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_c_body_ctrl"
                                    {
                                        def "Wall_e_RIG_v001_c_body_002_ctrl_offset_grp"
                                        {
                                            def Xform "Wall_e_RIG_v001_c_body_002_ctrl"
                                            {
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_body_tilt_ctrl_offset_001_grp_orc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_body_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_body_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_body_light_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_body_light_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_body_light_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_body_light_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_body_light_001_noise_input_grp"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_body_light_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_body_light_001_input_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_body_light_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_body_light_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (-1.1999945640563965, 8.621997833251953, 4.727793545694891)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_body_light_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_body_light_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_body_light_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_hatch_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_hatch_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_hatch_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_hatch_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_hatch_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_hatch_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_hatch_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_hatch_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_hatch_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 3.1820645332336412, 3.997922801971434),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_hatch_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_hatch_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_hatch_001_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_hatch_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_hatch_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (0, 3.1820645332336412, 3.997922801971434)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_hatch_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_hatch_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_hatch_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_panel_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_panel_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_panel_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_panel_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_panel_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_panel_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_panel_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_panel_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_panel_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 10.223139762878418, -4.398689270019531),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_panel_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_panel_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_panel_001_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_panel_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_panel_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (0, 10.223139762878418, -4.398689270019531)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_panel_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_panel_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_panel_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_exhaust_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_exhaust_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_exhaust_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_exhaust_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_exhaust_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_exhaust_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (1.999903917312622, 6.062255859375, -4.400010585784912),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_exhaust_001_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_exhaust_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_exhaust_end_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (1.999903917312622, 6.062255859375, -8.8)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_l_exhaust_end_ctrl"
                        {
                            def "Wall_e_RIG_v001_l_exhaust_end_002_ctrl_offset_grp"
                            {
                                def Xform "Wall_e_RIG_v001_l_exhaust_end_002_ctrl"
                                {
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_003_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (1.999903917312622, 6.062255859375, -4.400010585784912),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_002_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_001_grp"
                            {
                                def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_l_exhaust_ctrl"
                                    {
                                    }
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_002_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_003_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_exhaust_ctrl_offset_003_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_exhaust_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_exhaust_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_exhaust_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_exhaust_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_exhaust_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_exhaust_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_exhaust_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_exhaust_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-2, 6.062255859375, -4.400010585784912),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_exhaust_001_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_exhaust_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_exhaust_end_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (-2, 6.062255859375, -8.8)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_r_exhaust_end_ctrl"
                        {
                            def "Wall_e_RIG_v001_r_exhaust_end_002_ctrl_offset_grp"
                            {
                                def Xform "Wall_e_RIG_v001_r_exhaust_end_002_ctrl"
                                {
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_003_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-2, 6.062255859375, -4.400010585784912),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_002_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_001_grp"
                            {
                                def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_r_exhaust_ctrl"
                                    {
                                    }
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_002_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_003_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_exhaust_ctrl_offset_003_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_exhaust_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_exhaust_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_head_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_c_head_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_c_head_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_head_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_head_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_001_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_world_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_world_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_world_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_global_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_global_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_global_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_c_head_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-32.9854, -0.00025700926, 0.00016681063),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 7.98122501373291, -1.200028896331787),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_head_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-32.98568, -0.00025936536, 0.00016318054),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-7.507887130819514e-12, 11.337092957301618, -3.3781370759549767),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_head_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-3.2436533, 0.00000435858, 0.00007690754),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-7.873011542391292e-16, 14.995737085015822, -5.752763441371625),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_c_head_003_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_c_head_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_c_head_003_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_c_head_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_head_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 16.343687057495117, -1.2000056505203247),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_head_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_c_head_ctrl"
                            {
                                float3 xformOp:rotateZXY.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -5.4276380879165815),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZXY"]

                                def Xform "Wall_e_RIG_v001_c_head_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_c_head_002_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_c_head_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_ctrl_offset_001_grp_tpac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_head_ctrl_offset_001_grp_rpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_aim_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, -0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 16.47632598876953, 20.37236191208342),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_head_aim_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_c_head_aim_ctrl"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_c_head_aim_ctrl_offset_001_grp_trpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_origin_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (0, 7.98122501373291, -1.200028896331787)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_head_origin_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_pole_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (-0.000015036620012502104, 11.981933858809278, 13.799983409103593)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_head_pole_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_aim_crv"
                    {
                        uniform token[] xformOpOrder = ["!resetXformStack!"]
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_aim_crv"
                    {
                        uniform token[] xformOpOrder = ["!resetXformStack!"]
                    }

                    def Xform "Wall_e_RIG_v001_c_head_fk_001_ctrl_offset_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (-32.9854, -0.00025700926, 0.00016681063),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 7.98122501373291, -1.200028896331787),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_head_fk_001_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_c_head_fk_001_ctrl"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (-0.0002790638, 4.8531414e-20, -0.000004327662),
                                }
                                double3 xformOp:translate.timeSamples = {
                                    1: (6.776263578034403e-21, 4.000750541687013, 0.0000021457672123581517),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def "Wall_e_RIG_v001_c_head_fk_002_ctrl_offset_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_c_head_fk_002_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_c_head_fk_002_ctrl"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (29.742027, 0.00026818295, 0.00007121271),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (-3.294459589020391e-7, 4.361711502167784, 0.000021134710508352583),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                            def "Wall_e_RIG_v001_c_head_fk_003_ctrl_offset_offset_001_grp"
                                            {
                                                def Xform "Wall_e_RIG_v001_c_head_fk_003_ctrl_offset_grp"
                                                {
                                                    def Xform "Wall_e_RIG_v001_c_head_fk_003_ctrl"
                                                    {
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_head_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_c_head_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle"
                    {
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 16.343687057495117, -6.627643738436906),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle_poc"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle_pvc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle_pole_loc"
                    {
                        double3 xformOp:translate.timeSamples = {
                            1: (-0.000015036620012502104, 11.981933858809278, 13.799983409103593),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle_pole_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_003_jnt_ik_handle_pole_loc_poc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_aim_crv_001_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (-3.2436533, 0.00000435858, 0.00007690754),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-7.872997087602239e-16, 14.995737085015827, -5.752763441371629),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_head_aim_crv_001_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_head_aim_crv_001_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_aim_crv_002_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 16.47632598876953, 20.37236191208342),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_head_aim_crv_002_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_head_aim_crv_002_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_aim_crv_001_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (-32.98568, -0.00025936536, 0.00016318054),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-7.507887132886801e-12, 11.33709295730162, -3.378137075954978),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_neck_aim_crv_001_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_aim_crv_001_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_aim_crv_002_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-0.000015036620012502104, 11.981933858809278, 13.799983409103593),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_c_neck_aim_crv_002_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_aim_crv_002_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_head_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_head_untouchables_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_eye_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_eye_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_eye_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_eye_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-2.962187, 0.000004603486, 0.00008122893),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_eye_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_eye_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_eye_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_eye_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-2.962187, 0.000004603486, 0.00008122893),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (1.6011590307346948, 17.334160463025654, -3.8729817167345537),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_eye_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_eye_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_eye_001_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_sclera_output_grp"
                            {
                                float3 xformOp:scale.timeSamples = {
                                    1: (1, 1, 1),
                                }
                                double3 xformOp:translate = (0.481264591217041, 0.6388683319091797, 3.359992301464081)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

                                def Xform "Wall_e_RIG_v001_l_iris_output_grp"
                                {
                                    float3 xformOp:scale.timeSamples = {
                                        1: (1, 1, 1),
                                    }
                                    double3 xformOp:translate = (0, 0, 0.6164608001708984)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
                                }
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_eye_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-2.962187, 0.000004603486, 0.00008122893),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_eye_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (1.6011621952056885, 18.58184242248535, 0.7981068730354309)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_l_eye_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_eye_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-2.962187, 0.000004603486, 0.00008122893),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_eye_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_untouchables_grp_scc"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_cable_curve_001_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (1.498659420418547, 17.93941879272464, -2.7393131372375557),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_cable_curve_001_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_cable_curve_001_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_cable_curve_002_loc"
                    {
                        double3 xformOp:translate = (0.4024323225021367, 18.424001693725586, -3.6645661607639877)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_l_cable_curve_002_locShape"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_cable_curve"
                    {
                        float3 xformOp:translate:pivot = (0, 0, 0.4)
                        uniform token[] xformOpOrder = ["!resetXformStack!", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_eye_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_eye_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_eye_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_eye_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-2.962187, 0.000004603486, 0.00008122893),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_eye_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_eye_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_eye_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_eye_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (2.962187, -180, 0.00008122893),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-1.596293276009519, 17.334155929958385, -3.872981459832089),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_eye_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_eye_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_eye_001_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_sclera_output_grp"
                            {
                                float3 xformOp:rotateXYZ = (0, 180, 0)
                                float3 xformOp:scale.timeSamples = {
                                    1: (1, 1, 1),
                                }
                                double3 xformOp:translate = (0.48127603530883745, 0.6388683319091797, -3.3599923014640805)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                                def Xform "Wall_e_RIG_v001_r_iris_output_grp"
                                {
                                    float3 xformOp:scale.timeSamples = {
                                        1: (1, 1, 1),
                                    }
                                    double3 xformOp:translate = (4.440892098500626e-16, 0, 0.6164608001708984)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
                                }
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_eye_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-2.962187, 0.000004603486, 0.00008122893),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_eye_ctrl_offset_grp"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.596290111541748, 18.58184242248535, 0.7981068730354309)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_eye_ctrl"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_eye_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-2.962187, 0.000004603486, 0.00008122893),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.00002321562212632825, -1.2640999097968049, -3.7097702695743204),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_eye_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_untouchables_grp_scc"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_cable_curve_001_loc"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, -1.4033418e-14, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-1.5210537992844466, 17.93941879272464, -2.7393131372375574),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_cable_curve_001_locShape"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_cable_curve_001_loc_pac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_cable_curve_002_loc"
                    {
                        double3 xformOp:translate = (-0.40243232250213623, 18.424001693725586, -3.6645661607639877)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_r_cable_curve_002_locShape"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_cable_curve"
                    {
                        float3 xformOp:translate:pivot = (0, 0, 0.4)
                        uniform token[] xformOpOrder = ["!resetXformStack!", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_thread_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_thread_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_thread_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_thread_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_001_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_pos_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_pos_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_pos_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_orient_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_l_thread_orient_input_grp_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_pivot_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_pivot_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_pivot_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_thread_section_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (55.32575, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 1.3209016666666669, -4.407573333333334),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_001_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_001_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (5.886513, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.34982345677778065, -3.7358123646427943),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_002_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_002_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.2237405002768401, -2.5129176620092335),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_003_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_003_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.22373000000000004, -1.274515438623953),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_004_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_004_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_005_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.22372999999999998, -0.03597944678237184),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_005_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_005_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_006_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0.010773777, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.22373, 1.202523154420014),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_006_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_006_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_007_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-3.9181554, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.2234971148979489, 2.441024148845661),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_007_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_007_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_008_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-52.226322, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 0.3076237413295068, 3.6693023091218153),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_008_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_008_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_009_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-110.919014, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 1.2434170375331353, 4.394489654545543),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_009_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_009_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_010_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-132.01744, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 2.354941040117212, 3.9696172728327364),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_010_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_010_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_011_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-132.08318, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 3.274985099050138, 3.140698779458746),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_011_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_011_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_012_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-137.84004, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 4.194122979834265, 2.3106838919375914),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_012_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_012_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_013_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-140.0276, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 5.0241996588394775, 1.3939500608631221),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_013_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_013_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_014_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-140.29703, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 5.8198545831713355, 0.44479711847395964),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_014_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_014_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_015_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-172.4497, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 6.610952490590563, -0.5079843464720791),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_015_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_015_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_016_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (130.7548, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 6.766295191545285, -1.6799779467492264),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_016_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_016_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_017_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (114.873634, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 5.856447768689783, -2.464085490059758),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_017_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_017_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_018_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (115.005104, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 4.732870428245861, -2.9850044953500072),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_018_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_018_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_019_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (114.650604, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 3.610491295080795, -3.5085001499749597),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_019_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_019_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_section_020_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (108.19292, -0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.99962, 2.4849719048315144, -4.0250060144647),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_section_020_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_section_020_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_wheel_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-3.58, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617852161824, 1.418412713168172, -3.200982376329268),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_wheel_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_wheel_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_wheel_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (7.9, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617852161825, 1.418412677254047, 3.1990587568283075),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_wheel_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_wheel_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_wheel_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-29.16, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617852161823, 3.5904705802183443, 1.225435808904802),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_wheel_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_wheel_003_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_wheel_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (7.9, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.9996178521618235, 5.647393850443867, -1.225909873239363),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_wheel_004_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_wheel_004_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617905328242, 2.2199244499206543, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999618053436279, 4.615654402237103, 0.0003186791944935763),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thread_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_thread_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (5.999617905328242, 2.2199244499206543, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_thread_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_l_thread_ctrl"
                            {
                                def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_001_grp"
                                {
                                    float3 xformOp:rotateXYZ = (-3.58, 0, 0)
                                    double3 xformOp:translate = (-5.316641793484678e-8, -0.8015117367524822, -3.200982376329268)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_002_grp"
                                {
                                    float3 xformOp:rotateXYZ = (7.9, -0, 0)
                                    double3 xformOp:translate = (-5.316641704666836e-8, -0.8015117726666072, 3.1990587568283075)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_002_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_003_grp"
                                {
                                    float3 xformOp:rotateXYZ = (-29.16, 0, 0)
                                    double3 xformOp:translate.timeSamples = {
                                        1: (-5.3166418823025197e-8, 1.37054613029769, 1.2254358089048016),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_003_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_inverse_003_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (-0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_l_wheel_rot_003_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                        }
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_004_grp"
                                {
                                    float3 xformOp:rotateXYZ = (7.9, -0, 0)
                                    double3 xformOp:translate.timeSamples = {
                                        1: (-5.316641793484678e-8, 3.427469400523213, -1.2259098732393632),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_offset_004_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_l_wheel_rot_inverse_004_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (-0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_l_wheel_rot_004_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                        }
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_wheels_tilt_ctrl_offset_grp"
                                {
                                    double3 xformOp:translate = (1.4810803694587094e-7, 2.395729952316449, 0.0003186791944935763)
                                    uniform token[] xformOpOrder = ["xformOp:translate"]

                                    def Xform "Wall_e_RIG_v001_l_wheels_tilt_ctrl"
                                    {
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_ctrl_offset_001_grp_tpac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_ctrl_offset_001_grp_rpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_joints_grp"
                {
                    token visibility = "invisible"
                }

                def Xform "Wall_e_RIG_v001_l_thread_untouchables_grp"
                {
                    token visibility = "invisible"

                    def Xform "Wall_e_RIG_v001_l_thread_crv"
                    {
                        float3 xformOp:translate:pivot = (5.999618, 2.2199244, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_l_thread_wrap_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(5.644626, 0.22372997, -4.407573), (6.3546124, 6.85449, 4.3858185)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 1, 17, 16, 1, 2, 18, 17, 2, 3, 19, 18, 3, 4, 20, 19, 4, 5, 21, 20, 5, 6, 22, 21, 6, 7, 23, 22, 7, 8, 24, 23, 8, 9, 25, 24, 26, 25, 9, 10, 10, 11, 27, 26, 11, 12, 28, 27, 12, 13, 29, 28, 13, 14, 30, 29, 14, 15, 31, 30, 15, 0, 16, 31],
                        }
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points.timeSamples = {
                            1: [(5.6446285, 0.22372997, 3.2617383), (5.6446285, 0.26242167, -3.4485316), (5.6446285, 0.45153508, -3.9187083), (5.6446285, 0.83016825, -4.25473), (5.6446285, 1.3209016, -4.407573), (5.6446285, 1.8248318, -4.3211083), (5.6446285, 6.4790754, -2.1033168), (5.6446285, 6.76709, -1.6779984), (5.6446285, 6.85449, -1.174637), (5.6446285, 6.7226315, -0.6791079), (5.644626, 4.217462, 2.2908084), (5.6446285, 2.1144488, 4.172405), (5.6446285, 1.6509199, 4.3858185), (5.6446285, 1.1363, 4.373242), (5.6446285, 0.67720664, 4.1522365), (5.6446285, 0.34625006, 3.7580717), (6.3546124, 0.22372997, 3.2617383), (6.3546124, 0.26242167, -3.4485316), (6.3546124, 0.45153508, -3.9187083), (6.3546124, 0.83016825, -4.25473), (6.3546124, 1.3209016, -4.407573), (6.3546124, 1.8248318, -4.3211083), (6.3546124, 6.4790754, -2.1033168), (6.3546124, 6.76709, -1.6779984), (6.3546124, 6.85449, -1.174637), (6.3546124, 6.7226315, -0.6791079), (6.35461, 4.217462, 2.2908084), (6.3546124, 2.1144488, 4.172405), (6.3546124, 1.6509199, 4.3858185), (6.3546124, 1.1363, 4.373242), (6.3546124, 0.67720664, 4.1522365), (6.3546124, 0.34625006, 3.7580717)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0.375, 0.3125), (0.390625, 0.3125), (0.40625, 0.3125), (0.421875, 0.3125), (0.4375, 0.3125), (0.453125, 0.3125), (0.46875, 0.3125), (0.484375, 0.3125), (0.5, 0.3125), (0.515625, 0.3125), (0.53125, 0.3125), (0.546875, 0.3125), (0.5625, 0.3125), (0.578125, 0.3125), (0.59375, 0.3125), (0.609375, 0.3125), (0.625, 0.3125), (0.375, 0.68843985), (0.390625, 0.68843985), (0.40625, 0.68843985), (0.421875, 0.68843985), (0.4375, 0.68843985), (0.453125, 0.68843985), (0.46875, 0.68843985), (0.484375, 0.68843985), (0.5, 0.68843985), (0.515625, 0.68843985), (0.53125, 0.68843985), (0.546875, 0.68843985), (0.5625, 0.68843985), (0.578125, 0.68843985), (0.59375, 0.68843985), (0.609375, 0.68843985), (0.625, 0.68843985)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 1, 18, 17, 1, 2, 19, 18, 2, 3, 20, 19, 3, 4, 21, 20, 4, 5, 22, 21, 5, 6, 23, 22, 6, 7, 24, 23, 7, 8, 25, 24, 8, 9, 26, 25, 27, 26, 9, 10, 10, 11, 28, 27, 11, 12, 29, 28, 12, 13, 30, 29, 13, 14, 31, 30, 14, 15, 32, 31, 15, 16, 33, 32],
                        }
                    }

                    def Mesh "Wall_e_RIG_v001_l_thread_wrap_meshBase" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(5.644626, 0.22372997, -4.407573), (6.3546124, 6.85449, 4.3858185)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                        int[] faceVertexIndices = [0, 1, 17, 16, 1, 2, 18, 17, 2, 3, 19, 18, 3, 4, 20, 19, 4, 5, 21, 20, 5, 6, 22, 21, 6, 7, 23, 22, 7, 8, 24, 23, 8, 9, 25, 24, 26, 25, 9, 10, 10, 11, 27, 26, 11, 12, 28, 27, 12, 13, 29, 28, 13, 14, 30, 29, 14, 15, 31, 30, 15, 0, 16, 31]
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points = [(5.6446285, 0.22372997, 3.2617383), (5.6446285, 0.26242167, -3.4485316), (5.6446285, 0.45153508, -3.9187083), (5.6446285, 0.83016825, -4.25473), (5.6446285, 1.3209016, -4.407573), (5.6446285, 1.8248318, -4.3211083), (5.6446285, 6.4790754, -2.1033168), (5.6446285, 6.76709, -1.6779984), (5.6446285, 6.85449, -1.174637), (5.6446285, 6.7226315, -0.6791079), (5.644626, 4.217462, 2.2908084), (5.6446285, 2.1144488, 4.172405), (5.6446285, 1.6509199, 4.3858185), (5.6446285, 1.1363, 4.373242), (5.6446285, 0.67720664, 4.1522365), (5.6446285, 0.34625006, 3.7580717), (6.3546124, 0.22372997, 3.2617383), (6.3546124, 0.26242167, -3.4485316), (6.3546124, 0.45153508, -3.9187083), (6.3546124, 0.83016825, -4.25473), (6.3546124, 1.3209016, -4.407573), (6.3546124, 1.8248318, -4.3211083), (6.3546124, 6.4790754, -2.1033168), (6.3546124, 6.76709, -1.6779984), (6.3546124, 6.85449, -1.174637), (6.3546124, 6.7226315, -0.6791079), (6.35461, 4.217462, 2.2908084), (6.3546124, 2.1144488, 4.172405), (6.3546124, 1.6509199, 4.3858185), (6.3546124, 1.1363, 4.373242), (6.3546124, 0.67720664, 4.1522365), (6.3546124, 0.34625006, 3.7580717)]
                        texCoord2f[] primvars:st = [(0.375, 0.3125), (0.390625, 0.3125), (0.40625, 0.3125), (0.421875, 0.3125), (0.4375, 0.3125), (0.453125, 0.3125), (0.46875, 0.3125), (0.484375, 0.3125), (0.5, 0.3125), (0.515625, 0.3125), (0.53125, 0.3125), (0.546875, 0.3125), (0.5625, 0.3125), (0.578125, 0.3125), (0.59375, 0.3125), (0.609375, 0.3125), (0.625, 0.3125), (0.375, 0.68843985), (0.390625, 0.68843985), (0.40625, 0.68843985), (0.421875, 0.68843985), (0.4375, 0.68843985), (0.453125, 0.68843985), (0.46875, 0.68843985), (0.484375, 0.68843985), (0.5, 0.68843985), (0.515625, 0.68843985), (0.53125, 0.68843985), (0.546875, 0.68843985), (0.5625, 0.68843985), (0.578125, 0.68843985), (0.59375, 0.68843985), (0.609375, 0.68843985), (0.625, 0.68843985)] (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        int[] primvars:st:indices = [0, 1, 18, 17, 1, 2, 19, 18, 2, 3, 20, 19, 3, 4, 21, 20, 4, 5, 22, 21, 5, 6, 23, 22, 6, 7, 24, 23, 7, 8, 25, 24, 8, 9, 26, 25, 27, 26, 9, 10, 10, 11, 28, 27, 11, 12, 29, 28, 12, 13, 30, 29, 13, 14, 31, 30, 14, 15, 32, 31, 15, 16, 33, 32]
                        token visibility = "invisible"
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_loc_grp"
                    {
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        uniform token[] xformOpOrder = ["xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_l_thread_loc"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617905328242, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_l_thread_locShape"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_orient_loc"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_l_thread_orient_locShape"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_l_thread_orient_loc_orc"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_loc_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_forward_loc"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (5.999617905328242, 0, 1),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_l_thread_forward_locShape"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thread_forward_loc_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thread_loc_grp_scc"
                        {
                        }
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_thread_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_thread_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_thread_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_thread_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_001_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_pos_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_pos_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_pos_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_orient_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_r_thread_orient_input_grp_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_pivot_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_pivot_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_pivot_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_thread_section_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (55.32575, -0.0043289484, 0.0029946284),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 1.3209016666666669, -4.407573333333334),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_001_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_001_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (5.886513, -0.0009953477, 0.009654004),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.3498234567777808, -3.7358123646427943),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_002_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_002_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-8.802144e-12, -9.2478345e-8, 0.010906893),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.22374050027684006, -2.512917662009234),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_003_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_003_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0.0109069515),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.22373000000000004, -1.2745154386239523),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_004_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_004_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_005_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, -0, 0.0109069515),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.22373000000000004, -0.03597944678237089),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_005_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_005_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_006_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0.010773777, -0.0000020511523, 0.010908187),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.22373000000000004, 1.2025231544200148),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_006_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_006_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_007_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-3.9181552, 0.00068922754, 0.010062964),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.22349711489794893, 2.4410241488456634),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_007_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_007_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_008_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-52.226322, 0.0042266417, 0.0032754105),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 0.30762374132950754, 3.669302309121818),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_008_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_008_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_009_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-110.919014, 0.005414367, -0.0020696046),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 1.2434170375331353, 4.394489654545543),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_009_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_009_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_010_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-132.01744, 0.0053216834, -0.004794598),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 2.354941040117213, 3.9696172728327412),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_010_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_010_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_011_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-132.08318, 0.005318829, -0.0048030955),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 3.2749850990501352, 3.140698779458748),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_011_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_011_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_012_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-137.84004, 0.0048480257, -0.0053541427),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 4.194122979834264, 2.310683891937595),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_012_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_012_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_013_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-140.0276, 0.0045940815, -0.0054803737),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 5.024199658839474, 1.3939500608631252),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_013_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_013_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_014_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-140.29703, 0.0045544407, -0.0054852716),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 5.819854583171335, 0.4447971184739624),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_014_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_014_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_015_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-172.4497, 0.0006674467, -0.0050355974),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 6.610952490590563, -0.5079843464720788),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_015_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_015_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_016_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (130.7548, -0.0038892853, -0.0033517906),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 6.766295191545285, -1.6799779467492266),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_016_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_016_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_017_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (114.873634, -0.005246272, -0.002432305),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 5.856447768689783, -2.464085490059758),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_017_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_017_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_018_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (115.005104, -0.0052374215, -0.0024428177),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 4.732870428245861, -2.9850044953500072),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_018_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_018_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_019_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (114.650604, -0.0052506146, -0.0024095306),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 3.610491295080795, -3.5085001499749597),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_019_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_019_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_section_020_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (108.19292, -0.005294698, -0.0017400826),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-5.99962, 2.4849719048315144, -4.0250060144647),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_section_020_output_grp_scc"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_section_020_output_grp_aic"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_wheel_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-3.58, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6.031341303342147, 1.4191510887145995, -3.200521266460418),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_wheel_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_wheel_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_wheel_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (7.9, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6.03134130334215, 1.4189267424885905, 3.199519836902618),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_wheel_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_wheel_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_wheel_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-29.16, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6.031341303342147, 3.5912089557647717, 1.2258969187736517),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_wheel_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_wheel_003_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_wheel_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (7.9, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6.031341303342147, 5.648132225990296, -1.2254487633705142),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_wheel_004_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_wheel_004_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6, 2.2199244499206543, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-6.031341075897217, 4.616392813697658, 0.00029982266907246924),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thread_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_thread_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-6, 2.2199244499206543, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_thread_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_r_thread_ctrl"
                            {
                                def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_001_grp"
                                {
                                    float3 xformOp:rotateXYZ = (-3.58, 0, 0)
                                    double3 xformOp:translate = (-0.03134130334214724, -0.8007733612060548, -3.200521266460418)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_002_grp"
                                {
                                    float3 xformOp:rotateXYZ = (7.9, -0, 0)
                                    double3 xformOp:translate = (-0.03134130334214991, -0.8009977074320638, 3.199519836902618)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_002_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_003_grp"
                                {
                                    float3 xformOp:rotateXYZ = (-29.16, 0, 0)
                                    double3 xformOp:translate.timeSamples = {
                                        1: (-0.03134130334214813, 1.371284505844117, 1.2258969187736515),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_003_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_inverse_003_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (-0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_r_wheel_rot_003_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                        }
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_004_grp"
                                {
                                    float3 xformOp:rotateXYZ = (7.9, -0, 0)
                                    double3 xformOp:translate.timeSamples = {
                                        1: (-0.03134130334214902, 3.428207776069641, -1.2254487633705144),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_offset_004_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_r_wheel_rot_inverse_004_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (-0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_r_wheel_rot_004_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
                                        }
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_wheels_tilt_ctrl_offset_grp"
                                {
                                    double3 xformOp:translate = (-0.0313410758972168, 2.3964683637770037, 0.00029982266907246924)
                                    uniform token[] xformOpOrder = ["xformOp:translate"]

                                    def Xform "Wall_e_RIG_v001_r_wheels_tilt_ctrl"
                                    {
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_ctrl_offset_001_grp_tpac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_ctrl_offset_001_grp_rpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_joints_grp"
                {
                    token visibility = "invisible"
                }

                def Xform "Wall_e_RIG_v001_r_thread_untouchables_grp"
                {
                    token visibility = "invisible"

                    def Xform "Wall_e_RIG_v001_r_thread_crv"
                    {
                        float3 xformOp:translate:pivot = (-6, 2.2199244, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_r_thread_wrap_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(-6.3546124, 0.22372997, -4.407573), (-5.644626, 6.85449, 4.3858185)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 16, 17, 1, 1, 17, 18, 2, 2, 18, 19, 3, 3, 19, 20, 4, 4, 20, 21, 5, 5, 21, 22, 6, 6, 22, 23, 7, 7, 23, 24, 8, 8, 24, 25, 9, 10, 9, 25, 26, 11, 10, 26, 27, 11, 27, 28, 12, 12, 28, 29, 13, 13, 29, 30, 14, 14, 30, 31, 15, 15, 31, 16, 0],
                        }
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points.timeSamples = {
                            1: [(-5.6446285, 0.22372997, 3.2617383), (-5.6446285, 0.26242167, -3.4485316), (-5.6446285, 0.45153508, -3.9187083), (-5.6446285, 0.83016825, -4.25473), (-5.6446285, 1.3209016, -4.407573), (-5.6446285, 1.8248318, -4.3211083), (-5.6446285, 6.4790754, -2.1033168), (-5.6446285, 6.76709, -1.6779984), (-5.6446285, 6.85449, -1.174637), (-5.6446285, 6.7226315, -0.6791079), (-5.644626, 4.217462, 2.2908084), (-5.6446285, 2.1144488, 4.172405), (-5.6446285, 1.6509199, 4.3858185), (-5.6446285, 1.1363, 4.373242), (-5.6446285, 0.67720664, 4.1522365), (-5.6446285, 0.34625006, 3.7580717), (-6.3546124, 0.22372997, 3.2617383), (-6.3546124, 0.26242167, -3.4485316), (-6.3546124, 0.45153508, -3.9187083), (-6.3546124, 0.83016825, -4.25473), (-6.3546124, 1.3209016, -4.407573), (-6.3546124, 1.8248318, -4.3211083), (-6.3546124, 6.4790754, -2.1033168), (-6.3546124, 6.76709, -1.6779984), (-6.3546124, 6.85449, -1.174637), (-6.3546124, 6.7226315, -0.6791079), (-6.35461, 4.217462, 2.2908084), (-6.3546124, 2.1144488, 4.172405), (-6.3546124, 1.6509199, 4.3858185), (-6.3546124, 1.1363, 4.373242), (-6.3546124, 0.67720664, 4.1522365), (-6.3546124, 0.34625006, 3.7580717)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0.375, 0.3125), (0.390625, 0.3125), (0.40625, 0.3125), (0.421875, 0.3125), (0.4375, 0.3125), (0.453125, 0.3125), (0.46875, 0.3125), (0.484375, 0.3125), (0.5, 0.3125), (0.515625, 0.3125), (0.53125, 0.3125), (0.546875, 0.3125), (0.5625, 0.3125), (0.578125, 0.3125), (0.59375, 0.3125), (0.609375, 0.3125), (0.625, 0.3125), (0.375, 0.68843985), (0.390625, 0.68843985), (0.40625, 0.68843985), (0.421875, 0.68843985), (0.4375, 0.68843985), (0.453125, 0.68843985), (0.46875, 0.68843985), (0.484375, 0.68843985), (0.5, 0.68843985), (0.515625, 0.68843985), (0.53125, 0.68843985), (0.546875, 0.68843985), (0.5625, 0.68843985), (0.578125, 0.68843985), (0.59375, 0.68843985), (0.609375, 0.68843985), (0.625, 0.68843985)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 17, 18, 1, 1, 18, 19, 2, 2, 19, 20, 3, 3, 20, 21, 4, 4, 21, 22, 5, 5, 22, 23, 6, 6, 23, 24, 7, 7, 24, 25, 8, 8, 25, 26, 9, 10, 9, 26, 27, 11, 10, 27, 28, 11, 28, 29, 12, 12, 29, 30, 13, 13, 30, 31, 14, 14, 31, 32, 15, 15, 32, 33, 16],
                        }
                    }

                    def Mesh "Wall_e_RIG_v001_r_thread_wrap_meshBase" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(-6.3546124, 0.22372997, -4.407573), (-5.644626, 6.85449, 4.3858185)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                        int[] faceVertexIndices = [0, 16, 17, 1, 1, 17, 18, 2, 2, 18, 19, 3, 3, 19, 20, 4, 4, 20, 21, 5, 5, 21, 22, 6, 6, 22, 23, 7, 7, 23, 24, 8, 8, 24, 25, 9, 10, 9, 25, 26, 11, 10, 26, 27, 11, 27, 28, 12, 12, 28, 29, 13, 13, 29, 30, 14, 14, 30, 31, 15, 15, 31, 16, 0]
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points = [(-5.6446285, 0.22372997, 3.2617383), (-5.6446285, 0.26242167, -3.4485316), (-5.6446285, 0.45153508, -3.9187083), (-5.6446285, 0.83016825, -4.25473), (-5.6446285, 1.3209016, -4.407573), (-5.6446285, 1.8248318, -4.3211083), (-5.6446285, 6.4790754, -2.1033168), (-5.6446285, 6.76709, -1.6779984), (-5.6446285, 6.85449, -1.174637), (-5.6446285, 6.7226315, -0.6791079), (-5.644626, 4.217462, 2.2908084), (-5.6446285, 2.1144488, 4.172405), (-5.6446285, 1.6509199, 4.3858185), (-5.6446285, 1.1363, 4.373242), (-5.6446285, 0.67720664, 4.1522365), (-5.6446285, 0.34625006, 3.7580717), (-6.3546124, 0.22372997, 3.2617383), (-6.3546124, 0.26242167, -3.4485316), (-6.3546124, 0.45153508, -3.9187083), (-6.3546124, 0.83016825, -4.25473), (-6.3546124, 1.3209016, -4.407573), (-6.3546124, 1.8248318, -4.3211083), (-6.3546124, 6.4790754, -2.1033168), (-6.3546124, 6.76709, -1.6779984), (-6.3546124, 6.85449, -1.174637), (-6.3546124, 6.7226315, -0.6791079), (-6.35461, 4.217462, 2.2908084), (-6.3546124, 2.1144488, 4.172405), (-6.3546124, 1.6509199, 4.3858185), (-6.3546124, 1.1363, 4.373242), (-6.3546124, 0.67720664, 4.1522365), (-6.3546124, 0.34625006, 3.7580717)]
                        texCoord2f[] primvars:st = [(0.375, 0.3125), (0.390625, 0.3125), (0.40625, 0.3125), (0.421875, 0.3125), (0.4375, 0.3125), (0.453125, 0.3125), (0.46875, 0.3125), (0.484375, 0.3125), (0.5, 0.3125), (0.515625, 0.3125), (0.53125, 0.3125), (0.546875, 0.3125), (0.5625, 0.3125), (0.578125, 0.3125), (0.59375, 0.3125), (0.609375, 0.3125), (0.625, 0.3125), (0.375, 0.68843985), (0.390625, 0.68843985), (0.40625, 0.68843985), (0.421875, 0.68843985), (0.4375, 0.68843985), (0.453125, 0.68843985), (0.46875, 0.68843985), (0.484375, 0.68843985), (0.5, 0.68843985), (0.515625, 0.68843985), (0.53125, 0.68843985), (0.546875, 0.68843985), (0.5625, 0.68843985), (0.578125, 0.68843985), (0.59375, 0.68843985), (0.609375, 0.68843985), (0.625, 0.68843985)] (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        int[] primvars:st:indices = [0, 17, 18, 1, 1, 18, 19, 2, 2, 19, 20, 3, 3, 20, 21, 4, 4, 21, 22, 5, 5, 22, 23, 6, 6, 23, 24, 7, 7, 24, 25, 8, 8, 25, 26, 9, 10, 9, 26, 27, 11, 10, 27, 28, 11, 28, 29, 12, 12, 29, 30, 13, 13, 30, 31, 14, 14, 31, 32, 15, 15, 32, 33, 16]
                        token visibility = "invisible"
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_loc_grp"
                    {
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        uniform token[] xformOpOrder = ["xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_thread_loc"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (-6, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_r_thread_locShape"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_orient_loc"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_r_thread_orient_locShape"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_r_thread_orient_loc_orc"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_loc_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_forward_loc"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (-6, 0, 1),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_r_thread_forward_locShape"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thread_forward_loc_pac"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thread_loc_grp_scc"
                        {
                        }
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_arm_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_arm_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_arm_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_arm_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_001_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_world_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_world_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_world_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_global_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_global_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_global_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_arm_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (3.199838876724243, 9.263011932373047, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (3.199838876724243, 9.263011932373047, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (4.800081729888916, 9.263097763061523, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_003_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_003_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (9.600072860717773, 9.263096809387207, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_004_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_004_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_004_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_005_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (9.600072860717773, 9.263096809387207, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_arm_005_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_005_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_005_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_arm_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_offset_001_grp"
                    {
                        double3 xformOp:translate.timeSamples = {
                            1: (3.199838876724243, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_offset_001_grp_poc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (3.199838876724243, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_shift_ctrl_extend_grp"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_l_arm_fk_ctrl_offset_001_grp"
                            {
                                token visibility = "invisible"
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                double3 xformOp:translate = (1.6002428531646729, 0.0000858306884765625, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_l_arm_fk_ctrl_offset_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_l_arm_fk_ctrl"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_arm_fk_ctrl_offset_001_grp_rpac"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_ik_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                double3 xformOp:translate = (1.6002428531646729, 0.0000858306884765625, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_l_arm_ik_grp_aic"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_l_arm_move_start_grp"
                                {
                                    double3 xformOp:translate = (7.99998140335083, -9.5367431640625e-7, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate"]

                                    def Xform "Wall_e_RIG_v001_l_arm_move_end_grp"
                                    {
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:translate"]

                                        def Xform "Wall_e_RIG_v001_l_arm_move_end_grp_poc"
                                        {
                                        }
                                    }
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_blend_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                double3 xformOp:translate = (1.6002428531646729, 0.0000858306884765625, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_l_arm_blend_grp_orc"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_l_upper_arm_twist_ctrl_offset_001_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, -0, 0),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_upper_arm_twist_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_l_upper_arm_twist_ctrl"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_l_upper_arm_twist_ctrl_offset_001_grp_aic"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_lower_arm_twist_ctrl_offset_grp"
                                {
                                    double3 xformOp:translate = (4.799991130828857, -9.5367431640625e-7, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate"]

                                    def Xform "Wall_e_RIG_v001_l_lower_arm_twist_ctrl"
                                    {
                                        def Xform "Wall_e_RIG_v001_l_arm_move_extend_grp"
                                        {
                                            double3 xformOp:translate.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:translate"]

                                            def Xform "Wall_e_RIG_v001_l_arm_option_ctrl_offset_001_grp"
                                            {
                                                double3 xformOp:translate = (3.1999902725219727, 3.736903190612793, 0)
                                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                                def Xform "Wall_e_RIG_v001_l_arm_option_ctrl_offset_grp"
                                                {
                                                    def Xform "Wall_e_RIG_v001_l_arm_option_ctrl"
                                                    {
                                                    }
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_match_ctrl_offset_grp"
                                            {
                                                double3 xformOp:translate = (3.1999902725219727, 0, 0)
                                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                                def Xform "Wall_e_RIG_v001_l_arm_match_ctrl"
                                                {
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_ik_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (12.800063133239746, 9.263096809387207, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_arm_ik_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_l_arm_ik_ctrl"
                            {
                                def "Wall_e_RIG_v001_l_arm_ik_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_l_arm_ik_002_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_l_arm_ik_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_ik_ctrl_offset_001_grp_tpac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_ik_ctrl_offset_001_grp_rpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_arm_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_arm_shift_base_grp"
                    {
                        double3 xformOp:translate = (3.199838876724243, 9.263011932373047, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_shift_slide_parent_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (3.199838876724243, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_arm_shift_slide_grp"
                        {
                            def Xform "Wall_e_RIG_v001_l_arm_shift_slide_grp_geometryConstraint1"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_shift_slide_parent_grp_trpac"
                        {
                        }
                    }

                    def Mesh "Wall_e_RIG_v001_l_arm_slide_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(3.1998389, 9.213012, -2), (3.1998389, 9.313012, 2)]
                        int[] faceVertexCounts = [4]
                        int[] faceVertexIndices = [0, 1, 3, 2]
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points = [(3.1998389, 9.313012, 2), (3.1998389, 9.213012, 2), (3.1998389, 9.313012, -2), (3.1998389, 9.213012, -2)]
                        texCoord2f[] primvars:st = [(0, 0), (0.025, 0), (0, 1), (0.025, 1)] (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        int[] primvars:st:indices = [0, 1, 3, 2]
                    }

                    def Mesh "Wall_e_RIG_v001_l_arm_extend_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(-0.30000004, -6.6613384e-17, -0.3), (0.30000004, 6.6613384e-17, 0.3)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 1, 3, 2],
                        }
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points.timeSamples = {
                            1: [(-0.30000004, -6.6613384e-17, 0.3), (0.30000004, -6.6613384e-17, 0.3), (-0.30000004, 6.6613384e-17, -0.3), (0.30000004, 6.6613384e-17, -0.3)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0, 0), (1, 0), (0, 1), (1, 1)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 1, 3, 2],
                        }
                        double3 xformOp:translate = (4.800081729888916, 9.263097763061523, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_lattice_handle"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (0.6, 0.6, 0.6),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (4.800081729888916, 9.263097763061523, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_l_arm_lattice_handle_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_lattice_handle_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_lattice_base"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (0.6, 0.6, 0.6),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (4.800081729888916, 9.263097763061523, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_l_arm_lattice_base_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_lattice_base_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_untouchables_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_arm_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_arm_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_arm_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_arm_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_001_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_world_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_world_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_world_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_global_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_global_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_global_input_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_body_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_body_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_body_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_arm_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 180, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-3.2, 9.263011932373047, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 180, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-3.2, 9.263011932373047, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (180, -0.0000068301892, 0.0000136603785),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-4.8, 9.263097763061522, -5.293955920339334e-23),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_003_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_003_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_004_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-180, -0.0000034150946, 0.0000068301892),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-9.599999999999842, 9.263096237182614, -2.861022946279643e-7),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_004_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_004_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_004_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_005_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-180, -0.0000034150946, 0.0000068301892),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-9.599999999999842, 9.263096237182614, -2.861022946279643e-7),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_arm_005_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_005_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_005_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_arm_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ = (180, 7.016709e-15, -7.016709e-15)
                        float3 xformOp:scale = (1, 1, -1)
                        double3 xformOp:translate.timeSamples = {
                            1: (-3.2, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_offset_001_grp_poc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 180, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-3.2, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_shift_ctrl_extend_grp"
                        {
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_r_arm_fk_ctrl_offset_001_grp"
                            {
                                token visibility = "invisible"
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (7.016709e-15, 7.016709e-15, 180),
                                }
                                double3 xformOp:translate = (1.5999999999999996, 0.0000858306884765625, -1.9594348786357647e-16)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_r_arm_fk_ctrl_offset_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_r_arm_fk_ctrl"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_arm_fk_ctrl_offset_001_grp_rpac"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_ik_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (7.016711e-15, 0.0000068301892, 179.99998),
                                }
                                double3 xformOp:translate = (1.5999999999999996, 0.0000858306884765625, -1.9594348786357647e-16)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_r_arm_ik_grp_aic"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_r_arm_move_start_grp"
                                {
                                    float3 xformOp:rotateXYZ = (-1.6214273e-12, -0.0000068301892, 0.0000136603785)
                                    double3 xformOp:translate = (-7.999999999999943, -9.5367431640625e-7, -9.53674316406248e-7)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_arm_move_end_grp"
                                    {
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:translate"]

                                        def Xform "Wall_e_RIG_v001_r_arm_move_end_grp_poc"
                                        {
                                        }
                                    }
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_blend_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0.0000068301892, 179.99998),
                                }
                                double3 xformOp:translate = (1.5999999999999996, 0.0000858306884765625, -1.9594348786357647e-16)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                def Xform "Wall_e_RIG_v001_r_arm_blend_grp_orc"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_r_upper_arm_twist_ctrl_offset_001_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, -0, 0),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_upper_arm_twist_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_r_upper_arm_twist_ctrl"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_r_upper_arm_twist_ctrl_offset_001_grp_aic"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_lower_arm_twist_ctrl_offset_grp"
                                {
                                    float3 xformOp:rotateXYZ = (0, -0.0000034150946, 0.0000068301892)
                                    double3 xformOp:translate = (-4.80000000000007, 3.814697286941282e-7, -2.861022952157948e-7)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_lower_arm_twist_ctrl"
                                    {
                                        def Xform "Wall_e_RIG_v001_r_arm_move_extend_grp"
                                        {
                                            double3 xformOp:translate.timeSamples = {
                                                1: (-0, 0, 0),
                                            }
                                            uniform token[] xformOpOrder = ["xformOp:translate"]

                                            def Xform "Wall_e_RIG_v001_r_arm_option_ctrl_offset_001_grp"
                                            {
                                                float3 xformOp:rotateXYZ = (180, -0.0000034150946, 0.0000068301892)
                                                double3 xformOp:translate = (-3.199999554526471, -3.7369041442870845, -4.7683707805637705e-7)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                                def Xform "Wall_e_RIG_v001_r_arm_option_ctrl_offset_grp"
                                                {
                                                    def Xform "Wall_e_RIG_v001_r_arm_option_ctrl"
                                                    {
                                                    }
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_match_ctrl_offset_grp"
                                            {
                                                float3 xformOp:rotateXYZ = (180, -0.0000034150946, 0.0000068301892)
                                                double3 xformOp:translate = (-3.2000000000000455, -9.536743181826068e-7, -4.7683715771325943e-7)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                                                def Xform "Wall_e_RIG_v001_r_arm_match_ctrl"
                                                {
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_ik_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-12.8, 9.263096809387207, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_arm_ik_ctrl_offset_grp"
                        {
                            def Xform "Wall_e_RIG_v001_r_arm_ik_ctrl"
                            {
                                def "Wall_e_RIG_v001_r_arm_ik_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_r_arm_ik_002_ctrl_offset_grp"
                                    {
                                        def Xform "Wall_e_RIG_v001_r_arm_ik_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_ik_ctrl_offset_001_grp_tpac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_ik_ctrl_offset_001_grp_rpac"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_controls_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_arm_untouchables_grp"
                {
                    token visibility = "invisible"
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_arm_shift_base_grp"
                    {
                        float3 xformOp:rotateXYZ = (180, 7.016709e-15, -7.016709e-15)
                        double3 xformOp:translate = (-3.2, 9.263011932373047, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_shift_slide_parent_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (180, 0, 0),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-3.2, 9.263011932373047, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_arm_shift_slide_grp"
                        {
                            double3 xformOp:translate = (0.00016112327575701357, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate"]

                            def Xform "Wall_e_RIG_v001_r_arm_shift_slide_grp_geometryConstraint1"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_shift_slide_parent_grp_trpac"
                        {
                        }
                    }

                    def Mesh "Wall_e_RIG_v001_r_arm_slide_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(-3.1998389, 9.213012, -2), (-3.1998389, 9.313012, 2)]
                        int[] faceVertexCounts = [4]
                        int[] faceVertexIndices = [0, 2, 3, 1]
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points = [(-3.1998389, 9.313012, 2), (-3.1998389, 9.213012, 2), (-3.1998389, 9.313012, -2), (-3.1998389, 9.213012, -2)]
                        texCoord2f[] primvars:st = [(0, 0), (0.025, 0), (0, 1), (0.025, 1)] (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        int[] primvars:st:indices = [0, 2, 3, 1]
                    }

                    def Mesh "Wall_e_RIG_v001_r_arm_extend_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(-0.30000004, -4.2188472e-16, -0.3), (0.3, -2.8865798e-16, 0.3)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 1, 3, 2],
                        }
                        rel material:binding = </Cache1/mtl/initialShadingGroup>
                        point3f[] points.timeSamples = {
                            1: [(-0.30000004, -3.5527135e-16, 0.3), (0.3, -4.2188472e-16, 0.3), (-0.30000004, -2.8865798e-16, -0.3), (0.3, -3.552714e-16, -0.3)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0, 0), (1, 0), (0, 1), (1, 1)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 1, 3, 2],
                        }
                        float3 xformOp:rotateXYZ = (180, 7.016709e-15, -7.016709e-15)
                        double3 xformOp:translate = (-4.8, 9.263097763061523, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_lattice_handle"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (180, -7.016709e-15, 7.016709e-15),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (0.6, 0.6, 0.6),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-4.799999999999999, 9.263097763061522, -4.930380657631324e-32),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_arm_lattice_handle_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_lattice_handle_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_lattice_base"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 180, 180),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (0.6, 0.6, 0.6),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-4.799999999999999, 9.263097763061522, -4.930380657631324e-32),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_arm_lattice_base_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_lattice_base_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_untouchables_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_untouchables_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_thumb_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_thumb_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_thumb_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_thumb_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thumb_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_thumb_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_thumb_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (12.403404235839844, 8.463104248046875, -0.00018177032470700907),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thumb_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thumb_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (14.003392219543457, 8.783103942871094, -0.0001817703247066172),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thumb_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_thumb_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 180, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (11.599687576293945, 8.463104248046875, -0.00018177032470700907),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_thumb_003_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_thumb_003_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thumb_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_thumb_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thumb_controls_grp_scc"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thumb_base_ctrl_offset_grp"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (11.599687576293945, 8.463104248046875, -0.00018177032470700907)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_thumb_base_ctrl"
                        {
                            float3 xformOp:rotateXYZ = (0, 180, 0)
                            double3 xformOp:translate = (-0.8037166595458984, 0, 9.841845220737166e-17)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                            def "Wall_e_RIG_v001_l_thumb_001_ctrl_offset_001_grp"
                            {
                                def Xform "Wall_e_RIG_v001_l_thumb_001_ctrl_offset_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, 0, 0),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_l_thumb_001_ctrl"
                                    {
                                        double3 xformOp:translate = (1.5999879837036133, 0.31999969482421875, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate"]

                                        def "Wall_e_RIG_v001_l_thumb_002_ctrl_offset_001_grp"
                                        {
                                            def Xform "Wall_e_RIG_v001_l_thumb_002_ctrl_offset_grp"
                                            {
                                                float3 xformOp:rotateXYZ.timeSamples = {
                                                    1: (0, 0, 0),
                                                }
                                                uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                                def Xform "Wall_e_RIG_v001_l_thumb_002_ctrl"
                                                {
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_index_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_index_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_index_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_index_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_index_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_index_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_index_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_index_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_index_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (180, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (12.400062561035156, 10.068857192993164, 0.3265604078769684),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_index_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_index_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_index_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_index_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (180, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (14.800086975097656, 10.06310749053955, 0.8872250556945801),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_index_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_index_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_index_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_index_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_index_001_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (12.400062561035156, 10.068857192993164, 0.3265604078769684)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_index_001_ctrl_offset_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_l_index_001_ctrl"
                            {
                                double3 xformOp:translate = (2.4000244140625, 0.005749702453613281, -0.5606646478176117)
                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                def "Wall_e_RIG_v001_l_index_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_l_index_002_ctrl_offset_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_l_index_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_index_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_index_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_pinky_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_l_pinky_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_l_pinky_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_pinky_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_pinky_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_pinky_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_l_pinky_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (180, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (12.400062561035156, 10.068857192993164, -0.31708985567092896),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_pinky_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_pinky_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (180, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (14.80008602142334, 10.06310749053955, -0.8769084572792053),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_l_pinky_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_pinky_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_l_pinky_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_l_pinky_001_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (12.400062561035156, 10.068857192993164, -0.31708985567092896)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_l_pinky_001_ctrl_offset_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_l_pinky_001_ctrl"
                            {
                                double3 xformOp:translate = (2.4000234603881836, 0.005749702453613281, 0.5598186016082763)
                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                def "Wall_e_RIG_v001_l_pinky_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_l_pinky_002_ctrl_offset_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_l_pinky_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_pinky_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_pinky_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_thumb_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_thumb_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_thumb_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_thumb_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-4.1823686e-22, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 1.0587911840678754e-22),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thumb_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_thumb_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_thumb_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 180, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-12.403404235839844, 8.463104248046875, -0.00018177032470700907),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thumb_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thumb_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 180, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-14.003392219543457, 8.783103942871094, -0.00018177032470700907),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thumb_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_002_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_thumb_003_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-11.600083351135254, 8.463104248046875, -0.00018177032470700907),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_thumb_003_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_003_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_thumb_003_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thumb_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 1.0587911840678754e-22),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_thumb_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thumb_controls_grp_scc"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thumb_base_ctrl_offset_grp"
                    {
                        double3 xformOp:translate = (-11.600083351135254, 8.463104248046875, -0.00018177032470700907)
                        uniform token[] xformOpOrder = ["xformOp:translate"]

                        def Xform "Wall_e_RIG_v001_r_thumb_base_ctrl"
                        {
                            float3 xformOp:rotateXYZ = (0, 180, 0)
                            double3 xformOp:translate = (-0.8033208847045898, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                            def "Wall_e_RIG_v001_r_thumb_001_ctrl_offset_001_grp"
                            {
                                def Xform "Wall_e_RIG_v001_r_thumb_001_ctrl_offset_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, 0, 0),
                                    }
                                    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                    def Xform "Wall_e_RIG_v001_r_thumb_001_ctrl"
                                    {
                                        double3 xformOp:translate = (1.5999879837036133, 0.31999969482421875, -1.959424376224428e-16)
                                        uniform token[] xformOpOrder = ["xformOp:translate"]

                                        def "Wall_e_RIG_v001_r_thumb_002_ctrl_offset_001_grp"
                                        {
                                            def Xform "Wall_e_RIG_v001_r_thumb_002_ctrl_offset_grp"
                                            {
                                                float3 xformOp:rotateXYZ.timeSamples = {
                                                    1: (0, 0, 0),
                                                }
                                                uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                                def Xform "Wall_e_RIG_v001_r_thumb_002_ctrl"
                                                {
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_index_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_index_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_index_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_index_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-4.1823686e-22, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 1.0587911840678754e-22),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_index_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_index_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_index_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_index_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_index_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 180),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-12.400062561035156, 10.068857192993164, 0.32398462295532227),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_index_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_index_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_index_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_index_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 180),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-14.800086975097656, 10.06310749053955, 0.8872250556945801),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_index_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_index_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_index_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_index_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 1.0587911840678754e-22),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_index_001_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ = (-7.016709e-15, 7.016709e-15, 180)
                        double3 xformOp:translate = (-12.400062561035156, 10.068857192993164, 0.32398462295532227)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_index_001_ctrl_offset_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_r_index_001_ctrl"
                            {
                                double3 xformOp:translate = (2.4000244140625, 0.005749702453613281, 0.5632404327392578)
                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                def "Wall_e_RIG_v001_r_index_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_r_index_002_ctrl_offset_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_r_index_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_index_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_index_controls_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_pinky_rig_grp"
            {
                def Xform "Wall_e_RIG_v001_r_pinky_io_grp"
                {
                    def Xform "Wall_e_RIG_v001_r_pinky_inputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_pinky_001_input_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (-4.1823686e-22, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 1.0587911840678754e-22),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_pinky_001_noise_input_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, -0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_001_input_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_001_input_grp_scc"
                            {
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_pinky_outputs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_r_pinky_001_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 180),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-12.400062561035156, 10.068857192993164, -0.31966540217399597),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_pinky_001_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, -0, -0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_001_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_001_output_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_pinky_002_output_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 180),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-14.80008602142334, 10.06310749053955, -0.8769084572792053),
                            }
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            def Xform "Wall_e_RIG_v001_r_pinky_002_noise_output_grp"
                            {
                                double3 xformOp:translate.timeSamples = {
                                    1: (-0, 0, 0),
                                }
                                uniform token[] xformOpOrder = ["xformOp:translate"]
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_002_output_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_pinky_002_output_grp_scc"
                            {
                            }
                        }
                    }
                }

                def Xform "Wall_e_RIG_v001_r_pinky_controls_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 1.0587911840678754e-22),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_r_pinky_001_ctrl_offset_001_grp"
                    {
                        float3 xformOp:rotateXYZ = (-7.016709e-15, 7.016709e-15, 180)
                        double3 xformOp:translate = (-12.400062561035156, 10.068857192993164, -0.31966540217399597)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]

                        def Xform "Wall_e_RIG_v001_r_pinky_001_ctrl_offset_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                            def Xform "Wall_e_RIG_v001_r_pinky_001_ctrl"
                            {
                                double3 xformOp:translate = (2.4000234603881836, 0.005749702453613281, -0.5572430551052093)
                                uniform token[] xformOpOrder = ["xformOp:translate"]

                                def "Wall_e_RIG_v001_r_pinky_002_ctrl_offset_001_grp"
                                {
                                    def Xform "Wall_e_RIG_v001_r_pinky_002_ctrl_offset_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]

                                        def Xform "Wall_e_RIG_v001_r_pinky_002_ctrl"
                                        {
                                        }
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_pinky_controls_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_pinky_controls_grp_scc"
                    {
                    }
                }
            }
        }

        def Xform "Wall_e_RIG_v001_model_grp"
        {
            def Xform "Wall_e_RIG_v001_c_hatch_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (0, 0, -4.440892098500626e-16),
                }
                float3 xformOp:translate:pivot = (-0.8804908, 3.1820645, 3.997923)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-2.4000167846679688, 8.141993782043455, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-2.4000167846679688, 6.54198767852783, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (2.4000167846679688, 4.941996833801268, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (2.4000167846679688, 3.3419983596801743, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-2.4000167846679688, 4.941989204406736, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_inverted_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (2.4000167846679688, 6.542002937316893, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_6x8_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-3.2000045776367188, 8.141993782043455, 4.395765107417998)
                    float3 xformOp:translate:rotatePivot = (3.1999202, 0.24041496, 2.4000213)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -2.6404364, -2.1596065)
                    float3 xformOp:translate:scalePivot = (3.1999202, 0.24041496, 2.4000213)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellowWall_tile_2x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (1.5999832153320312, 3.3419983596801743, 4.715764802242217)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_corner_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-3.2000045776367188, 4.941989204406736, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.16, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.96, -0.64)
                    float3 xformOp:translate:scalePivot = (0.8, 0.16, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_corner_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-0.8000144958496094, 5.741984626770018, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.16, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, -0.96, -0.64)
                    float3 xformOp:translate:scalePivot = (0.8, 0.16, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellowE_tile_2x2_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (3.2000045776367188, 4.941989204406736, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6000003, -0.9599789, -0.6400214)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (2.4000015258789062, 5.74199988555908, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0.6400214, -0.6400214)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_010_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (0.7999801635742189, 5.74199988555908, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0.6400214, -0.6400214)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_011_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (-0.800014495849609, 5.74199988555908, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0.6400214, -0.6400214)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (2.4000015258789062, 7.342005989074705, 4.715764802242217)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-4.799994, 0.24000008, -0.24000008)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-2.4000167846679688, 8.141993782043455, 4.715764802242217)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    double3 xformOp:translate = (-3.360015869140625, 4.941996833801268, 4.075772088313994)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (3.2000045776367188, 8.141993782043455, 4.715764802242217)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (180, -0, 90)
                    double3 xformOp:translate = (3.360015869140625, 4.941996833801268, 4.875759881282744)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (2.4000015258789062, 4.941996833801268, 4.715764802242217)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_with_groove_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (180, -0, 90)
                    double3 xformOp:translate = (3.360015869140625, 3.3419983596801743, 4.875759881282744)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_with_groove_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    double3 xformOp:translate = (-3.360015869140625, 3.3419983596801743, 4.075772088313994)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (0.7999801635742189, 4.941996833801268, 4.715764802242217)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_hinge_plate_2x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (0.7997633218765259, 2.7820001511718333, 3.599996709823607)
                    float3 xformOp:translate:rotatePivot = (0.7999786, 0.4000001, 0.39999992)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999572, -1.8455043e-7, 1.8455043e-7)
                    float3 xformOp:translate:scalePivot = (0.7999786, 0.4000001, 0.39999992)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_hinge_plate_2x4_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -180)
                    double3 xformOp:translate = (2.3998059034347543, 2.7820001511718333, 3.599996709823607)
                    float3 xformOp:translate:rotatePivot = (0.7999786, 0.4000001, 0.39999992)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999572, -1.8455043e-7, 1.8455043e-7)
                    float3 xformOp:translate:scalePivot = (0.7999786, 0.4000001, 0.39999992)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_pin_3l_friction_bridge_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.4015213361348966, 2.8171559451570425, 4.358679317137177)
                    float3 xformOp:translate:rotatePivot = (1.1991435, 0.35907802, 0.35883915)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.398287, 0, -0.7176783)
                    float3 xformOp:translate:scalePivot = (1.1991435, 0.35907802, 0.35883915)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_pin_3l_friction_bridge_002_mesh"
                {
                    double3 xformOp:translate = (-2.403310965985068, 2.8229864119043264, 3.6449709189925796)
                    float3 xformOp:translate:pivot = (1.1991435, 0.35907802, 0.35883915)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (-0.8000144958496094, 6.541995307922361, 4.075765412593779)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x6_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-2.4000091552734375, 8.141993782043455, 4.075764945705255)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -1.0404364, -0.55960643)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_4x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-1.6000137329101562, 7.341986915588377, 3.7595309078940717)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 1.6000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -1.8404363, -1.3596065)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 1.6000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_c_hatch_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_c_hatch_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_l_arm_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_l_arm_shift_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, -2.710505431213761e-20),
                    }
                    float3 xformOp:translate:pivot = (3.1998389, 9.263012, -0.00018177033)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_l_arm_shift_grp_"
                    {
                        float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                        def Xform "Wall_e_RIG_v001_red_axle_2_003_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-0, 90, 0)
                            double3 xformOp:translate = (2.1600096374750137, 9.022001779198646, 0.39981212332076016)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_black_axle_connector_double_flexible_002_mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 180)
                            double3 xformOp:translate = (2.7600188553333274, 9.622010997056961, -1.2001771986484528)
                            float3 xformOp:translate:rotatePivot = (0.76031953, 0.36073422, 0.40000007)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.5206391, -0.72146845, 0)
                            float3 xformOp:translate:scalePivot = (0.76031953, 0.36073422, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_straight_002_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, 90)
                            double3 xformOp:translate = (2.0383052825927734, 8.749502003192902, -0.5158441662788397)
                            float3 xformOp:translate:rotatePivot = (0.5125, 0.5156669, 1.5575283)
                            float3 xformOp:translate:rotatePivotTranslate = (1.0450282, -0.003166914, -1.0418613)
                            float3 xformOp:translate:scalePivot = (0.5125, 0.5156669, 1.5575283)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_technics_bush_1_2_smooth_008_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-0, -90, 0)
                            double3 xformOp:translate = (3.994494960267561, 8.902002050876618, -0.36015060041166796)
                            float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                            float3 xformOp:translate:rotatePivotTranslate = (-0.56014556, 0, 0.15980114)
                            float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Mesh "Wall_e_RIG_v001_darkGrey_axle_3_004_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent.timeSamples = {
                                1: [(3.5978718, 9.021716, -0.24046284), (4.798378, 9.502287, 0.24010836)],
                            }
                            int[] faceVertexCounts.timeSamples = {
                                1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                            }
                            int[] faceVertexIndices.timeSamples = {
                                1: [60, 61, 33, 16, 50, 51, 194, 195, 31, 46, 47, 8, 28, 37, 32, 17, 29, 172, 173, 10, 40, 49, 45, 12, 43, 44, 36, 18, 38, 181, 182, 14, 64, 60, 16, 21, 27, 28, 17, 22, 42, 43, 18, 23, 54, 50, 195, 196, 62, 160, 129, 2, 33, 130, 131, 16, 20, 147, 148, 34, 52, 150, 203, 204, 47, 136, 137, 8, 8, 137, 138, 31, 30, 156, 157, 11, 173, 174, 159, 10, 4, 141, 142, 48, 12, 139, 140, 40, 6, 151, 179, 180, 39, 154, 155, 15, 16, 131, 132, 21, 0, 133, 134, 63, 25, 146, 147, 20, 197, 198, 144, 53, 63, 64, 21, 0, 26, 27, 22, 9, 41, 42, 23, 13, 53, 54, 196, 197, 1, 145, 146, 25, 21, 132, 133, 0, 13, 23, 27, 26, 23, 18, 28, 27, 18, 36, 37, 28, 14, 182, 172, 29, 15, 155, 156, 30, 31, 138, 139, 12, 12, 45, 46, 31, 61, 62, 2, 33, 2, 129, 130, 33, 34, 148, 149, 3, 204, 194, 51, 52, 36, 44, 38, 14, 37, 36, 14, 29, 32, 37, 29, 10, 6, 180, 181, 38, 7, 153, 154, 39, 40, 140, 141, 4, 4, 48, 49, 40, 5, 24, 42, 41, 24, 19, 43, 42, 19, 35, 44, 43, 38, 44, 35, 6, 45, 193, 183, 46, 47, 46, 183, 184, 184, 185, 136, 47, 48, 142, 190, 191, 49, 48, 191, 192, 45, 49, 192, 193, 20, 34, 51, 50, 52, 51, 34, 3, 3, 149, 150, 52, 53, 144, 145, 1, 1, 25, 54, 53, 25, 20, 50, 54, 55, 15, 30, 56, 57, 56, 30, 11, 11, 157, 158, 57, 58, 152, 153, 7, 59, 58, 7, 39, 55, 59, 39, 15, 17, 32, 161, 162, 32, 10, 171, 161, 10, 159, 170, 171, 164, 165, 135, 9, 9, 22, 163, 164, 22, 17, 162, 163, 97, 65, 66, 98, 99, 98, 66, 67, 100, 99, 67, 68, 101, 100, 68, 69, 102, 101, 69, 70, 103, 175, 176, 71, 169, 103, 71, 168, 105, 104, 72, 73, 106, 105, 73, 74, 107, 106, 74, 75, 108, 107, 75, 76, 109, 108, 76, 77, 110, 109, 77, 78, 111, 166, 167, 79, 112, 186, 187, 80, 113, 112, 80, 81, 114, 113, 81, 82, 115, 114, 82, 83, 116, 115, 83, 84, 117, 116, 84, 85, 118, 117, 85, 86, 189, 118, 86, 188, 120, 199, 200, 88, 121, 120, 88, 89, 122, 121, 89, 90, 123, 122, 90, 91, 124, 123, 91, 92, 125, 124, 92, 93, 126, 125, 93, 94, 202, 126, 94, 201, 178, 127, 95, 177, 97, 128, 96, 65, 129, 105, 106, 130, 131, 130, 106, 107, 132, 131, 107, 108, 133, 132, 108, 109, 134, 133, 109, 110, 135, 165, 166, 111, 136, 185, 186, 112, 137, 136, 112, 113, 138, 137, 113, 114, 139, 138, 114, 115, 140, 139, 115, 116, 141, 140, 116, 117, 142, 141, 117, 118, 190, 142, 118, 189, 144, 198, 199, 120, 145, 144, 120, 121, 146, 145, 121, 122, 147, 146, 122, 123, 148, 147, 123, 124, 149, 148, 124, 125, 150, 149, 125, 126, 203, 150, 126, 202, 179, 151, 127, 178, 153, 152, 128, 97, 154, 153, 97, 98, 155, 154, 98, 99, 156, 155, 99, 100, 157, 156, 100, 101, 158, 157, 101, 102, 159, 174, 175, 103, 170, 159, 103, 169, 129, 160, 104, 105, 162, 161, 61, 60, 163, 162, 60, 64, 164, 163, 64, 63, 63, 134, 165, 164, 166, 165, 134, 110, 167, 166, 110, 78, 104, 169, 168, 72, 160, 170, 169, 104, 171, 170, 160, 62, 161, 171, 62, 61, 172, 56, 57, 173, 57, 158, 174, 173, 175, 174, 158, 102, 176, 175, 102, 70, 128, 178, 177, 96, 152, 179, 178, 128, 180, 179, 152, 58, 181, 180, 58, 59, 182, 181, 59, 55, 172, 182, 55, 56, 184, 183, 26, 9, 9, 135, 185, 184, 186, 185, 135, 111, 187, 186, 111, 79, 119, 189, 188, 87, 143, 190, 189, 119, 191, 190, 143, 5, 192, 191, 5, 41, 193, 192, 41, 13, 183, 193, 13, 26, 195, 194, 35, 19, 196, 195, 19, 24, 197, 196, 24, 5, 5, 143, 198, 197, 199, 198, 143, 119, 200, 199, 119, 87, 127, 202, 201, 95, 151, 203, 202, 127, 204, 203, 151, 6, 35, 194, 204, 6],
                            }
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                            point3f[] points.timeSamples = {
                                1: [(3.5978718, 9.181907, -0.22469552), (3.5978718, 9.181907, 0.22434103), (3.5978718, 9.342097, -0.22469553), (3.5978718, 9.342097, 0.22434103), (3.5978718, 9.037483, 0.07991793), (3.5978718, 9.181907, 0.07991793), (3.5978718, 9.342097, 0.07991794), (3.5978718, 9.48652, 0.07991794), (3.5978718, 9.037483, -0.08027246), (3.5978718, 9.181907, -0.08027245), (3.5978718, 9.342097, -0.080272466), (3.5978718, 9.48652, -0.080272466), (3.5978718, 9.021716, -0.00017725528), (3.5978718, 9.181907, -0.00017724931), (3.5978718, 9.342097, -0.00017726421), (3.5978718, 9.502287, -0.00017726421), (3.5978718, 9.262002, -0.24046284), (3.5978718, 9.262002, -0.080272466), (3.5978718, 9.262002, -0.00017724931), (3.5978718, 9.262002, 0.07991794), (3.5978718, 9.262002, 0.24010836), (3.5978718, 9.193863, -0.22704922), (3.5978718, 9.193863, -0.08027245), (3.5978718, 9.193863, -0.00017724931), (3.5978718, 9.193863, 0.07991793), (3.5978718, 9.193864, 0.22669473), (3.5978718, 9.181907, -0.06778203), (3.5978718, 9.193863, -0.06778203), (3.5978718, 9.262002, -0.067782044), (3.5978718, 9.342097, -0.067782044), (3.5978718, 9.488979, -0.067782044), (3.5978718, 9.035025, -0.06778204), (3.5978718, 9.329593, -0.080272466), (3.5978718, 9.329593, -0.22715718), (3.5978718, 9.329593, 0.22680266), (3.5978718, 9.329593, 0.07991794), (3.5978718, 9.329593, -0.00017726421), (3.5978718, 9.329593, -0.067782044), (3.5978718, 9.342097, 0.067468464), (3.5978718, 9.488972, 0.067468464), (3.5978718, 9.035033, 0.06746847), (3.5978718, 9.181908, 0.06746847), (3.5978718, 9.193864, 0.06746847), (3.5978718, 9.262002, 0.06746848), (3.5978718, 9.329593, 0.06746848), (3.5978718, 9.03551, -0.0001772549), (3.5978718, 9.047672, -0.06778203), (3.5978718, 9.04992, -0.08027245), (3.5978718, 9.049919, 0.07991793), (3.5978718, 9.047681, 0.06746847), (3.5978718, 9.262002, 0.22414194), (3.5978718, 9.329593, 0.21216245), (3.5978718, 9.342097, 0.20994619), (3.5978718, 9.181907, 0.20994619), (3.5978718, 9.193863, 0.21206528), (3.5978718, 9.488412, -0.00017726421), (3.5978718, 9.476256, -0.067782015), (3.5978718, 9.47401, -0.080272436), (3.5978718, 9.47401, 0.07991794), (3.5978718, 9.47625, 0.067468464), (3.5978718, 9.262002, -0.22747162), (3.5978718, 9.329593, -0.21524501), (3.5978718, 9.342097, -0.21298298), (3.5978718, 9.181907, -0.212983), (3.5978718, 9.193863, -0.21514586), (4.798378, 9.48652, 0.07991794), (4.798378, 9.488972, 0.067468464), (4.798378, 9.502287, -0.00017726421), (4.798378, 9.488979, -0.067782044), (4.798378, 9.48652, -0.080272496), (4.798378, 9.47401, -0.080272496), (4.798378, 9.342097, -0.080272496), (4.798378, 9.342097, -0.21298301), (4.798378, 9.342097, -0.2246955), (4.798378, 9.329593, -0.22715718), (4.798378, 9.262002, -0.24046284), (4.798378, 9.193864, -0.22704923), (4.798378, 9.181907, -0.22469547), (4.798378, 9.181907, -0.21298298), (4.798378, 9.181907, -0.08027248), (4.798378, 9.049919, -0.08027248), (4.798378, 9.037483, -0.08027249), (4.798378, 9.035025, -0.06778204), (4.798378, 9.021716, -0.00017725528), (4.798378, 9.035033, 0.06746847), (4.798378, 9.037483, 0.07991793), (4.798378, 9.049919, 0.07991793), (4.798378, 9.181907, 0.07991793), (4.798378, 9.181907, 0.20994619), (4.798378, 9.181907, 0.22434103), (4.798378, 9.193864, 0.22669473), (4.798378, 9.262002, 0.24010834), (4.798378, 9.329593, 0.22680266), (4.798378, 9.342097, 0.22434103), (4.798378, 9.342097, 0.20994619), (4.798378, 9.342097, 0.07991794), (4.798378, 9.47401, 0.07991794), (4.397871, 9.48652, 0.07991794), (4.397871, 9.488972, 0.067468464), (4.397871, 9.502287, -0.00017726421), (4.397871, 9.488979, -0.067782044), (4.397871, 9.48652, -0.080272496), (4.397871, 9.47401, -0.080272496), (4.397871, 9.342097, -0.080272496), (4.397871, 9.342097, -0.21298301), (4.397871, 9.342097, -0.2246955), (4.397871, 9.329593, -0.22715718), (4.397871, 9.262002, -0.24046284), (4.397871, 9.193864, -0.22704923), (4.397871, 9.181907, -0.22469549), (4.397871, 9.181907, -0.212983), (4.397871, 9.181907, -0.08027248), (4.397871, 9.049919, -0.08027248), (4.397871, 9.037483, -0.08027249), (4.397871, 9.035025, -0.06778204), (4.397871, 9.021716, -0.00017725528), (4.397871, 9.035033, 0.06746847), (4.397871, 9.037483, 0.07991793), (4.397871, 9.049919, 0.07991793), (4.397871, 9.181907, 0.07991793), (4.397871, 9.181907, 0.20994619), (4.397871, 9.181907, 0.22434103), (4.397871, 9.193864, 0.22669473), (4.397871, 9.262002, 0.24010836), (4.397871, 9.329593, 0.22680266), (4.397871, 9.342097, 0.22434103), (4.397871, 9.342097, 0.20994619), (4.397871, 9.342097, 0.07991794), (4.397871, 9.47401, 0.07991794), (3.6081429, 9.342097, -0.22469553), (3.6081429, 9.329593, -0.22715718), (3.6081429, 9.262002, -0.24046284), (3.6081429, 9.193863, -0.22704922), (3.6081429, 9.181907, -0.22469552), (3.6081429, 9.181907, -0.212983), (3.6081429, 9.181907, -0.08027245), (3.6081429, 9.04992, -0.08027245), (3.6081429, 9.037483, -0.08027246), (3.6081429, 9.035025, -0.06778204), (3.6081429, 9.021716, -0.00017725528), (3.6081429, 9.035033, 0.06746847), (3.6081429, 9.037483, 0.07991793), (3.6081429, 9.049919, 0.07991793), (3.6081429, 9.181907, 0.07991793), (3.6081429, 9.181907, 0.20994619), (3.6081429, 9.181907, 0.22434103), (3.6081429, 9.193863, 0.22669473), (3.6081429, 9.262002, 0.24010836), (3.6081429, 9.329593, 0.22680266), (3.6081429, 9.342097, 0.22434103), (3.6081429, 9.342097, 0.20994619), (3.6081429, 9.342097, 0.07991794), (3.6081429, 9.47401, 0.07991794), (3.6081429, 9.48652, 0.07991794), (3.6081429, 9.488972, 0.067468464), (3.6081429, 9.502287, -0.00017726421), (3.6081429, 9.488979, -0.067782044), (3.6081429, 9.48652, -0.080272466), (3.6081429, 9.47401, -0.080272436), (3.6081429, 9.342097, -0.080272466), (3.6081429, 9.342097, -0.21298298), (3.5978718, 9.329593, -0.09216443), (3.5978718, 9.262002, -0.09324163), (3.5978718, 9.193864, -0.092155665), (3.5978718, 9.181907, -0.091965094), (3.6081429, 9.181907, -0.091965094), (4.397871, 9.181907, -0.091965124), (4.798378, 9.181907, -0.091965124), (4.798378, 9.342097, -0.09196514), (4.397871, 9.342097, -0.09196514), (3.6081429, 9.342097, -0.09196511), (3.5978718, 9.342097, -0.09196511), (3.5978718, 9.353487, -0.067782044), (3.5978718, 9.353296, -0.080272466), (3.6081429, 9.353296, -0.080272466), (4.397871, 9.353296, -0.080272496), (4.798378, 9.353296, -0.080272496), (4.798378, 9.353295, 0.07991794), (4.397871, 9.353295, 0.07991794), (3.6081429, 9.353295, 0.07991794), (3.5978718, 9.353295, 0.07991794), (3.5978718, 9.353486, 0.067468464), (3.5978718, 9.354519, -0.00017726421), (3.5978718, 9.17094, -0.06778203), (3.5978718, 9.1711235, -0.08027245), (3.6081429, 9.1711235, -0.08027245), (4.397871, 9.1711235, -0.08027248), (4.798378, 9.1711235, -0.08027248), (4.798378, 9.1711235, 0.07991793), (4.397871, 9.1711235, 0.07991793), (3.6081429, 9.1711235, 0.07991793), (3.5978718, 9.1711235, 0.07991793), (3.5978718, 9.170941, 0.06746847), (3.5978718, 9.169947, -0.00017724931), (3.5978718, 9.329593, 0.09174316), (3.5978718, 9.262002, 0.092814356), (3.5978718, 9.193863, 0.09173446), (3.5978718, 9.181908, 0.09154498), (3.6081429, 9.181908, 0.09154498), (4.397871, 9.181908, 0.09154498), (4.798378, 9.181908, 0.09154497), (4.798378, 9.342097, 0.091544986), (4.397871, 9.342097, 0.091544986), (3.6081429, 9.342097, 0.091544986), (3.5978718, 9.342097, 0.091544986)],
                            }
                            float3 xformOp:translate:pivot = (3.5978708, 9.262002, -0.00017726421)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_shift_extend_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0, 0, 0),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_l_arm_shift_extend_grp_"
                        {
                            def Mesh "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_ball_002_mesh" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform bool doubleSided = 1
                                float3[] extent = [(4.265498, 8.728506, -0.52854586), (5.331258, 9.795669, 0.5281787)]
                                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                int[] faceVertexIndices = [0, 50, 74, 53, 50, 14, 51, 74, 74, 51, 20, 52, 53, 74, 52, 17, 14, 54, 75, 51, 54, 1, 55, 75, 75, 55, 15, 56, 51, 75, 56, 20, 20, 56, 76, 59, 56, 15, 57, 76, 76, 57, 3, 58, 59, 76, 58, 16, 17, 52, 77, 61, 52, 20, 59, 77, 77, 59, 16, 60, 61, 77, 60, 2, 2, 60, 78, 64, 60, 16, 62, 78, 78, 62, 21, 63, 64, 78, 63, 8, 16, 58, 79, 62, 58, 3, 65, 79, 79, 65, 18, 66, 62, 79, 66, 21, 21, 66, 80, 69, 66, 18, 67, 80, 80, 67, 5, 68, 69, 80, 68, 19, 8, 63, 81, 71, 63, 21, 69, 81, 81, 69, 19, 70, 71, 81, 70, 4, 4, 70, 82, 26, 70, 19, 72, 82, 82, 72, 22, 73, 26, 82, 73, 11, 19, 68, 83, 72, 68, 5, 27, 83, 83, 27, 9, 28, 72, 83, 28, 22, 22, 28, 84, 31, 28, 9, 29, 84, 84, 29, 7, 30, 31, 84, 30, 10, 11, 73, 85, 33, 73, 22, 31, 85, 85, 31, 10, 32, 33, 85, 32, 6, 6, 32, 86, 36, 32, 10, 34, 86, 86, 34, 23, 35, 36, 86, 35, 13, 10, 30, 87, 34, 30, 7, 37, 87, 87, 37, 12, 38, 34, 87, 38, 23, 23, 38, 88, 40, 38, 12, 39, 88, 88, 39, 1, 54, 40, 88, 54, 14, 13, 35, 89, 41, 35, 23, 40, 89, 89, 40, 14, 50, 41, 89, 50, 0, 1, 39, 90, 55, 39, 12, 42, 90, 90, 42, 24, 43, 55, 90, 43, 15, 12, 37, 91, 42, 37, 7, 29, 91, 91, 29, 9, 44, 42, 91, 44, 24, 24, 44, 92, 45, 44, 9, 27, 92, 92, 27, 5, 67, 45, 92, 67, 18, 15, 43, 93, 57, 43, 24, 45, 93, 93, 45, 18, 65, 57, 93, 65, 3, 6, 36, 94, 33, 36, 13, 46, 94, 94, 46, 25, 47, 33, 94, 47, 11, 13, 41, 95, 46, 41, 0, 53, 95, 95, 53, 17, 48, 46, 95, 48, 25, 25, 48, 96, 49, 48, 17, 61, 96, 96, 61, 2, 64, 49, 96, 64, 8, 11, 47, 97, 26, 47, 25, 49, 97, 97, 49, 8, 71, 26, 97, 71, 4]
                                rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                                point3f[] points = [(5.1056805, 8.954163, -0.30347013), (5.1056805, 9.570013, -0.30347013), (5.1056805, 8.954162, 0.30310297), (5.1056805, 9.570013, 0.30310297), (4.4910755, 8.954162, 0.30310297), (4.4910755, 9.570013, 0.30310297), (4.4910755, 8.954163, -0.30347013), (4.4910755, 9.570013, -0.30347013), (4.798378, 8.881639, 0.37939644), (4.4052444, 9.655338, -0.0001835823), (4.4200315, 9.262089, -0.37777734), (4.4052444, 8.868837, -0.0001835823), (4.798378, 9.642538, -0.3797636), (4.798378, 8.881639, -0.3797636), (5.1767244, 9.262089, -0.37777734), (5.1915116, 9.655338, -0.0001835823), (5.1767244, 9.262088, 0.37741017), (5.191511, 8.868837, -0.0001835823), (4.798378, 9.642538, 0.37939644), (4.4200315, 9.262088, 0.37741017), (5.331258, 9.262088, -0.0001835823), (4.798378, 9.262088, 0.5281787), (4.265498, 9.262088, -0.0001835823), (4.798378, 9.262088, -0.52854586), (4.798378, 9.795669, -0.0001835823), (4.798378, 8.728506, -0.0001835823), (4.433232, 8.896708, 0.18160868), (4.433232, 9.627467, 0.18160868), (4.2999153, 9.476902, -0.0001835823), (4.433232, 9.627467, -0.18197608), (4.44193, 9.445621, -0.35512567), (4.306874, 9.262088, -0.20456004), (4.4419303, 9.078556, -0.35512567), (4.433232, 8.8967085, -0.18197608), (4.5940013, 9.262088, -0.48867607), (4.798378, 9.05631, -0.4896109), (4.6150794, 8.904238, -0.35629392), (4.61508, 9.619938, -0.35629392), (4.798378, 9.467867, -0.4896109), (4.981676, 9.619938, -0.35629392), (5.002754, 9.262088, -0.48867607), (4.981676, 8.904238, -0.35629392), (4.798378, 9.754994, -0.20596218), (5.013192, 9.761018, -0.0001835823), (4.583564, 9.761018, -0.0001835823), (4.798378, 9.754994, 0.20559478), (4.798378, 8.769181, -0.20596218), (4.583564, 8.763158, -0.0001835823), (5.013192, 8.763158, -0.0001835823), (4.798378, 8.769182, 0.20559478), (5.154826, 9.078556, -0.35512567), (5.289882, 9.262088, -0.20456004), (5.2968407, 9.047274, -0.0001835823), (5.163524, 8.8967085, -0.18197608), (5.154826, 9.445621, -0.35512567), (5.163524, 9.627467, -0.18197608), (5.2968407, 9.476902, -0.0001835823), (5.163524, 9.627467, 0.18160868), (5.154826, 9.44562, 0.3547585), (5.289882, 9.262089, 0.20419288), (5.154826, 9.078556, 0.3547585), (5.163524, 8.896708, 0.18160868), (5.002754, 9.262088, 0.4883089), (4.798378, 9.05631, 0.4892435), (4.981676, 8.904238, 0.35592675), (4.981676, 9.619938, 0.35592675), (4.798378, 9.467867, 0.4892435), (4.61508, 9.619938, 0.35592675), (4.44193, 9.44562, 0.3547585), (4.5940013, 9.262088, 0.4883089), (4.4419303, 9.078556, 0.3547585), (4.6150794, 8.904238, 0.35592675), (4.306874, 9.262089, 0.20419288), (4.299915, 9.047274, -0.0001835823), (5.2593317, 9.062161, -0.19315124), (5.2593317, 9.462014, -0.19315124), (5.2593317, 9.462013, 0.19278407), (5.2593317, 9.062162, 0.19278407), (4.9913454, 9.068186, 0.45474625), (4.991346, 9.455991, 0.45474625), (4.60541, 9.455991, 0.45474625), (4.6054106, 9.068186, 0.45474625), (4.3374243, 9.062162, 0.19278407), (4.3374243, 9.462013, 0.19278407), (4.3374243, 9.462014, -0.19315124), (4.3374243, 9.062161, -0.19315124), (4.6054106, 9.068186, -0.45511365), (4.60541, 9.455991, -0.4551134), (4.991346, 9.455991, -0.4551134), (4.9913454, 9.068186, -0.45511365), (4.998304, 9.723976, -0.19408584), (4.5984516, 9.723976, -0.19408584), (4.5984516, 9.723977, 0.19371867), (4.998304, 9.723977, 0.19371867), (4.5984516, 8.8001995, -0.19408584), (4.998304, 8.8001995, -0.19408584), (4.998304, 8.8001995, 0.19371867), (4.5984516, 8.8001995, 0.19371867)]
                                float3 xformOp:translate:pivot = (2.0383053, 8.749502, -0.51584417)
                                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_body_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (0, 0, 0),
                            }
                            float3 xformOp:translate:pivot = (4.8000817, 9.263098, 0.003447318)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                            def Xform "Wall_e_RIG_v001_l_arm_body_grp_"
                            {
                                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_009_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (0, 180, 0)
                                    double3 xformOp:translate = (9.600072860717773, 10.063109457492821, 0.40344143199919874)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_darkGrey_brick_2x2_ball_recept_002_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 180)
                                    double3 xformOp:translate = (7.200075149536133, 10.063098013401024, 0.5634489088058393)
                                    float3 xformOp:translate:rotatePivot = (1.4001725, 0.5605411, 0.80019325)
                                    float3 xformOp:translate:rotatePivotTranslate = (-2.800345, -1.3607343, -1.3607343)
                                    float3 xformOp:translate:scalePivot = (1.4001725, 0.5605411, 0.80019325)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_012_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (6.400079727172852, 8.463103353977196, -0.39655106973648835)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_009_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (6.400079727172852, 8.463103353977196, 0.883448901653282)
                                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.55960643, -1.0404364)
                                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_035_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 90)
                                    double3 xformOp:translate = (6.40007209777832, 8.463103353977196, -0.39655106973648835)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_013_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                                    double3 xformOp:translate = (8.800078964233398, 10.06310411691665, 0.5634489088058393)
                                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, -1.3603938, -0.960415)
                                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_005_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (8.000082015991211, 9.263110220432274, 0.5634489088058392)
                                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.08065438, -1.0401756)
                                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_010_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (6.400087356567383, 9.263110220432274, -0.39655106973648846)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_014_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (7.200082778930664, 8.463103353977196, 0.5634489088058393)
                                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.1595851, -0.640415)
                                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_004_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (7.200082778930664, 9.263110220432274, 0.5634489088058392)
                                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.08065438, -1.0401756)
                                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_twist_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                float3 xformOp:scale.timeSamples = {
                                    1: (1, 1, 1),
                                }
                                double3 xformOp:translate.timeSamples = {
                                    1: (0, 0, 0),
                                }
                                float3 xformOp:translate:pivot = (9.599158, 9.262169, 0.009834592)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                def Xform "Wall_e_RIG_v001_l_arm_twist_grp_"
                                {
                                    float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                    uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                    def Mesh "Wall_e_RIG_v001_lightGray_l_arm_cap_001_mesh" (
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                    )
                                    {
                                        uniform bool doubleSided = 1
                                        float3[] extent = [(9.599159, 8.495436, -0.7569004), (10.443167, 10.02891, 0.77656937)]
                                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                        int[] faceVertexIndices = [44, 1, 61, 62, 56, 57, 5, 38, 1, 8, 60, 61, 6, 10, 58, 59, 8, 6, 59, 60, 10, 5, 57, 58, 52, 85, 86, 4, 3, 82, 83, 73, 11, 81, 82, 3, 7, 80, 81, 11, 9, 79, 80, 7, 2, 78, 79, 9, 67, 77, 78, 2, 0, 74, 75, 66, 21, 22, 71, 72, 22, 23, 70, 71, 23, 24, 69, 70, 24, 25, 68, 69, 39, 40, 14, 13, 40, 41, 15, 14, 41, 42, 16, 15, 42, 43, 17, 16, 53, 54, 31, 19, 20, 28, 33, 32, 28, 29, 34, 33, 29, 30, 35, 34, 30, 26, 36, 35, 27, 37, 64, 65, 54, 55, 51, 31, 32, 33, 49, 50, 33, 34, 48, 49, 34, 35, 47, 48, 35, 36, 46, 47, 37, 45, 63, 64, 45, 44, 62, 63, 47, 46, 43, 42, 48, 47, 42, 41, 49, 48, 41, 40, 50, 49, 40, 39, 51, 55, 56, 38, 12, 84, 85, 52, 20, 32, 54, 53, 32, 50, 55, 54, 56, 55, 50, 39, 39, 13, 57, 56, 58, 57, 13, 14, 59, 58, 14, 15, 60, 59, 15, 16, 61, 60, 16, 17, 62, 61, 17, 43, 63, 62, 43, 46, 64, 63, 46, 36, 65, 64, 36, 26, 66, 75, 76, 18, 18, 76, 77, 67, 69, 68, 26, 30, 70, 69, 30, 29, 71, 70, 29, 28, 72, 71, 28, 20, 73, 83, 84, 12, 74, 27, 65, 75, 76, 75, 65, 26, 77, 76, 26, 68, 78, 77, 68, 25, 79, 78, 25, 24, 80, 79, 24, 23, 81, 80, 23, 22, 82, 81, 22, 21, 83, 82, 21, 72, 84, 83, 72, 20, 85, 84, 20, 53, 86, 85, 53, 19, 87, 88, 223, 224, 88, 89, 230, 223, 89, 90, 229, 230, 90, 91, 228, 229, 91, 92, 227, 228, 92, 93, 226, 227, 93, 94, 225, 226, 94, 87, 224, 225, 88, 87, 222, 215, 89, 88, 215, 216, 90, 89, 216, 217, 91, 90, 217, 218, 92, 91, 218, 219, 93, 92, 219, 220, 94, 93, 220, 221, 87, 94, 221, 222, 104, 103, 206, 199, 105, 104, 199, 200, 106, 105, 200, 201, 107, 106, 201, 202, 108, 107, 202, 203, 109, 108, 203, 204, 110, 109, 204, 205, 103, 110, 205, 206, 112, 111, 190, 183, 113, 112, 183, 184, 114, 113, 184, 185, 115, 114, 185, 186, 116, 115, 186, 187, 117, 116, 187, 188, 118, 117, 188, 189, 111, 118, 189, 190, 120, 119, 174, 167, 121, 120, 167, 168, 122, 121, 168, 169, 123, 122, 169, 170, 124, 123, 170, 171, 125, 124, 171, 172, 126, 125, 172, 173, 119, 126, 173, 174, 128, 127, 318, 311, 129, 128, 311, 312, 130, 129, 312, 313, 131, 130, 313, 314, 132, 131, 314, 315, 133, 132, 315, 316, 134, 133, 316, 317, 127, 134, 317, 318, 136, 135, 302, 295, 137, 136, 295, 296, 138, 137, 296, 297, 139, 138, 297, 298, 140, 139, 298, 299, 141, 140, 299, 300, 142, 141, 300, 301, 135, 142, 301, 302, 144, 143, 286, 279, 145, 144, 279, 280, 146, 145, 280, 281, 147, 146, 281, 282, 148, 147, 282, 283, 149, 148, 283, 284, 150, 149, 284, 285, 143, 150, 285, 286, 152, 151, 270, 263, 153, 152, 263, 264, 154, 153, 264, 265, 155, 154, 265, 266, 156, 155, 266, 267, 157, 156, 267, 268, 158, 157, 268, 269, 151, 158, 269, 270, 160, 159, 254, 247, 161, 160, 247, 248, 162, 161, 248, 249, 163, 162, 249, 250, 164, 163, 250, 251, 165, 164, 251, 252, 166, 165, 252, 253, 159, 166, 253, 254, 168, 167, 319, 320, 169, 168, 320, 321, 170, 169, 321, 322, 171, 170, 322, 323, 172, 171, 323, 324, 173, 172, 324, 325, 174, 173, 325, 326, 167, 174, 326, 319, 176, 175, 120, 121, 177, 176, 121, 122, 178, 177, 122, 123, 179, 178, 123, 124, 180, 179, 124, 125, 181, 180, 125, 126, 182, 181, 126, 119, 175, 182, 119, 120, 184, 183, 175, 176, 185, 184, 176, 177, 186, 185, 177, 178, 187, 186, 178, 179, 188, 187, 179, 180, 189, 188, 180, 181, 190, 189, 181, 182, 183, 190, 182, 175, 192, 191, 112, 113, 193, 192, 113, 114, 194, 193, 114, 115, 195, 194, 115, 116, 196, 195, 116, 117, 197, 196, 117, 118, 198, 197, 118, 111, 191, 198, 111, 112, 200, 199, 191, 192, 201, 200, 192, 193, 202, 201, 193, 194, 203, 202, 194, 195, 204, 203, 195, 196, 205, 204, 196, 197, 206, 205, 197, 198, 199, 206, 198, 191, 208, 207, 104, 105, 209, 208, 105, 106, 210, 209, 106, 107, 211, 210, 107, 108, 212, 211, 108, 109, 213, 212, 109, 110, 214, 213, 110, 103, 207, 214, 103, 104, 216, 215, 207, 208, 217, 216, 208, 209, 218, 217, 209, 210, 219, 218, 210, 211, 220, 219, 211, 212, 221, 220, 212, 213, 222, 221, 213, 214, 215, 222, 214, 207, 224, 223, 231, 232, 225, 224, 232, 233, 226, 225, 233, 234, 227, 226, 234, 235, 228, 227, 235, 236, 229, 228, 236, 237, 230, 229, 237, 238, 223, 230, 238, 231, 232, 231, 96, 95, 233, 232, 95, 102, 234, 233, 102, 101, 235, 234, 101, 100, 236, 235, 100, 99, 237, 236, 99, 98, 238, 237, 98, 97, 231, 238, 97, 96, 240, 239, 96, 97, 241, 240, 97, 98, 242, 241, 98, 99, 243, 242, 99, 100, 244, 243, 100, 101, 245, 244, 101, 102, 246, 245, 102, 95, 239, 246, 95, 96, 248, 247, 239, 240, 249, 248, 240, 241, 250, 249, 241, 242, 251, 250, 242, 243, 252, 251, 243, 244, 253, 252, 244, 245, 254, 253, 245, 246, 247, 254, 246, 239, 256, 255, 160, 161, 257, 256, 161, 162, 258, 257, 162, 163, 259, 258, 163, 164, 260, 259, 164, 165, 261, 260, 165, 166, 262, 261, 166, 159, 255, 262, 159, 160, 264, 263, 255, 256, 265, 264, 256, 257, 266, 265, 257, 258, 267, 266, 258, 259, 268, 267, 259, 260, 269, 268, 260, 261, 270, 269, 261, 262, 263, 270, 262, 255, 272, 271, 152, 153, 273, 272, 153, 154, 274, 273, 154, 155, 275, 274, 155, 156, 276, 275, 156, 157, 277, 276, 157, 158, 278, 277, 158, 151, 271, 278, 151, 152, 280, 279, 271, 272, 281, 280, 272, 273, 282, 281, 273, 274, 283, 282, 274, 275, 284, 283, 275, 276, 285, 284, 276, 277, 286, 285, 277, 278, 279, 286, 278, 271, 288, 287, 144, 145, 289, 288, 145, 146, 290, 289, 146, 147, 291, 290, 147, 148, 292, 291, 148, 149, 293, 292, 149, 150, 294, 293, 150, 143, 287, 294, 143, 144, 296, 295, 287, 288, 297, 296, 288, 289, 298, 297, 289, 290, 299, 298, 290, 291, 300, 299, 291, 292, 301, 300, 292, 293, 302, 301, 293, 294, 295, 302, 294, 287, 304, 303, 136, 137, 305, 304, 137, 138, 306, 305, 138, 139, 307, 306, 139, 140, 308, 307, 140, 141, 309, 308, 141, 142, 310, 309, 142, 135, 303, 310, 135, 136, 312, 311, 303, 304, 313, 312, 304, 305, 314, 313, 305, 306, 315, 314, 306, 307, 316, 315, 307, 308, 317, 316, 308, 309, 318, 317, 309, 310, 311, 318, 310, 303, 320, 319, 128, 129, 321, 320, 129, 130, 322, 321, 130, 131, 323, 322, 131, 132, 324, 323, 132, 133, 325, 324, 133, 134, 326, 325, 134, 127, 319, 326, 127, 128, 371, 328, 388, 389, 383, 384, 332, 365, 328, 335, 387, 388, 333, 337, 385, 386, 335, 333, 386, 387, 337, 332, 384, 385, 379, 412, 413, 331, 330, 409, 410, 400, 338, 408, 409, 330, 334, 407, 408, 338, 336, 406, 407, 334, 329, 405, 406, 336, 394, 404, 405, 329, 327, 401, 402, 393, 348, 349, 398, 399, 349, 350, 397, 398, 350, 351, 396, 397, 351, 352, 395, 396, 366, 367, 341, 340, 367, 368, 342, 341, 368, 369, 343, 342, 369, 370, 344, 343, 380, 381, 358, 346, 347, 355, 360, 359, 355, 356, 361, 360, 356, 357, 362, 361, 357, 353, 363, 362, 354, 364, 391, 392, 381, 382, 378, 358, 359, 360, 376, 377, 360, 361, 375, 376, 361, 362, 374, 375, 362, 363, 373, 374, 364, 372, 390, 391, 372, 371, 389, 390, 374, 373, 370, 369, 375, 374, 369, 368, 376, 375, 368, 367, 377, 376, 367, 366, 378, 382, 383, 365, 339, 411, 412, 379, 347, 359, 381, 380, 359, 377, 382, 381, 383, 382, 377, 366, 366, 340, 384, 383, 385, 384, 340, 341, 386, 385, 341, 342, 387, 386, 342, 343, 388, 387, 343, 344, 389, 388, 344, 370, 390, 389, 370, 373, 391, 390, 373, 363, 392, 391, 363, 353, 393, 402, 403, 345, 345, 403, 404, 394, 396, 395, 353, 357, 397, 396, 357, 356, 398, 397, 356, 355, 399, 398, 355, 347, 400, 410, 411, 339, 401, 354, 392, 402, 403, 402, 392, 353, 404, 403, 353, 395, 405, 404, 395, 352, 406, 405, 352, 351, 407, 406, 351, 350, 408, 407, 350, 349, 409, 408, 349, 348, 410, 409, 348, 399, 411, 410, 399, 347, 412, 411, 347, 380, 413, 412, 380, 346, 458, 415, 475, 476, 470, 471, 419, 452, 415, 422, 474, 475, 420, 424, 472, 473, 422, 420, 473, 474, 424, 419, 471, 472, 466, 499, 500, 418, 417, 496, 497, 487, 425, 495, 496, 417, 421, 494, 495, 425, 423, 493, 494, 421, 416, 492, 493, 423, 481, 491, 492, 416, 414, 488, 489, 480, 435, 436, 485, 486, 436, 437, 484, 485, 437, 438, 483, 484, 438, 439, 482, 483, 453, 454, 428, 427, 454, 455, 429, 428, 455, 456, 430, 429, 456, 457, 431, 430, 467, 468, 445, 433, 434, 442, 447, 446, 442, 443, 448, 447, 443, 444, 449, 448, 444, 440, 450, 449, 441, 451, 478, 479, 468, 469, 465, 445, 446, 447, 463, 464, 447, 448, 462, 463, 448, 449, 461, 462, 449, 450, 460, 461, 451, 459, 477, 478, 459, 458, 476, 477, 461, 460, 457, 456, 462, 461, 456, 455, 463, 462, 455, 454, 464, 463, 454, 453, 465, 469, 470, 452, 426, 498, 499, 466, 434, 446, 468, 467, 446, 464, 469, 468, 470, 469, 464, 453, 453, 427, 471, 470, 472, 471, 427, 428, 473, 472, 428, 429, 474, 473, 429, 430, 475, 474, 430, 431, 476, 475, 431, 457, 477, 476, 457, 460, 478, 477, 460, 450, 479, 478, 450, 440, 480, 489, 490, 432, 432, 490, 491, 481, 483, 482, 440, 444, 484, 483, 444, 443, 485, 484, 443, 442, 486, 485, 442, 434, 487, 497, 498, 426, 488, 441, 479, 489, 490, 489, 479, 440, 491, 490, 440, 482, 492, 491, 482, 439, 493, 492, 439, 438, 494, 493, 438, 437, 495, 494, 437, 436, 496, 495, 436, 435, 497, 496, 435, 486, 498, 497, 486, 434, 499, 498, 434, 467, 500, 499, 467, 433, 545, 502, 562, 563, 557, 558, 506, 539, 502, 509, 561, 562, 507, 511, 559, 560, 509, 507, 560, 561, 511, 506, 558, 559, 553, 586, 587, 505, 504, 583, 584, 574, 512, 582, 583, 504, 508, 581, 582, 512, 510, 580, 581, 508, 503, 579, 580, 510, 568, 578, 579, 503, 501, 575, 576, 567, 522, 523, 572, 573, 523, 524, 571, 572, 524, 525, 570, 571, 525, 526, 569, 570, 540, 541, 515, 514, 541, 542, 516, 515, 542, 543, 517, 516, 543, 544, 518, 517, 554, 555, 532, 520, 521, 529, 534, 533, 529, 530, 535, 534, 530, 531, 536, 535, 531, 527, 537, 536, 528, 538, 565, 566, 555, 556, 552, 532, 533, 534, 550, 551, 534, 535, 549, 550, 535, 536, 548, 549, 536, 537, 547, 548, 538, 546, 564, 565, 546, 545, 563, 564, 548, 547, 544, 543, 549, 548, 543, 542, 550, 549, 542, 541, 551, 550, 541, 540, 552, 556, 557, 539, 513, 585, 586, 553, 521, 533, 555, 554, 533, 551, 556, 555, 557, 556, 551, 540, 540, 514, 558, 557, 559, 558, 514, 515, 560, 559, 515, 516, 561, 560, 516, 517, 562, 561, 517, 518, 563, 562, 518, 544, 564, 563, 544, 547, 565, 564, 547, 537, 566, 565, 537, 527, 567, 576, 577, 519, 519, 577, 578, 568, 570, 569, 527, 531, 571, 570, 531, 530, 572, 571, 530, 529, 573, 572, 529, 521, 574, 584, 585, 513, 575, 528, 566, 576, 577, 576, 566, 527, 578, 577, 527, 569, 579, 578, 569, 526, 580, 579, 526, 525, 581, 580, 525, 524, 582, 581, 524, 523, 583, 582, 523, 522, 584, 583, 522, 573, 585, 584, 573, 521, 586, 585, 521, 554, 587, 586, 554, 520]
                                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_wall_e_anim_v003_light_gray_sg>
                                        point3f[] points = [(9.86371, 8.871303, -0.09287637), (10.431242, 8.871303, -0.022771606), (9.86371, 8.58097, -0.09287637), (9.86371, 8.58097, 0.11254553), (9.86371, 8.871303, 0.11254553), (10.431242, 8.871303, 0.04244077), (10.431242, 8.871303, 0.009834582), (9.86371, 8.566126, 0.009834582), (10.431242, 8.871303, -0.0195749), (9.86371, 8.58097, -0.08276144), (10.431242, 8.871303, 0.039030954), (9.86371, 8.58097, 0.10139967), (9.86371, 8.701692, 0.11254553), (10.431242, 8.701692, 0.04244077), (10.431242, 8.701692, 0.039030954), (10.431242, 8.69427, 0.009834582), (10.431242, 8.701692, -0.0195749), (10.431242, 8.701692, -0.022771606), (9.86371, 8.701692, -0.09287637), (10.110152, 8.871303, 0.11254553), (10.110152, 8.701692, 0.11254553), (10.110152, 8.58097, 0.11254553), (10.110152, 8.58097, 0.10139967), (10.110152, 8.566126, 0.009834582), (10.110152, 8.58097, -0.08276144), (10.110152, 8.58097, -0.09287637), (10.110152, 8.701692, -0.09287637), (10.110152, 8.871303, -0.09287637), (10.110152, 8.701692, 0.10139967), (10.110152, 8.69427, 0.009834582), (10.110152, 8.701692, -0.08276144), (10.116609, 8.871303, 0.11254553), (10.116609, 8.701692, 0.11254553), (10.116609, 8.701692, 0.10139967), (10.116609, 8.69427, 0.009834582), (10.116609, 8.701692, -0.08276143), (10.116609, 8.701692, -0.09287637), (10.116609, 8.871303, -0.09287637), (10.4248295, 8.871303, 0.04244077), (10.4248295, 8.701692, 0.04244077), (10.4248295, 8.701692, 0.039030954), (10.4248295, 8.69427, 0.009834582), (10.4248295, 8.701692, -0.0195749), (10.4248295, 8.701692, -0.022771606), (10.4248295, 8.871303, -0.022771606), (10.274117, 8.871303, -0.06759587), (10.274117, 8.701692, -0.06759587), (10.274117, 8.701692, -0.05997903), (10.274117, 8.69427, 0.009834582), (10.274117, 8.701692, 0.078938544), (10.274117, 8.701692, 0.08726503), (10.274117, 8.871303, 0.08726503), (9.86371, 8.708758, 0.11254553), (10.110152, 8.708758, 0.11254553), (10.116609, 8.708758, 0.11254553), (10.274117, 8.708758, 0.08726503), (10.4248295, 8.708758, 0.04244077), (10.431242, 8.708758, 0.04244077), (10.431242, 8.708758, 0.039030954), (10.431242, 8.701645, 0.009834582), (10.431242, 8.708758, -0.0195749), (10.431242, 8.708758, -0.022771606), (10.4248295, 8.708758, -0.022771606), (10.274117, 8.708758, -0.06759587), (10.116609, 8.708758, -0.09287637), (10.110152, 8.708758, -0.09287637), (9.86371, 8.708758, -0.09287637), (9.86371, 8.692343, -0.09287637), (10.110152, 8.692342, -0.09287637), (10.110152, 8.692342, -0.08276144), (10.110152, 8.684345, 0.009834582), (10.110152, 8.692342, 0.10139967), (10.110152, 8.692342, 0.11254553), (9.86371, 8.692343, 0.11254553), (10.101345, 8.871303, -0.09287637), (10.101345, 8.708758, -0.09287637), (10.101345, 8.701692, -0.09287637), (10.101345, 8.692342, -0.09287637), (9.991847, 8.58097, -0.09287637), (9.991847, 8.58097, -0.08276144), (9.991847, 8.566126, 0.009834582), (9.991847, 8.58097, 0.10139967), (9.991847, 8.58097, 0.11254553), (10.101345, 8.692342, 0.11254553), (10.101345, 8.701692, 0.11254553), (10.101345, 8.708758, 0.11254553), (10.101345, 8.871303, 0.11254553), (9.896657, 9.804338, -0.53232896), (9.896657, 9.26217, -0.7569004), (9.896657, 8.720008, -0.53232896), (9.896657, 8.495436, 0.009834582), (9.896657, 8.720008, 0.55199814), (9.896657, 9.26217, 0.77656937), (9.896657, 9.804338, 0.55199814), (9.896657, 10.02891, 0.009834582), (9.599159, 9.804338, -0.53232896), (9.599159, 9.26217, -0.7569004), (9.599159, 8.720008, -0.53232896), (9.599159, 8.495436, 0.009834621), (9.599159, 8.720008, 0.55199814), (9.599159, 9.26217, 0.77656937), (9.599159, 9.804338, 0.55199814), (9.599159, 10.02891, 0.009834582), (9.896657, 9.612329, -0.340325), (9.896657, 9.26217, -0.48536545), (9.896657, 8.912011, -0.340325), (9.896657, 8.766972, 0.009834582), (9.896657, 8.912011, 0.35999417), (9.896657, 9.26217, 0.5050345), (9.896657, 9.612329, 0.35999417), (9.896657, 9.757369, 0.009834582), (10.443167, 9.612329, -0.340325), (10.443167, 9.26217, -0.48536545), (10.443167, 8.912011, -0.340325), (10.443167, 8.766972, 0.009834582), (10.443167, 8.912011, 0.35999417), (10.443167, 9.26217, 0.5050345), (10.443167, 9.612329, 0.35999417), (10.443167, 9.757369, 0.009834582), (10.443167, 9.544896, -0.27288854), (10.443167, 9.26217, -0.38999593), (10.443167, 8.979449, -0.27288854), (10.443167, 8.862343, 0.009834574), (10.443167, 8.979449, 0.29255763), (10.443167, 9.26217, 0.40966502), (10.443167, 9.544896, 0.29255763), (10.443167, 9.662004, 0.009834574), (9.599159, 9.544896, -0.27288854), (9.599159, 9.26217, -0.38999593), (9.599159, 8.979449, -0.27288854), (9.599159, 8.862343, 0.009834574), (9.599159, 8.979449, 0.29255763), (9.599159, 9.26217, 0.40966502), (9.599159, 9.544896, 0.29255763), (9.599159, 9.662004, 0.009834574), (9.599159, 9.608639, -0.33663446), (9.599159, 9.26217, -0.48014632), (9.599159, 8.915702, -0.33663446), (9.599159, 8.772192, 0.009834582), (9.599159, 8.915702, 0.35630363), (9.599159, 9.26217, 0.4998154), (9.599159, 9.608639, 0.35630363), (9.599159, 9.752153, 0.009834582), (9.795331, 9.608639, -0.33663446), (9.795331, 9.26217, -0.48014632), (9.795331, 8.915702, -0.33663446), (9.795331, 8.772192, 0.009834582), (9.795331, 8.915702, 0.35630363), (9.795331, 9.26217, 0.4998154), (9.795331, 9.608639, 0.35630363), (9.795331, 9.752153, 0.009834582), (9.795331, 9.742068, -0.47006378), (9.795331, 9.26217, -0.668844), (9.795331, 8.782272, -0.47006378), (9.795331, 8.583493, 0.0098346), (9.795331, 8.782272, 0.48973295), (9.795331, 9.26217, 0.6885129), (9.795331, 9.742068, 0.48973295), (9.795331, 9.940849, 0.0098346), (9.599159, 9.742068, -0.47006378), (9.599159, 9.26217, -0.668844), (9.599159, 8.782272, -0.47006378), (9.599159, 8.583493, 0.0098346), (9.599159, 8.782272, 0.48973295), (9.599159, 9.26217, 0.6885129), (9.599159, 9.742068, 0.48973295), (9.599159, 9.940849, 0.0098346), (10.434698, 9.26217, -0.38999593), (10.434698, 8.979449, -0.27288854), (10.434698, 8.862343, 0.009834574), (10.434698, 8.979449, 0.29255763), (10.434698, 9.26217, 0.40966502), (10.434698, 9.544896, 0.29255763), (10.434698, 9.662004, 0.009834574), (10.434698, 9.544896, -0.27288854), (10.443167, 9.26217, -0.4057464), (10.443167, 8.968311, -0.28402582), (10.443167, 8.846592, 0.009834575), (10.443167, 8.968311, 0.3036949), (10.443167, 9.26217, 0.4254155), (10.443167, 9.556033, 0.3036949), (10.443167, 9.677753, 0.009834575), (10.443167, 9.556033, -0.28402582), (10.443167, 9.26217, -0.4683549), (10.443167, 8.92404, -0.32829672), (10.443167, 8.783982, 0.00983458), (10.443167, 8.92404, 0.34796587), (10.443167, 9.26217, 0.488024), (10.443167, 9.600301, 0.34796587), (10.443167, 9.740359, 0.00983458), (10.443167, 9.600301, -0.32829672), (10.429919, 9.26217, -0.48536545), (10.429919, 8.912011, -0.340325), (10.429919, 8.766972, 0.009834582), (10.429919, 8.912011, 0.35999417), (10.429919, 9.26217, 0.5050345), (10.429919, 9.612329, 0.35999417), (10.429919, 9.757369, 0.009834582), (10.429919, 9.612329, -0.340325), (9.915871, 9.26217, -0.48536545), (9.915871, 8.912011, -0.340325), (9.915871, 8.766972, 0.009834582), (9.915871, 8.912011, 0.35999417), (9.915871, 9.26217, 0.5050345), (9.915871, 9.612329, 0.35999417), (9.915871, 9.757369, 0.009834582), (9.915871, 9.612329, -0.340325), (9.896657, 9.26217, -0.5127499), (9.896657, 8.892647, -0.35968864), (9.896657, 8.739587, 0.009834582), (9.896657, 8.892647, 0.3793578), (9.896657, 9.26217, 0.53241885), (9.896657, 9.631693, 0.3793578), (9.896657, 9.784754, 0.009834582), (9.896657, 9.631693, -0.35968864), (9.896657, 9.26217, -0.7367337), (9.896657, 8.734268, -0.5180689), (9.896657, 8.515603, 0.009834582), (9.896657, 8.734268, 0.5377381), (9.896657, 9.26217, 0.75640273), (9.896657, 9.790077, 0.5377381), (9.896657, 10.008742, 0.009834582), (9.896657, 9.790077, -0.5180689), (9.878413, 9.26217, -0.7569004), (9.878413, 9.804338, -0.53232896), (9.878413, 10.02891, 0.009834582), (9.878413, 9.804338, 0.55199814), (9.878413, 9.26217, 0.77656937), (9.878413, 8.720008, 0.55199814), (9.878413, 8.495436, 0.009834585), (9.878413, 8.720008, -0.53232896), (9.618898, 9.26217, -0.7569004), (9.618898, 9.804338, -0.53232896), (9.618898, 10.02891, 0.009834582), (9.618898, 9.804338, 0.55199814), (9.618898, 9.26217, 0.77656937), (9.618898, 8.720008, 0.55199814), (9.618897, 8.495436, 0.009834618), (9.618898, 8.720008, -0.53232896), (9.599159, 9.26217, -0.7389505), (9.599159, 8.7327, -0.5196364), (9.599159, 8.513386, 0.009834616), (9.599159, 8.7327, 0.5393057), (9.599159, 9.26217, 0.7586194), (9.599159, 9.791645, 0.5393057), (9.599159, 10.010959, 0.009834586), (9.599159, 9.791645, -0.5196364), (9.599159, 9.26217, -0.6852474), (9.599159, 8.770673, -0.48166272), (9.599159, 8.56709, 0.009834603), (9.599159, 8.770673, 0.50133187), (9.599159, 9.26217, 0.70491636), (9.599159, 9.753668, 0.50133187), (9.599159, 9.957253, 0.009834597), (9.599159, 9.753668, -0.48166272), (9.624092, 9.26217, -0.668844), (9.624092, 8.782272, -0.47006378), (9.624092, 8.583493, 0.0098346), (9.624092, 8.782272, 0.48973295), (9.624092, 9.26217, 0.6885129), (9.624092, 9.742068, 0.48973295), (9.624092, 9.940849, 0.0098346), (9.624092, 9.742068, -0.47006378), (9.772969, 9.26217, -0.668844), (9.772969, 8.782272, -0.4700638), (9.772969, 8.583493, 0.0098346), (9.772969, 8.782272, 0.48973298), (9.772969, 9.26217, 0.6885129), (9.772969, 9.742068, 0.48973298), (9.772969, 9.940849, 0.0098346), (9.772969, 9.742068, -0.4700638), (9.795331, 9.26217, -0.6474745), (9.795331, 8.797382, -0.45495334), (9.795331, 8.604863, 0.009834598), (9.795331, 8.797382, 0.47462252), (9.795331, 9.26217, 0.66714346), (9.795331, 9.726958, 0.47462252), (9.795331, 9.91948, 0.009834598), (9.795331, 9.726958, -0.45495334), (9.795331, 9.26217, -0.49345195), (9.795331, 8.906294, -0.34604296), (9.795331, 8.758886, 0.009834583), (9.795331, 8.906294, 0.36571214), (9.795331, 9.26217, 0.513121), (9.795331, 9.618048, 0.36571214), (9.795331, 9.765459, 0.009834583), (9.795331, 9.618048, -0.34604296), (9.769852, 9.26217, -0.48014632), (9.769852, 8.915702, -0.33663446), (9.769852, 8.772192, 0.009834582), (9.769852, 8.915702, 0.35630363), (9.769852, 9.26217, 0.4998154), (9.769852, 9.608639, 0.35630363), (9.769852, 9.752153, 0.009834582), (9.769852, 9.608639, -0.33663446), (9.619789, 9.26217, -0.48014632), (9.619789, 8.915702, -0.33663446), (9.619789, 8.772192, 0.009834582), (9.619789, 8.915702, 0.35630363), (9.619789, 9.26217, 0.4998154), (9.619789, 9.608639, 0.35630363), (9.619789, 9.752153, 0.009834582), (9.619789, 9.608639, -0.33663446), (9.599159, 9.26217, -0.46115077), (9.599159, 8.929134, -0.32320255), (9.599159, 8.791188, 0.00983458), (9.599159, 8.929134, 0.34287173), (9.599159, 9.26217, 0.48081985), (9.599159, 9.595208, 0.34287173), (9.599159, 9.733158, 0.00983458), (9.599159, 9.595208, -0.32320255), (9.599159, 9.26217, -0.40543765), (9.599159, 8.96853, -0.2838075), (9.599159, 8.846901, 0.009834575), (9.599159, 8.96853, 0.30347657), (9.599159, 9.26217, 0.42510673), (9.599159, 9.555815, 0.30347657), (9.599159, 9.677445, 0.009834575), (9.599159, 9.555815, -0.2838075), (9.617826, 9.26217, -0.38999593), (9.617826, 8.979449, -0.27288854), (9.617826, 8.862343, 0.009834574), (9.617826, 8.979449, 0.29255763), (9.617826, 9.26217, 0.40966502), (9.617826, 9.544896, 0.29255763), (9.617826, 9.662004, 0.009834574), (9.617826, 9.544896, -0.27288854), (9.86371, 9.159465, 0.40070754), (10.431242, 9.229569, 0.40070754), (9.86371, 9.159465, 0.6910403), (9.86371, 9.364886, 0.6910403), (9.86371, 9.364886, 0.40070754), (10.431242, 9.294782, 0.40070754), (10.431242, 9.262176, 0.40070754), (9.86371, 9.262176, 0.7058842), (10.431242, 9.232766, 0.40070754), (9.86371, 9.1695795, 0.6910403), (10.431242, 9.291371, 0.40070754), (9.86371, 9.353741, 0.6910403), (9.86371, 9.364886, 0.570318), (10.431242, 9.294782, 0.5703182), (10.431242, 9.291371, 0.5703182), (10.431242, 9.262176, 0.5777402), (10.431242, 9.232766, 0.5703182), (10.431242, 9.229569, 0.5703182), (9.86371, 9.159465, 0.570318), (10.110152, 9.364886, 0.40070754), (10.110152, 9.364886, 0.5703182), (10.110152, 9.364886, 0.6910403), (10.110152, 9.353741, 0.6910403), (10.110152, 9.262176, 0.7058842), (10.110152, 9.1695795, 0.6910403), (10.110152, 9.159465, 0.6910403), (10.110152, 9.159465, 0.5703182), (10.110152, 9.159465, 0.40070754), (10.110152, 9.353741, 0.5703182), (10.110152, 9.262176, 0.5777402), (10.110152, 9.1695795, 0.5703182), (10.116609, 9.364886, 0.40070754), (10.116609, 9.364886, 0.5703182), (10.116609, 9.353741, 0.5703182), (10.116609, 9.262176, 0.5777402), (10.116609, 9.1695795, 0.5703182), (10.116609, 9.159465, 0.5703182), (10.116609, 9.159465, 0.40070754), (10.4248295, 9.294782, 0.40070754), (10.4248295, 9.294782, 0.5703182), (10.4248295, 9.291371, 0.5703182), (10.4248295, 9.262176, 0.5777402), (10.4248295, 9.232766, 0.5703182), (10.4248295, 9.229569, 0.5703182), (10.4248295, 9.229569, 0.40070754), (10.274117, 9.184745, 0.40070754), (10.274117, 9.184745, 0.5703182), (10.274117, 9.192362, 0.5703182), (10.274117, 9.262176, 0.5777402), (10.274117, 9.33128, 0.5703182), (10.274117, 9.339605, 0.5703182), (10.274117, 9.339605, 0.40070754), (9.86371, 9.364886, 0.56325173), (10.110152, 9.364886, 0.56325185), (10.116609, 9.364886, 0.56325185), (10.274117, 9.339605, 0.56325185), (10.4248295, 9.294782, 0.56325185), (10.431242, 9.294782, 0.56325185), (10.431242, 9.291371, 0.56325185), (10.431242, 9.262176, 0.5703646), (10.431242, 9.232766, 0.56325185), (10.431242, 9.229569, 0.56325185), (10.4248295, 9.229569, 0.56325185), (10.274117, 9.184745, 0.56325185), (10.116609, 9.159465, 0.56325185), (10.110152, 9.159465, 0.56325185), (9.86371, 9.159465, 0.56325173), (9.86371, 9.159465, 0.57966745), (10.110152, 9.159465, 0.5796677), (10.110152, 9.1695795, 0.5796677), (10.110152, 9.262176, 0.5876645), (10.110152, 9.353741, 0.5796677), (10.110152, 9.364886, 0.5796677), (9.86371, 9.364886, 0.57966745), (10.101345, 9.159465, 0.40070754), (10.101345, 9.159465, 0.56325185), (10.101345, 9.159465, 0.5703182), (10.101345, 9.159465, 0.5796677), (9.991847, 9.159465, 0.6910403), (9.991847, 9.1695795, 0.6910403), (9.991847, 9.262176, 0.7058842), (9.991847, 9.353741, 0.6910403), (9.991847, 9.364886, 0.6910403), (10.101345, 9.364886, 0.5796677), (10.101345, 9.364886, 0.5703182), (10.101345, 9.364886, 0.56325185), (10.101345, 9.364886, 0.40070754), (9.86371, 9.364886, -0.38103837), (10.431242, 9.294782, -0.38103837), (9.86371, 9.364886, -0.6713712), (9.86371, 9.159465, -0.6713712), (9.86371, 9.159465, -0.38103837), (10.431242, 9.229569, -0.38103837), (10.431242, 9.262176, -0.38103837), (9.86371, 9.262176, -0.68621516), (10.431242, 9.291585, -0.38103837), (9.86371, 9.354772, -0.6713712), (10.431242, 9.232979, -0.38103837), (9.86371, 9.17061, -0.6713712), (9.86371, 9.159465, -0.5506489), (10.431242, 9.229569, -0.55064905), (10.431242, 9.232979, -0.55064905), (10.431242, 9.262176, -0.558071), (10.431242, 9.291585, -0.55064905), (10.431242, 9.294782, -0.55064905), (9.86371, 9.364886, -0.5506489), (10.110152, 9.159465, -0.38103837), (10.110152, 9.159465, -0.55064905), (10.110152, 9.159465, -0.6713712), (10.110152, 9.17061, -0.6713712), (10.110152, 9.262176, -0.68621516), (10.110152, 9.354772, -0.6713712), (10.110152, 9.364886, -0.6713712), (10.110152, 9.364886, -0.55064905), (10.110152, 9.364886, -0.38103837), (10.110152, 9.17061, -0.55064905), (10.110152, 9.262176, -0.558071), (10.110152, 9.354772, -0.55064905), (10.116609, 9.159465, -0.38103837), (10.116609, 9.159465, -0.55064905), (10.116609, 9.17061, -0.55064905), (10.116609, 9.262176, -0.558071), (10.116609, 9.354772, -0.55064905), (10.116609, 9.364886, -0.55064905), (10.116609, 9.364886, -0.38103837), (10.4248295, 9.229569, -0.38103837), (10.4248295, 9.229569, -0.55064905), (10.4248295, 9.232979, -0.55064905), (10.4248295, 9.262176, -0.558071), (10.4248295, 9.291585, -0.55064905), (10.4248295, 9.294782, -0.55064905), (10.4248295, 9.294782, -0.38103837), (10.274117, 9.339605, -0.38103837), (10.274117, 9.339605, -0.55064905), (10.274117, 9.331989, -0.55064905), (10.274117, 9.262176, -0.558071), (10.274117, 9.193071, -0.55064905), (10.274117, 9.184745, -0.55064905), (10.274117, 9.184745, -0.38103837), (9.86371, 9.159465, -0.54358256), (10.110152, 9.159465, -0.5435828), (10.116609, 9.159465, -0.5435828), (10.274117, 9.184745, -0.5435828), (10.4248295, 9.229569, -0.5435828), (10.431242, 9.229569, -0.5435828), (10.431242, 9.232979, -0.5435828), (10.431242, 9.262176, -0.55069554), (10.431242, 9.291585, -0.5435828), (10.431242, 9.294782, -0.5435828), (10.4248295, 9.294782, -0.5435828), (10.274117, 9.339605, -0.5435828), (10.116609, 9.364886, -0.5435828), (10.110152, 9.364886, -0.5435828), (9.86371, 9.364886, -0.54358256), (9.86371, 9.364886, -0.5599984), (10.110152, 9.364886, -0.55999863), (10.110152, 9.354772, -0.55999863), (10.110152, 9.262176, -0.5679953), (10.110152, 9.17061, -0.55999863), (10.110152, 9.159465, -0.55999863), (9.86371, 9.159465, -0.5599984), (10.101345, 9.364886, -0.38103837), (10.101345, 9.364886, -0.5435828), (10.101345, 9.364886, -0.55064905), (10.101345, 9.364886, -0.55999863), (9.991847, 9.364886, -0.6713712), (9.991847, 9.354772, -0.6713712), (9.991847, 9.262176, -0.68621516), (9.991847, 9.17061, -0.6713712), (9.991847, 9.159465, -0.6713712), (10.101345, 9.159465, -0.55999863), (10.101345, 9.159465, -0.55064905), (10.101345, 9.159465, -0.5435828), (10.101345, 9.159465, -0.38103837), (9.86371, 9.6530485, 0.11254553), (10.431242, 9.6530485, 0.04244077), (9.86371, 9.943381, 0.11254553), (9.86371, 9.943381, -0.09287637), (9.86371, 9.6530485, -0.09287637), (10.431242, 9.6530485, -0.022771606), (10.431242, 9.6530485, 0.009834582), (9.86371, 9.958225, 0.009834582), (10.431242, 9.6530485, 0.039244063), (9.86371, 9.943381, 0.1024306), (10.431242, 9.6530485, -0.019361792), (9.86371, 9.943381, -0.08173051), (9.86371, 9.822659, -0.09287637), (10.431242, 9.822659, -0.022771606), (10.431242, 9.822659, -0.019361792), (10.431242, 9.830081, 0.009834582), (10.431242, 9.822659, 0.039244063), (10.431242, 9.822659, 0.04244077), (9.86371, 9.822659, 0.11254553), (10.110152, 9.6530485, -0.09287637), (10.110152, 9.822659, -0.09287637), (10.110152, 9.943381, -0.09287637), (10.110152, 9.943381, -0.08173051), (10.110152, 9.958225, 0.009834582), (10.110152, 9.943381, 0.1024306), (10.110152, 9.943381, 0.11254553), (10.110152, 9.822659, 0.11254553), (10.110152, 9.6530485, 0.11254553), (10.110152, 9.822659, -0.08173051), (10.110152, 9.830081, 0.009834582), (10.110152, 9.822659, 0.1024306), (10.116609, 9.6530485, -0.09287637), (10.116609, 9.822659, -0.09287637), (10.116609, 9.822659, -0.08173051), (10.116609, 9.830081, 0.009834582), (10.116609, 9.822659, 0.10243059), (10.116609, 9.822659, 0.11254553), (10.116609, 9.6530485, 0.11254553), (10.4248295, 9.6530485, -0.022771606), (10.4248295, 9.822659, -0.022771606), (10.4248295, 9.822659, -0.019361792), (10.4248295, 9.830081, 0.009834582), (10.4248295, 9.822659, 0.039244063), (10.4248295, 9.822659, 0.04244077), (10.4248295, 9.6530485, 0.04244077), (10.274117, 9.6530485, 0.08726503), (10.274117, 9.822659, 0.08726503), (10.274117, 9.822659, 0.07964819), (10.274117, 9.830081, 0.009834582), (10.274117, 9.822659, -0.059269384), (10.274117, 9.822659, -0.06759587), (10.274117, 9.6530485, -0.06759587), (9.86371, 9.815593, -0.09287637), (10.110152, 9.815593, -0.09287637), (10.116609, 9.815593, -0.09287637), (10.274117, 9.815593, -0.06759587), (10.4248295, 9.815593, -0.022771606), (10.431242, 9.815593, -0.022771606), (10.431242, 9.815593, -0.019361792), (10.431242, 9.822705, 0.009834582), (10.431242, 9.815593, 0.039244063), (10.431242, 9.815593, 0.04244077), (10.4248295, 9.815593, 0.04244077), (10.274117, 9.815593, 0.08726503), (10.116609, 9.815593, 0.11254553), (10.110152, 9.815593, 0.11254553), (9.86371, 9.815593, 0.11254553), (9.86371, 9.832008, 0.11254553), (10.110152, 9.832008, 0.11254553), (10.110152, 9.832008, 0.1024306), (10.110152, 9.840005, 0.009834582), (10.110152, 9.832008, -0.08173051), (10.110152, 9.832008, -0.09287637), (9.86371, 9.832008, -0.09287637), (10.101345, 9.6530485, 0.11254553), (10.101345, 9.815593, 0.11254553), (10.101345, 9.822659, 0.11254553), (10.101345, 9.832008, 0.11254553), (9.991847, 9.943381, 0.11254553), (9.991847, 9.943381, 0.1024306), (9.991847, 9.958225, 0.009834582), (9.991847, 9.943381, -0.08173051), (9.991847, 9.943381, -0.09287637), (10.101345, 9.832008, -0.09287637), (10.101345, 9.822659, -0.09287637), (10.101345, 9.815593, -0.09287637), (10.101345, 9.6530485, -0.09287637)]
                                        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.375, 0.5), (0.375, 0.75), (0.625, 0.75), (0.875, 0), (0.75, 0), (0.375, 0.375), (0.6373099, 0), (0.375, 0.26230994), (0.8614354, 0), (0.375, 0.4864354), (0.375, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.375, 0.125), (0.483559, 0.75), (0.483559, 0.625), (0.483559, 0.5), (0.483559, 0.4864354), (0.483559, 0.375), (0.483559, 0.26230994), (0.483559, 0.25), (0.483559, 0.125), (0.483559, 0), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0.48640287, 0.75), (0.48640287, 0.625), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (0.48640287, 0.125), (1, 0.020106256), (0.48640287, 0), (0.6221752, 0.75), (0.6221752, 0.625), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (0.6221752, 0.125), (1, 0.9800284), (0.6221752, 0), (0.55578625, 0), (0.55578625, 0.125), (1, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0.625), (0, 0.5106528), (0.55578625, 0.75), (0.375, 0.6302078), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.55578625, 0.6302078), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.875, 0.119792245), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.6373099, 0.119792245), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.55578625, 0.119792245), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.375, 0.119792245), (0.375, 0.13468081), (1, 0.9225536), (0.483559, 0.13468081), (1, 0.9225536), (0, 0.9225536), (1, 0.9225536), (0, 0.9225536), (1, 0.9225536), (0, 0.9225536), (0, 0.9225536), (0.483559, 0.61531925), (0.375, 0.61531925), (0.4796792, 0), (0.4796792, 0.119792245), (0.4796792, 0.125), (0.4796792, 0.13468081), (0.4796792, 0.25), (0.4796792, 0.26230994), (0.4796792, 0.375), (0.4796792, 0.4864354), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.4796792, 0.625), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.3125), (0.40625, 0.3125), (0.40625, 0.3355541), (0.375, 0.3355541), (0.4375, 0.3125), (0.43750003, 0.3355541), (0.46875, 0.3125), (0.46875003, 0.3355541), (0.5, 0.3125), (0.5, 0.3355541), (0.53125, 0.3125), (0.53125, 0.3355541), (0.5625, 0.3125), (0.5625, 0.3355541), (0.59375, 0.3125), (0.59375, 0.3355541), (0.625, 0.3125), (0.625, 0.3355541), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0.40625, 0.6634969), (0.375, 0.6634969), (0.625, 0.6634969), (0.59375, 0.6634969), (0.5625, 0.6634969), (0.53125, 0.6634969), (0.5, 0.6634969), (0.46875, 0.6634969), (0.4375, 0.6634969), (0.40625, 0.68843985), (0.375, 0.68843985), (0.625, 0.68843985), (0.59375, 0.68843985), (0.5625, 0.68843985), (0.53125, 0.68843985), (0.5, 0.68843985), (0.46875, 0.68843985), (0.4375, 0.68843985), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925)] (
                                            customData = {
                                                dictionary Maya = {
                                                    token name = "map1"
                                                }
                                            }
                                            interpolation = "faceVarying"
                                        )
                                        int[] primvars:st:indices = [85, 1, 108, 109, 102, 103, 5, 74, 1, 9, 107, 108, 7, 11, 105, 106, 9, 7, 106, 107, 11, 6, 104, 105, 98, 137, 138, 4, 3, 134, 135, 125, 12, 133, 134, 3, 8, 132, 133, 12, 10, 131, 132, 8, 2, 130, 131, 10, 114, 129, 130, 2, 0, 126, 127, 113, 30, 31, 121, 123, 34, 35, 119, 122, 38, 39, 117, 120, 42, 43, 115, 118, 76, 77, 48, 49, 78, 79, 52, 53, 80, 81, 56, 57, 82, 84, 60, 61, 99, 100, 62, 21, 46, 47, 65, 64, 50, 51, 67, 66, 54, 55, 69, 68, 58, 59, 72, 70, 29, 73, 111, 112, 100, 101, 97, 62, 64, 65, 93, 96, 66, 67, 91, 94, 68, 69, 89, 92, 70, 72, 88, 90, 73, 86, 110, 111, 86, 85, 109, 110, 90, 88, 84, 82, 92, 89, 81, 80, 94, 91, 79, 78, 96, 93, 77, 76, 97, 101, 102, 74, 13, 136, 137, 98, 22, 63, 100, 99, 63, 95, 101, 100, 102, 101, 95, 75, 75, 14, 103, 102, 105, 104, 15, 16, 106, 105, 16, 17, 107, 106, 17, 18, 108, 107, 18, 19, 109, 108, 19, 83, 110, 109, 83, 87, 111, 110, 87, 71, 112, 111, 71, 28, 113, 127, 128, 20, 20, 128, 129, 114, 118, 115, 44, 45, 120, 117, 40, 41, 122, 119, 36, 37, 123, 121, 32, 33, 125, 135, 136, 13, 126, 29, 112, 127, 128, 127, 112, 28, 129, 128, 28, 116, 130, 129, 116, 27, 131, 130, 27, 26, 132, 131, 26, 25, 133, 132, 25, 24, 134, 133, 24, 23, 135, 134, 23, 124, 136, 135, 124, 22, 137, 136, 22, 99, 138, 137, 99, 21, 139, 140, 141, 142, 140, 143, 144, 141, 143, 145, 146, 144, 145, 147, 148, 146, 147, 149, 150, 148, 149, 151, 152, 150, 151, 153, 154, 152, 153, 155, 156, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 260, 259, 445, 446, 264, 263, 447, 448, 268, 267, 449, 450, 272, 271, 451, 452, 276, 275, 453, 454, 280, 279, 455, 456, 284, 283, 457, 458, 256, 255, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 228, 227, 462, 461, 232, 231, 466, 465, 236, 235, 470, 469, 240, 239, 474, 473, 244, 243, 478, 477, 248, 247, 482, 481, 252, 251, 486, 485, 224, 223, 490, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 196, 195, 494, 493, 200, 199, 498, 497, 204, 203, 502, 501, 208, 207, 506, 505, 212, 211, 510, 509, 216, 215, 514, 513, 220, 219, 518, 517, 192, 191, 522, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 164, 163, 526, 525, 168, 167, 530, 529, 172, 171, 534, 533, 176, 175, 538, 537, 180, 179, 542, 541, 184, 183, 546, 545, 188, 187, 550, 549, 160, 159, 554, 553, 142, 141, 557, 558, 154, 156, 559, 560, 152, 154, 560, 561, 150, 152, 561, 562, 148, 150, 562, 563, 146, 148, 563, 564, 144, 146, 564, 565, 141, 144, 565, 557, 558, 557, 566, 567, 560, 559, 568, 569, 561, 560, 569, 570, 562, 561, 570, 571, 563, 562, 571, 572, 564, 563, 572, 573, 565, 564, 573, 574, 557, 565, 574, 566, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 420, 419, 576, 575, 424, 423, 580, 579, 428, 427, 584, 583, 432, 431, 588, 587, 436, 435, 592, 591, 440, 439, 596, 595, 444, 443, 600, 599, 416, 415, 604, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 388, 387, 608, 607, 392, 391, 612, 611, 396, 395, 616, 615, 400, 399, 620, 619, 404, 403, 624, 623, 408, 407, 628, 627, 412, 411, 632, 631, 384, 383, 636, 635, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 356, 355, 640, 639, 360, 359, 644, 643, 364, 363, 648, 647, 368, 367, 652, 651, 372, 371, 656, 655, 376, 375, 660, 659, 380, 379, 664, 663, 352, 351, 668, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 324, 323, 672, 671, 328, 327, 676, 675, 332, 331, 680, 679, 336, 335, 684, 683, 340, 339, 688, 687, 344, 343, 692, 691, 348, 347, 696, 695, 320, 319, 700, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 292, 291, 704, 703, 296, 295, 708, 707, 300, 299, 712, 711, 304, 303, 716, 715, 308, 307, 720, 719, 312, 311, 724, 723, 316, 315, 728, 727, 288, 287, 732, 731, 446, 445, 735, 736, 448, 447, 737, 738, 450, 449, 739, 740, 452, 451, 741, 742, 454, 453, 743, 744, 456, 455, 745, 746, 458, 457, 747, 748, 460, 459, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 752, 759, 760, 753, 761, 762, 763, 764, 759, 761, 764, 760, 762, 765, 766, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 772, 771, 777, 778, 776, 775, 779, 780, 778, 777, 781, 782, 780, 779, 783, 784, 782, 781, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 822, 845, 846, 823, 828, 827, 847, 848, 832, 831, 849, 850, 836, 835, 851, 852, 840, 839, 853, 854, 842, 855, 856, 843, 855, 751, 754, 856, 854, 853, 818, 817, 852, 851, 814, 813, 850, 849, 810, 809, 848, 847, 806, 805, 846, 845, 755, 758, 857, 858, 768, 767, 859, 860, 822, 821, 860, 861, 845, 822, 755, 845, 861, 862, 862, 863, 756, 755, 763, 766, 864, 865, 764, 763, 865, 866, 760, 764, 866, 867, 753, 760, 867, 868, 754, 753, 868, 869, 856, 754, 869, 870, 843, 856, 870, 871, 844, 843, 871, 872, 788, 787, 873, 874, 874, 873, 784, 783, 804, 803, 875, 876, 800, 799, 877, 878, 796, 795, 879, 880, 792, 791, 881, 882, 774, 773, 858, 857, 786, 841, 844, 787, 873, 787, 844, 872, 784, 873, 872, 883, 782, 784, 883, 884, 780, 782, 884, 885, 778, 780, 885, 886, 776, 778, 886, 887, 772, 776, 887, 888, 773, 772, 888, 889, 858, 773, 889, 859, 768, 858, 859, 821, 769, 768, 821, 824, 890, 891, 892, 893, 894, 895, 896, 897, 891, 898, 899, 892, 900, 901, 902, 903, 898, 900, 903, 899, 901, 904, 905, 902, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 911, 910, 916, 917, 915, 914, 918, 919, 917, 916, 920, 921, 919, 918, 922, 923, 921, 920, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 961, 984, 985, 962, 967, 966, 986, 987, 971, 970, 988, 989, 975, 974, 990, 991, 979, 978, 992, 993, 981, 994, 995, 982, 994, 890, 893, 995, 993, 992, 957, 956, 991, 990, 953, 952, 989, 988, 949, 948, 987, 986, 945, 944, 985, 984, 894, 897, 996, 997, 907, 906, 998, 999, 961, 960, 999, 1000, 984, 961, 894, 984, 1000, 1001, 1001, 1002, 895, 894, 902, 905, 1003, 1004, 903, 902, 1004, 1005, 899, 903, 1005, 1006, 892, 899, 1006, 1007, 893, 892, 1007, 1008, 995, 893, 1008, 1009, 982, 995, 1009, 1010, 983, 982, 1010, 1011, 927, 926, 1012, 1013, 1013, 1012, 923, 922, 943, 942, 1014, 1015, 939, 938, 1016, 1017, 935, 934, 1018, 1019, 931, 930, 1020, 1021, 913, 912, 997, 996, 925, 980, 983, 926, 1012, 926, 983, 1011, 923, 1012, 1011, 1022, 921, 923, 1022, 1023, 919, 921, 1023, 1024, 917, 919, 1024, 1025, 915, 917, 1025, 1026, 911, 915, 1026, 1027, 912, 911, 1027, 1028, 997, 912, 1028, 998, 907, 997, 998, 960, 908, 907, 960, 963, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1030, 1037, 1038, 1031, 1039, 1040, 1041, 1042, 1037, 1039, 1042, 1038, 1040, 1043, 1044, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1050, 1049, 1055, 1056, 1054, 1053, 1057, 1058, 1056, 1055, 1059, 1060, 1058, 1057, 1061, 1062, 1060, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1100, 1123, 1124, 1101, 1106, 1105, 1125, 1126, 1110, 1109, 1127, 1128, 1114, 1113, 1129, 1130, 1118, 1117, 1131, 1132, 1120, 1133, 1134, 1121, 1133, 1029, 1032, 1134, 1132, 1131, 1096, 1095, 1130, 1129, 1092, 1091, 1128, 1127, 1088, 1087, 1126, 1125, 1084, 1083, 1124, 1123, 1033, 1036, 1135, 1136, 1046, 1045, 1137, 1138, 1100, 1099, 1138, 1139, 1123, 1100, 1033, 1123, 1139, 1140, 1140, 1141, 1034, 1033, 1041, 1044, 1142, 1143, 1042, 1041, 1143, 1144, 1038, 1042, 1144, 1145, 1031, 1038, 1145, 1146, 1032, 1031, 1146, 1147, 1134, 1032, 1147, 1148, 1121, 1134, 1148, 1149, 1122, 1121, 1149, 1150, 1066, 1065, 1151, 1152, 1152, 1151, 1062, 1061, 1082, 1081, 1153, 1154, 1078, 1077, 1155, 1156, 1074, 1073, 1157, 1158, 1070, 1069, 1159, 1160, 1052, 1051, 1136, 1135, 1064, 1119, 1122, 1065, 1151, 1065, 1122, 1150, 1062, 1151, 1150, 1161, 1060, 1062, 1161, 1162, 1058, 1060, 1162, 1163, 1056, 1058, 1163, 1164, 1054, 1056, 1164, 1165, 1050, 1054, 1165, 1166, 1051, 1050, 1166, 1167, 1136, 1051, 1167, 1137, 1046, 1136, 1137, 1099, 1047, 1046, 1099, 1102]
                                        float3 xformOp:translate:pivot = (10.021163, 9.262173, 0.00983449)
                                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                    }

                                    def Xform "Wall_e_RIG_v001_black_pin_3l_friction_bridge_004_mesh"
                                    {
                                        float3 xformOp:rotateXYZ = (0, 180, 0)
                                        double3 xformOp:translate = (11.200075112655071, 8.903097531318664, 0.36867367625236475)
                                        float3 xformOp:translate:rotatePivot = (1.1991435, 0.35907802, 0.35883915)
                                        float3 xformOp:translate:rotatePivotTranslate = (-2.398287, 0, -0.7176783)
                                        float3 xformOp:translate:scalePivot = (1.1991435, 0.35907802, 0.35883915)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_arm_extend_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (0, 0, 0),
                                    }
                                    float3 xformOp:scale.timeSamples = {
                                        1: (1, 1, 1),
                                    }
                                    double3 xformOp:translate.timeSamples = {
                                        1: (0, 0, 0),
                                    }
                                    float3 xformOp:translate:pivot = (7.1949444, 9.263097, 0.0034537017)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                    def Xform "Wall_e_RIG_v001_l_arm_extend_grp_"
                                    {
                                        def Xform "Wall_e_RIG_v001_darkGrey_axle_and_bar_connector_perpendicular_003_mesh"
                                        {
                                            float3 xformOp:rotateXYZ = (-180, -0, 0)
                                            double3 xformOp:translate = (12.000083535909653, 10.423097408418982, 0.40345370173454354)
                                            float3 xformOp:translate:rotatePivot = (0.39997885, 0.8178586, 0.39999387)
                                            float3 xformOp:translate:rotatePivotTranslate = (0, -1.6357172, -0.79998773)
                                            float3 xformOp:translate:scalePivot = (0.39997885, 0.8178586, 0.39999387)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                        }

                                        def Mesh "Wall_e_RIG_v001_beige_axle_3_stud_003_mesh" (
                                            prepend apiSchemas = ["MaterialBindingAPI"]
                                        )
                                        {
                                            uniform bool doubleSided = 1
                                            float3[] extent = [(7.1949444, 8.906764, -0.35287923), (13.038354, 9.619431, 0.35978666)]
                                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                            int[] faceVertexIndices = [60, 61, 33, 16, 50, 51, 232, 233, 31, 46, 47, 8, 28, 37, 32, 17, 29, 206, 207, 10, 40, 49, 45, 12, 43, 44, 36, 18, 38, 217, 218, 14, 64, 60, 16, 21, 27, 28, 17, 22, 42, 43, 18, 23, 54, 50, 233, 234, 62, 192, 161, 2, 33, 162, 163, 16, 20, 179, 180, 34, 52, 182, 243, 244, 47, 168, 169, 8, 8, 169, 170, 31, 30, 188, 189, 11, 207, 208, 191, 10, 4, 173, 174, 48, 12, 171, 172, 40, 6, 183, 215, 216, 39, 186, 187, 15, 16, 163, 164, 21, 0, 165, 166, 63, 25, 178, 179, 20, 235, 236, 176, 53, 63, 64, 21, 0, 26, 27, 22, 9, 41, 42, 23, 13, 53, 54, 234, 235, 1, 177, 178, 25, 21, 164, 165, 0, 13, 23, 27, 26, 23, 18, 28, 27, 18, 36, 37, 28, 14, 218, 206, 29, 15, 187, 188, 30, 31, 170, 171, 12, 12, 45, 46, 31, 61, 62, 2, 33, 2, 161, 162, 33, 34, 180, 181, 3, 244, 232, 51, 52, 36, 44, 38, 14, 37, 36, 14, 29, 32, 37, 29, 10, 6, 216, 217, 38, 7, 185, 186, 39, 40, 172, 173, 4, 4, 48, 49, 40, 5, 24, 42, 41, 24, 19, 43, 42, 19, 35, 44, 43, 38, 44, 35, 6, 45, 231, 219, 46, 47, 46, 219, 220, 220, 221, 168, 47, 48, 174, 228, 229, 49, 48, 229, 230, 45, 49, 230, 231, 20, 34, 51, 50, 52, 51, 34, 3, 3, 181, 182, 52, 53, 176, 177, 1, 1, 25, 54, 53, 25, 20, 50, 54, 55, 15, 30, 56, 57, 56, 30, 11, 11, 189, 190, 57, 58, 184, 185, 7, 59, 58, 7, 39, 55, 59, 39, 15, 17, 32, 193, 194, 32, 10, 205, 193, 10, 191, 204, 205, 196, 197, 167, 9, 9, 22, 195, 196, 22, 17, 194, 195, 97, 65, 66, 98, 99, 98, 66, 67, 100, 99, 67, 68, 101, 100, 68, 69, 102, 101, 69, 70, 103, 210, 211, 71, 202, 103, 71, 201, 105, 104, 72, 73, 106, 105, 73, 74, 107, 106, 74, 75, 108, 107, 75, 76, 109, 108, 76, 77, 110, 109, 77, 78, 111, 199, 200, 79, 112, 223, 224, 80, 113, 112, 80, 81, 114, 113, 81, 82, 115, 114, 82, 83, 116, 115, 83, 84, 117, 116, 84, 85, 118, 117, 85, 86, 226, 118, 86, 225, 120, 238, 239, 88, 121, 120, 88, 89, 122, 121, 89, 90, 123, 122, 90, 91, 124, 123, 91, 92, 125, 124, 92, 93, 126, 125, 93, 94, 241, 126, 94, 240, 213, 127, 95, 212, 97, 128, 96, 65, 129, 97, 98, 130, 131, 130, 98, 99, 132, 131, 99, 100, 133, 132, 100, 101, 134, 133, 101, 102, 135, 209, 210, 103, 203, 135, 103, 202, 137, 136, 104, 105, 138, 137, 105, 106, 139, 138, 106, 107, 140, 139, 107, 108, 141, 140, 108, 109, 142, 141, 109, 110, 143, 198, 199, 111, 144, 222, 223, 112, 145, 144, 112, 113, 146, 145, 113, 114, 147, 146, 114, 115, 148, 147, 115, 116, 149, 148, 116, 117, 150, 149, 117, 118, 227, 150, 118, 226, 152, 237, 238, 120, 153, 152, 120, 121, 154, 153, 121, 122, 155, 154, 122, 123, 156, 155, 123, 124, 157, 156, 124, 125, 158, 157, 125, 126, 242, 158, 126, 241, 214, 159, 127, 213, 129, 160, 128, 97, 161, 557, 558, 162, 163, 162, 558, 559, 164, 163, 559, 560, 165, 164, 560, 561, 166, 165, 561, 562, 167, 197, 563, 564, 168, 221, 565, 566, 169, 168, 566, 567, 170, 169, 567, 568, 171, 170, 568, 569, 172, 171, 569, 570, 173, 172, 570, 571, 174, 173, 571, 572, 228, 174, 572, 573, 176, 236, 575, 576, 177, 176, 576, 577, 178, 177, 577, 578, 179, 178, 578, 579, 180, 179, 579, 580, 181, 180, 580, 581, 182, 181, 581, 582, 243, 182, 582, 583, 215, 183, 584, 585, 185, 184, 586, 587, 186, 185, 587, 588, 187, 186, 588, 589, 188, 187, 589, 590, 189, 188, 590, 551, 190, 189, 551, 552, 191, 208, 553, 554, 204, 191, 554, 555, 161, 192, 556, 557, 194, 193, 61, 60, 195, 194, 60, 64, 196, 195, 64, 63, 63, 166, 197, 196, 563, 197, 166, 562, 199, 198, 142, 110, 200, 199, 110, 78, 104, 202, 201, 72, 136, 203, 202, 104, 192, 204, 555, 556, 205, 204, 192, 62, 193, 205, 62, 61, 206, 56, 57, 207, 57, 190, 208, 207, 553, 208, 190, 552, 210, 209, 134, 102, 211, 210, 102, 70, 128, 213, 212, 96, 160, 214, 213, 128, 184, 215, 585, 586, 216, 215, 184, 58, 217, 216, 58, 59, 218, 217, 59, 55, 206, 218, 55, 56, 220, 219, 26, 9, 9, 167, 221, 220, 565, 221, 167, 564, 223, 222, 143, 111, 224, 223, 111, 79, 119, 226, 225, 87, 151, 227, 226, 119, 175, 228, 573, 574, 229, 228, 175, 5, 230, 229, 5, 41, 231, 230, 41, 13, 219, 231, 13, 26, 233, 232, 35, 19, 234, 233, 19, 24, 235, 234, 24, 5, 5, 175, 236, 235, 575, 236, 175, 574, 238, 237, 151, 119, 239, 238, 119, 87, 127, 241, 240, 95, 159, 242, 241, 127, 183, 243, 583, 584, 244, 243, 183, 6, 35, 232, 244, 6, 245, 246, 312, 313, 246, 247, 311, 312, 247, 248, 318, 311, 248, 249, 317, 318, 249, 250, 316, 317, 250, 251, 315, 316, 251, 252, 314, 315, 252, 245, 313, 314, 246, 245, 261, 262, 247, 246, 262, 263, 248, 247, 263, 264, 249, 248, 264, 265, 250, 249, 265, 266, 251, 250, 266, 267, 252, 251, 267, 268, 245, 252, 268, 261, 269, 262, 261, 268, 269, 264, 263, 262, 269, 266, 265, 264, 269, 268, 267, 266, 253, 254, 328, 329, 254, 255, 327, 328, 255, 256, 334, 327, 256, 257, 333, 334, 257, 258, 332, 333, 258, 259, 331, 332, 259, 260, 330, 331, 260, 253, 329, 330, 270, 271, 344, 345, 271, 272, 343, 344, 272, 273, 350, 343, 273, 274, 349, 350, 274, 275, 348, 349, 275, 276, 347, 348, 276, 277, 346, 347, 277, 270, 345, 346, 278, 279, 360, 361, 279, 280, 359, 360, 280, 281, 366, 359, 281, 282, 365, 366, 282, 283, 364, 365, 283, 284, 363, 364, 284, 285, 362, 363, 285, 278, 361, 362, 286, 287, 376, 377, 287, 288, 375, 376, 288, 289, 382, 375, 289, 290, 381, 382, 290, 291, 380, 381, 291, 292, 379, 380, 292, 293, 378, 379, 293, 286, 377, 378, 294, 295, 303, 302, 295, 296, 304, 303, 296, 297, 305, 304, 297, 298, 306, 305, 298, 299, 307, 306, 299, 300, 308, 307, 300, 301, 309, 308, 301, 294, 302, 309, 310, 303, 304, 305, 310, 305, 306, 307, 310, 307, 308, 309, 310, 309, 302, 303, 312, 311, 319, 320, 313, 312, 320, 321, 314, 313, 321, 322, 315, 314, 322, 323, 316, 315, 323, 324, 317, 316, 324, 325, 318, 317, 325, 326, 311, 318, 326, 319, 320, 319, 255, 254, 321, 320, 254, 253, 322, 321, 253, 260, 323, 322, 260, 259, 324, 323, 259, 258, 325, 324, 258, 257, 326, 325, 257, 256, 319, 326, 256, 255, 328, 327, 335, 336, 329, 328, 336, 337, 330, 329, 337, 338, 331, 330, 338, 339, 332, 331, 339, 340, 333, 332, 340, 341, 334, 333, 341, 342, 327, 334, 342, 335, 336, 335, 272, 271, 337, 336, 271, 270, 338, 337, 270, 277, 339, 338, 277, 276, 340, 339, 276, 275, 341, 340, 275, 274, 342, 341, 274, 273, 335, 342, 273, 272, 344, 343, 351, 352, 345, 344, 352, 353, 346, 345, 353, 354, 347, 346, 354, 355, 348, 347, 355, 356, 349, 348, 356, 357, 350, 349, 357, 358, 343, 350, 358, 351, 352, 351, 280, 279, 353, 352, 279, 278, 354, 353, 278, 285, 355, 354, 285, 284, 356, 355, 284, 283, 357, 356, 283, 282, 358, 357, 282, 281, 351, 358, 281, 280, 360, 359, 367, 368, 361, 360, 368, 369, 362, 361, 369, 370, 363, 362, 370, 371, 364, 363, 371, 372, 365, 364, 372, 373, 366, 365, 373, 374, 359, 366, 374, 367, 368, 367, 288, 287, 369, 368, 287, 286, 370, 369, 286, 293, 371, 370, 293, 292, 372, 371, 292, 291, 373, 372, 291, 290, 374, 373, 290, 289, 367, 374, 289, 288, 376, 375, 383, 384, 377, 376, 384, 385, 378, 377, 385, 386, 379, 378, 386, 387, 380, 379, 387, 388, 381, 380, 388, 389, 382, 381, 389, 390, 375, 382, 390, 383, 384, 383, 296, 295, 385, 384, 295, 294, 386, 385, 294, 301, 387, 386, 301, 300, 388, 387, 300, 299, 389, 388, 299, 298, 390, 389, 298, 297, 383, 390, 297, 296, 392, 391, 133, 134, 209, 393, 392, 134, 394, 393, 209, 135, 395, 394, 135, 203, 396, 395, 203, 136, 397, 396, 136, 137, 398, 397, 137, 138, 399, 398, 138, 139, 400, 399, 139, 140, 401, 400, 140, 141, 402, 401, 141, 142, 198, 403, 402, 142, 404, 403, 198, 143, 222, 405, 404, 143, 406, 405, 222, 144, 407, 406, 144, 145, 408, 407, 145, 146, 409, 408, 146, 147, 410, 409, 147, 148, 411, 410, 148, 149, 412, 411, 149, 150, 413, 412, 150, 227, 414, 413, 227, 151, 237, 415, 414, 151, 416, 415, 237, 152, 417, 416, 152, 153, 418, 417, 153, 154, 419, 418, 154, 155, 420, 419, 155, 156, 421, 420, 156, 157, 422, 421, 157, 158, 423, 422, 158, 242, 424, 423, 242, 159, 425, 424, 159, 214, 426, 425, 214, 160, 427, 426, 160, 129, 428, 427, 129, 130, 429, 428, 130, 131, 430, 429, 131, 132, 391, 430, 132, 133, 432, 431, 391, 392, 393, 433, 432, 392, 434, 433, 393, 394, 435, 434, 394, 395, 436, 435, 395, 396, 437, 436, 396, 397, 438, 437, 397, 398, 439, 438, 398, 399, 440, 439, 399, 400, 441, 440, 400, 401, 442, 441, 401, 402, 403, 443, 442, 402, 444, 443, 403, 404, 405, 445, 444, 404, 446, 445, 405, 406, 447, 446, 406, 407, 448, 447, 407, 408, 449, 448, 408, 409, 450, 449, 409, 410, 451, 450, 410, 411, 452, 451, 411, 412, 453, 452, 412, 413, 454, 453, 413, 414, 415, 455, 454, 414, 456, 455, 415, 416, 457, 456, 416, 417, 458, 457, 417, 418, 459, 458, 418, 419, 460, 459, 419, 420, 461, 460, 420, 421, 462, 461, 421, 422, 463, 462, 422, 423, 464, 463, 423, 424, 465, 464, 424, 425, 466, 465, 425, 426, 467, 466, 426, 427, 468, 467, 427, 428, 469, 468, 428, 429, 470, 469, 429, 430, 431, 470, 430, 391, 472, 471, 431, 432, 433, 473, 472, 432, 474, 473, 433, 434, 475, 474, 434, 435, 476, 475, 435, 436, 477, 476, 436, 437, 478, 477, 437, 438, 479, 478, 438, 439, 480, 479, 439, 440, 481, 480, 440, 441, 482, 481, 441, 442, 443, 483, 482, 442, 484, 483, 443, 444, 445, 485, 484, 444, 486, 485, 445, 446, 487, 486, 446, 447, 488, 487, 447, 448, 489, 488, 448, 449, 490, 489, 449, 450, 491, 490, 450, 451, 492, 491, 451, 452, 493, 492, 452, 453, 494, 493, 453, 454, 455, 495, 494, 454, 496, 495, 455, 456, 497, 496, 456, 457, 498, 497, 457, 458, 499, 498, 458, 459, 500, 499, 459, 460, 501, 500, 460, 461, 502, 501, 461, 462, 503, 502, 462, 463, 504, 503, 463, 464, 505, 504, 464, 465, 506, 505, 465, 466, 507, 506, 466, 467, 508, 507, 467, 468, 509, 508, 468, 469, 510, 509, 469, 470, 471, 510, 470, 431, 512, 511, 471, 472, 473, 513, 512, 472, 514, 513, 473, 474, 515, 514, 474, 475, 516, 515, 475, 476, 517, 516, 476, 477, 518, 517, 477, 478, 519, 518, 478, 479, 520, 519, 479, 480, 521, 520, 480, 481, 522, 521, 481, 482, 483, 523, 522, 482, 524, 523, 483, 484, 485, 525, 524, 484, 526, 525, 485, 486, 527, 526, 486, 487, 528, 527, 487, 488, 529, 528, 488, 489, 530, 529, 489, 490, 531, 530, 490, 491, 532, 531, 491, 492, 533, 532, 492, 493, 534, 533, 493, 494, 495, 535, 534, 494, 536, 535, 495, 496, 537, 536, 496, 497, 538, 537, 497, 498, 539, 538, 498, 499, 540, 539, 499, 500, 541, 540, 500, 501, 542, 541, 501, 502, 543, 542, 502, 503, 544, 543, 503, 504, 545, 544, 504, 505, 546, 545, 505, 506, 547, 546, 506, 507, 548, 547, 507, 508, 549, 548, 508, 509, 550, 549, 509, 510, 511, 550, 510, 471, 552, 551, 511, 512, 513, 553, 552, 512, 554, 553, 513, 514, 555, 554, 514, 515, 556, 555, 515, 516, 557, 556, 516, 517, 558, 557, 517, 518, 559, 558, 518, 519, 560, 559, 519, 520, 561, 560, 520, 521, 562, 561, 521, 522, 523, 563, 562, 522, 564, 563, 523, 524, 525, 565, 564, 524, 566, 565, 525, 526, 567, 566, 526, 527, 568, 567, 527, 528, 569, 568, 528, 529, 570, 569, 529, 530, 571, 570, 530, 531, 572, 571, 531, 532, 573, 572, 532, 533, 574, 573, 533, 534, 535, 575, 574, 534, 576, 575, 535, 536, 577, 576, 536, 537, 578, 577, 537, 538, 579, 578, 538, 539, 580, 579, 539, 540, 581, 580, 540, 541, 582, 581, 541, 542, 583, 582, 542, 543, 584, 583, 543, 544, 585, 584, 544, 545, 586, 585, 545, 546, 587, 586, 546, 547, 588, 587, 547, 548, 589, 588, 548, 549, 590, 589, 549, 550, 551, 590, 550, 511]
                                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_beige_sg>
                                            point3f[] points = [(7.1949444, 9.487616, -0.07664147), (7.1949444, 9.038579, -0.07664147), (7.1949444, 9.487616, 0.08354893), (7.1949444, 9.038579, 0.08354893), (7.1949444, 9.1830015, -0.2210646), (7.1949444, 9.1830015, -0.07664147), (7.1949444, 9.1830015, 0.08354893), (7.1949444, 9.1830015, 0.227972), (7.1949444, 9.343192, -0.2210646), (7.1949444, 9.343192, -0.07664147), (7.1949444, 9.343192, 0.08354893), (7.1949444, 9.343192, 0.227972), (7.1949444, 9.263097, -0.23683189), (7.1949444, 9.263097, -0.07664147), (7.1949444, 9.263097, 0.08354893), (7.1949444, 9.263097, 0.24373928), (7.1949444, 9.503383, 0.0034537017), (7.1949444, 9.343192, 0.0034537017), (7.1949444, 9.263097, 0.0034537017), (7.1949444, 9.1830015, 0.0034537017), (7.1949444, 9.022812, 0.0034537017), (7.1949444, 9.489969, -0.064685136), (7.1949444, 9.343192, -0.064685136), (7.1949444, 9.263097, -0.064685136), (7.1949444, 9.1830015, -0.064685136), (7.1949444, 9.036225, -0.064685136), (7.1949444, 9.330702, -0.07664147), (7.1949444, 9.330702, -0.064685136), (7.1949444, 9.330702, 0.0034537017), (7.1949444, 9.330702, 0.08354893), (7.1949444, 9.330702, 0.23043081), (7.1949444, 9.330702, -0.22352341), (7.1949444, 9.343192, 0.071044296), (7.1949444, 9.490077, 0.071044296), (7.1949444, 9.036118, 0.071044296), (7.1949444, 9.1830015, 0.071044296), (7.1949444, 9.263097, 0.071044296), (7.1949444, 9.330702, 0.071044296), (7.1949444, 9.195452, 0.08354893), (7.1949444, 9.195452, 0.23042277), (7.1949444, 9.195452, -0.22351536), (7.1949444, 9.195452, -0.07664147), (7.1949444, 9.195452, -0.064685136), (7.1949444, 9.195452, 0.0034537017), (7.1949444, 9.195452, 0.071044296), (7.1949444, 9.263097, -0.22303809), (7.1949444, 9.330702, -0.21087559), (7.1949444, 9.343192, -0.20862849), (7.1949444, 9.1830015, -0.20862849), (7.1949444, 9.195452, -0.21086822), (7.1949444, 9.038778, 0.0034537017), (7.1949444, 9.050757, 0.071044296), (7.1949444, 9.052974, 0.08354893), (7.1949444, 9.052974, -0.07664147), (7.1949444, 9.050855, -0.064685136), (7.1949444, 9.263097, 0.22986421), (7.1949444, 9.330702, 0.2177085), (7.1949444, 9.343192, 0.2154626), (7.1949444, 9.1830015, 0.2154626), (7.1949444, 9.195452, 0.2177011), (7.1949444, 9.490392, 0.0034537017), (7.1949444, 9.478165, 0.071044296), (7.1949444, 9.475903, 0.08354893), (7.1949444, 9.475903, -0.07664147), (7.1949444, 9.4780655, -0.064685136), (12.799819, 9.1830015, 0.227972), (12.799819, 9.195452, 0.23042277), (12.799819, 9.263097, 0.24373928), (12.799819, 9.330702, 0.23043081), (12.799819, 9.343192, 0.227972), (12.799819, 9.343192, 0.2154626), (12.799819, 9.343192, 0.08354893), (12.799819, 9.475903, 0.08354893), (12.799819, 9.487616, 0.08354893), (12.799819, 9.490077, 0.071044296), (12.799819, 9.503383, 0.0034537017), (12.799819, 9.489969, -0.064685136), (12.799819, 9.487616, -0.07664147), (12.799819, 9.475903, -0.07664147), (12.799819, 9.343192, -0.07664147), (12.799819, 9.343192, -0.20862849), (12.799819, 9.343192, -0.2210646), (12.799819, 9.330702, -0.22352341), (12.799819, 9.263097, -0.23683189), (12.799819, 9.195452, -0.22351536), (12.799819, 9.1830015, -0.2210646), (12.799819, 9.1830015, -0.20862849), (12.799819, 9.1830015, -0.07664147), (12.799819, 9.052974, -0.07664147), (12.799819, 9.038579, -0.07664147), (12.799819, 9.036225, -0.064685136), (12.799819, 9.022812, 0.0034537017), (12.799819, 9.036118, 0.071044296), (12.799819, 9.038579, 0.08354893), (12.799819, 9.052974, 0.08354893), (12.799819, 9.1830015, 0.08354893), (12.799819, 9.1830015, 0.2154626), (12.077902, 9.1830015, 0.22797194), (12.077902, 9.195452, 0.23042277), (12.077902, 9.263097, 0.24373928), (12.077902, 9.330702, 0.23043081), (12.077902, 9.343192, 0.22797194), (12.077902, 9.343192, 0.2154626), (12.077902, 9.343192, 0.08354893), (12.077902, 9.475903, 0.08354893), (12.077902, 9.487616, 0.08354893), (12.077902, 9.490077, 0.071044296), (12.077902, 9.503383, 0.0034537017), (12.077902, 9.489969, -0.064685136), (12.077902, 9.487616, -0.07664147), (12.077902, 9.475903, -0.07664147), (12.077902, 9.343192, -0.07664147), (12.077902, 9.343192, -0.20862849), (12.077902, 9.343192, -0.2210646), (12.077902, 9.330702, -0.22352341), (12.077902, 9.263097, -0.23683189), (12.077902, 9.195452, -0.22351536), (12.077902, 9.1830015, -0.2210646), (12.077902, 9.1830015, -0.20862849), (12.077902, 9.1830015, -0.07664147), (12.077902, 9.052974, -0.07664147), (12.077902, 9.038579, -0.07664147), (12.077902, 9.036225, -0.064685136), (12.077902, 9.022812, 0.0034537017), (12.077902, 9.036118, 0.071044296), (12.077902, 9.038579, 0.08354893), (12.077902, 9.052974, 0.08354893), (12.077902, 9.1830015, 0.08354893), (12.077902, 9.1830015, 0.2154626), (11.277903, 9.1830015, 0.22797194), (11.277903, 9.195452, 0.23042277), (11.277903, 9.263097, 0.24373928), (11.277903, 9.330702, 0.23043081), (11.277903, 9.343192, 0.22797194), (11.277903, 9.343192, 0.2154626), (11.277903, 9.343192, 0.08354893), (11.277903, 9.475903, 0.08354893), (11.277903, 9.487616, 0.08354893), (11.277903, 9.490077, 0.071044296), (11.277903, 9.503383, 0.0034537017), (11.277903, 9.489969, -0.064685136), (11.277903, 9.487616, -0.07664147), (11.277903, 9.475903, -0.07664147), (11.277903, 9.343192, -0.07664147), (11.277903, 9.343192, -0.20862849), (11.277903, 9.343192, -0.2210646), (11.277903, 9.330702, -0.22352341), (11.277903, 9.263097, -0.23683189), (11.277903, 9.195452, -0.22351536), (11.277903, 9.1830015, -0.2210646), (11.277903, 9.1830015, -0.20862849), (11.277903, 9.1830015, -0.07664147), (11.277903, 9.052974, -0.07664147), (11.277903, 9.038579, -0.07664147), (11.277903, 9.036225, -0.064685136), (11.277903, 9.022812, 0.0034537017), (11.277903, 9.036118, 0.071044296), (11.277903, 9.038579, 0.08354893), (11.277903, 9.052974, 0.08354893), (11.277903, 9.1830015, 0.08354893), (11.277903, 9.1830015, 0.2154626), (7.2052155, 9.487616, 0.08354893), (7.2052155, 9.490077, 0.071044296), (7.2052155, 9.503383, 0.0034537017), (7.2052155, 9.489969, -0.064685136), (7.2052155, 9.487616, -0.07664147), (7.2052155, 9.475903, -0.07664147), (7.2052155, 9.343192, -0.07664147), (7.2052155, 9.343192, -0.20862849), (7.2052155, 9.343192, -0.2210646), (7.2052155, 9.330702, -0.22352341), (7.2052155, 9.263097, -0.23683189), (7.2052155, 9.195452, -0.22351536), (7.2052155, 9.1830015, -0.2210646), (7.2052155, 9.1830015, -0.20862849), (7.2052155, 9.1830015, -0.07664147), (7.2052155, 9.052974, -0.07664147), (7.2052155, 9.038579, -0.07664147), (7.2052155, 9.036225, -0.064685136), (7.2052155, 9.022812, 0.0034537017), (7.2052155, 9.036118, 0.071044296), (7.2052155, 9.038579, 0.08354893), (7.2052155, 9.052974, 0.08354893), (7.2052155, 9.1830015, 0.08354893), (7.2052155, 9.1830015, 0.2154626), (7.2052155, 9.1830015, 0.227972), (7.2052155, 9.195452, 0.23042277), (7.2052155, 9.263097, 0.24373928), (7.2052155, 9.330702, 0.23043081), (7.2052155, 9.343192, 0.227972), (7.2052155, 9.343192, 0.2154626), (7.2052155, 9.343192, 0.08354893), (7.2052155, 9.475903, 0.08354893), (7.1949444, 9.355084, 0.071044296), (7.1949444, 9.356161, 0.0034537017), (7.1949444, 9.355076, -0.064685136), (7.1949444, 9.354885, -0.07664147), (7.2052155, 9.354885, -0.07664147), (11.277903, 9.354885, -0.07664147), (12.077902, 9.354885, -0.07664147), (12.799819, 9.354885, -0.07664147), (12.799819, 9.354885, 0.08354893), (12.077902, 9.354885, 0.08354899), (11.277903, 9.354885, 0.08354899), (7.2052155, 9.354885, 0.08354893), (7.1949444, 9.354885, 0.08354893), (7.1949444, 9.330702, 0.09493843), (7.1949444, 9.343192, 0.09474781), (7.2052155, 9.343192, 0.09474781), (11.277903, 9.343192, 0.09474781), (12.077902, 9.343192, 0.09474781), (12.799819, 9.343192, 0.09474781), (12.799819, 9.1830015, 0.09474781), (12.077902, 9.1830015, 0.09474781), (11.277903, 9.1830015, 0.09474781), (7.2052155, 9.1830015, 0.09474781), (7.1949444, 9.1830015, 0.09474781), (7.1949444, 9.195452, 0.09493783), (7.1949444, 9.263097, 0.09597042), (7.1949444, 9.330702, -0.087607786), (7.1949444, 9.343192, -0.087424204), (7.2052155, 9.343192, -0.087424204), (11.277903, 9.343192, -0.087424204), (12.077902, 9.343192, -0.087424204), (12.799819, 9.343192, -0.087424204), (12.799819, 9.1830015, -0.087424204), (12.077902, 9.1830015, -0.087424204), (11.277903, 9.1830015, -0.087424204), (7.2052155, 9.1830015, -0.087424204), (7.1949444, 9.1830015, -0.087424204), (7.1949444, 9.195452, -0.087607175), (7.1949444, 9.263097, -0.088601395), (7.1949444, 9.171177, 0.071044296), (7.1949444, 9.170106, 0.0034537017), (7.1949444, 9.1711855, -0.064685136), (7.1949444, 9.171375, -0.07664147), (7.2052155, 9.171375, -0.07664147), (11.277903, 9.171375, -0.07664147), (12.077902, 9.171375, -0.07664147), (12.799819, 9.171375, -0.07664147), (12.799819, 9.171375, 0.08354893), (12.077902, 9.171375, 0.08354893), (11.277903, 9.171375, 0.08354893), (7.2052155, 9.171375, 0.08354893), (7.1949444, 9.171375, 0.08354893), (12.799819, 9.011131, -0.24851173), (12.799819, 9.263097, -0.35287923), (12.799819, 9.515062, -0.24851173), (12.799819, 9.619431, 0.0034537017), (12.799819, 9.515062, 0.25541916), (12.799819, 9.263097, 0.35978666), (12.799819, 9.011131, 0.25541916), (12.799819, 8.906764, 0.0034537017), (12.877903, 9.011131, -0.24851173), (12.877903, 9.263097, -0.35287923), (12.877903, 9.515062, -0.24851173), (12.877903, 9.619431, 0.0034537017), (12.877903, 9.515062, 0.25541916), (12.877903, 9.263097, 0.35978666), (12.877903, 9.011131, 0.25541916), (12.877903, 8.906764, 0.0034537017), (12.799819, 9.0228195, -0.23682404), (12.799819, 9.263097, -0.33635032), (12.799819, 9.503375, -0.23682404), (12.799819, 9.602901, 0.0034537017), (12.799819, 9.503375, 0.24373147), (12.799819, 9.263097, 0.34325776), (12.799819, 9.0228195, 0.24373147), (12.799819, 8.923293, 0.0034537017), (12.799819, 9.263097, 0.0034537017), (12.877903, 9.075162, -0.18448123), (12.877903, 9.263097, -0.26232642), (12.877903, 9.451032, -0.18448123), (12.877903, 9.528877, 0.0034537017), (12.877903, 9.451032, 0.19138864), (12.877903, 9.263097, 0.26923385), (12.877903, 9.075162, 0.19138864), (12.877903, 8.997317, 0.0034537017), (13.038354, 9.075162, -0.18448123), (13.038354, 9.263097, -0.26232642), (13.038354, 9.451032, -0.18448123), (13.038354, 9.528877, 0.0034537017), (13.038354, 9.451032, 0.19138864), (13.038354, 9.263097, 0.26923385), (13.038354, 9.075162, 0.19138864), (13.038354, 8.997317, 0.0034537017), (13.038354, 9.1379, -0.121742725), (13.038354, 9.263097, -0.17360078), (13.038354, 9.388293, -0.121742725), (13.038354, 9.440151, 0.0034537017), (13.038354, 9.388293, 0.12865013), (13.038354, 9.263097, 0.18050823), (13.038354, 9.1379, 0.12865013), (13.038354, 9.086042, 0.0034537017), (12.877903, 9.1379, -0.121742725), (12.877903, 9.263097, -0.17360078), (12.877903, 9.388293, -0.121742725), (12.877903, 9.440151, 0.0034537017), (12.877903, 9.388293, 0.12865013), (12.877903, 9.263097, 0.18050823), (12.877903, 9.1379, 0.12865013), (12.877903, 9.086042, 0.0034537017), (12.877903, 9.14423, -0.115413845), (12.877903, 9.263097, -0.16465041), (12.877903, 9.381965, -0.115413845), (12.877903, 9.431201, 0.0034537017), (12.877903, 9.381965, 0.12232128), (12.877903, 9.263097, 0.17155787), (12.877903, 9.14423, 0.12232128), (12.877903, 9.094993, 0.0034537017), (12.877903, 9.263097, 0.0034537315), (12.809579, 9.515062, -0.24851173), (12.809579, 9.263097, -0.35287923), (12.809579, 9.011131, -0.24851173), (12.809579, 8.906764, 0.0034537017), (12.809579, 9.011131, 0.25541916), (12.809579, 9.263097, 0.35978666), (12.809579, 9.515062, 0.25541916), (12.809579, 9.619431, 0.0034537017), (12.866899, 9.515062, -0.24851173), (12.866899, 9.263097, -0.35287923), (12.866899, 9.011131, -0.24851173), (12.866899, 8.906764, 0.0034537017), (12.866899, 9.011131, 0.25541916), (12.866899, 9.263097, 0.35978666), (12.866899, 9.515062, 0.25541916), (12.866899, 9.619431, 0.0034537017), (12.877903, 9.50629, -0.23974004), (12.877903, 9.263097, -0.3404742), (12.877903, 9.019903, -0.23974004), (12.877903, 8.919169, 0.0034537017), (12.877903, 9.019903, 0.2466475), (12.877903, 9.263097, 0.34738162), (12.877903, 9.50629, 0.2466475), (12.877903, 9.607025, 0.0034537017), (12.877903, 9.457529, -0.19097832), (12.877903, 9.263097, -0.2715147), (12.877903, 9.0686655, -0.19097832), (12.877903, 8.988129, 0.0034537017), (12.877903, 9.0686655, 0.19788572), (12.877903, 9.263097, 0.27842215), (12.877903, 9.457529, 0.19788572), (12.877903, 9.538066, 0.0034537017), (12.887392, 9.451032, -0.18448123), (12.887392, 9.263097, -0.26232642), (12.887392, 9.075162, -0.18448123), (12.887392, 8.997317, 0.0034537017), (12.887392, 9.075162, 0.19138864), (12.887392, 9.263097, 0.26923385), (12.887392, 9.451032, 0.19138864), (12.887392, 9.528877, 0.0034537017), (13.02832, 9.451032, -0.18448123), (13.02832, 9.263097, -0.26232642), (13.02832, 9.075162, -0.18448123), (13.02832, 8.997317, 0.0034537017), (13.02832, 9.075162, 0.19138864), (13.02832, 9.263097, 0.26923385), (13.02832, 9.451032, 0.19138864), (13.02832, 9.528877, 0.0034537017), (13.038354, 9.445253, -0.17870237), (13.038354, 9.263097, -0.25415388), (13.038354, 9.080941, -0.17870237), (13.038354, 9.005489, 0.0034537017), (13.038354, 9.080941, 0.18560979), (13.038354, 9.263097, 0.26106134), (13.038354, 9.445253, 0.18560979), (13.038354, 9.520704, 0.0034537017), (13.038354, 9.3952265, -0.12867594), (13.038354, 9.263097, -0.18340583), (13.038354, 9.130967, -0.12867594), (13.038354, 9.076238, 0.0034537017), (13.038354, 9.130967, 0.13558334), (13.038354, 9.263097, 0.19031325), (13.038354, 9.3952265, 0.13558334), (13.038354, 9.449957, 0.0034537017), (13.027636, 9.388293, -0.121742725), (13.027636, 9.263097, -0.1736008), (13.027636, 9.1379, -0.121742725), (13.027636, 9.086042, 0.0034537017), (13.027636, 9.1379, 0.12865013), (13.027636, 9.263097, 0.18050823), (13.027636, 9.388293, 0.12865013), (13.027636, 9.440151, 0.0034537017), (12.889145, 9.388293, -0.121742725), (12.889145, 9.263097, -0.17360078), (12.889145, 9.1379, -0.121742725), (12.889145, 9.086042, 0.0034537017), (12.889145, 9.1379, 0.12865013), (12.889145, 9.263097, 0.18050823), (12.889145, 9.388293, 0.12865013), (12.889145, 9.440151, 0.0034537017), (10.599121, 9.343192, 0.22797194), (10.599121, 9.343192, 0.2154626), (10.599121, 9.343192, 0.09474781), (10.599121, 9.343192, 0.08354893), (10.599121, 9.354885, 0.08354899), (10.599121, 9.475903, 0.08354893), (10.599121, 9.487616, 0.08354893), (10.599121, 9.490077, 0.071044296), (10.599121, 9.503383, 0.0034537017), (10.599121, 9.489969, -0.064685136), (10.599121, 9.487616, -0.07664147), (10.599121, 9.475903, -0.07664147), (10.599121, 9.354885, -0.07664147), (10.599121, 9.343192, -0.07664147), (10.599121, 9.343192, -0.08742419), (10.599121, 9.343192, -0.20862849), (10.599121, 9.343192, -0.2210646), (10.599121, 9.330702, -0.22352341), (10.599121, 9.263097, -0.23683189), (10.599121, 9.195452, -0.22351536), (10.599121, 9.1830015, -0.2210646), (10.599121, 9.1830015, -0.20862849), (10.599121, 9.1830015, -0.08742419), (10.599121, 9.1830015, -0.07664147), (10.599121, 9.171375, -0.07664147), (10.599121, 9.052974, -0.07664147), (10.599121, 9.038579, -0.07664147), (10.599121, 9.036225, -0.064685136), (10.599121, 9.022812, 0.0034537017), (10.599121, 9.036118, 0.071044296), (10.599121, 9.038579, 0.08354893), (10.599121, 9.052974, 0.08354893), (10.599121, 9.171375, 0.08354893), (10.599121, 9.1830015, 0.08354893), (10.599121, 9.1830015, 0.09474781), (10.599121, 9.1830015, 0.2154626), (10.599121, 9.1830015, 0.22797194), (10.599121, 9.195452, 0.23042277), (10.599121, 9.263097, 0.24373928), (10.599121, 9.330702, 0.23043081), (9.92034, 9.343192, 0.22797194), (9.92034, 9.343192, 0.2154626), (9.92034, 9.343192, 0.09474781), (9.92034, 9.343192, 0.08354893), (9.92034, 9.354885, 0.08354899), (9.92034, 9.475903, 0.08354893), (9.92034, 9.487616, 0.08354893), (9.92034, 9.490077, 0.071044296), (9.92034, 9.503383, 0.0034537017), (9.92034, 9.489969, -0.064685136), (9.92034, 9.487616, -0.07664147), (9.92034, 9.475903, -0.07664147), (9.92034, 9.354885, -0.07664147), (9.92034, 9.343192, -0.07664147), (9.92034, 9.343192, -0.08742419), (9.92034, 9.343192, -0.20862849), (9.92034, 9.343192, -0.2210646), (9.920341, 9.330702, -0.22352341), (9.92034, 9.263097, -0.23683189), (9.92034, 9.195452, -0.22351536), (9.92034, 9.1830015, -0.2210646), (9.92034, 9.1830015, -0.20862849), (9.92034, 9.1830015, -0.08742419), (9.92034, 9.1830015, -0.07664147), (9.92034, 9.171375, -0.07664147), (9.92034, 9.052974, -0.07664147), (9.92034, 9.038579, -0.07664147), (9.92034, 9.036225, -0.064685136), (9.92034, 9.022812, 0.0034537017), (9.92034, 9.036118, 0.071044296), (9.92034, 9.038579, 0.08354893), (9.92034, 9.052974, 0.08354893), (9.92034, 9.171375, 0.08354893), (9.92034, 9.1830015, 0.08354893), (9.92034, 9.1830015, 0.09474781), (9.92034, 9.1830015, 0.2154626), (9.92034, 9.1830015, 0.22797194), (9.92034, 9.195452, 0.23042277), (9.92034, 9.263097, 0.24373928), (9.92034, 9.330702, 0.23043081), (9.241559, 9.343192, 0.22797194), (9.241559, 9.343192, 0.2154626), (9.241559, 9.343192, 0.09474781), (9.241559, 9.343192, 0.08354893), (9.241559, 9.354885, 0.08354899), (9.241559, 9.475903, 0.08354893), (9.241559, 9.487616, 0.08354893), (9.241559, 9.490077, 0.071044296), (9.241559, 9.503383, 0.0034537017), (9.241559, 9.489969, -0.064685136), (9.241559, 9.487616, -0.07664147), (9.241559, 9.475903, -0.07664147), (9.241559, 9.354885, -0.07664147), (9.241559, 9.343192, -0.07664147), (9.241559, 9.343192, -0.08742419), (9.241559, 9.343192, -0.20862849), (9.241559, 9.343192, -0.2210646), (9.241559, 9.330702, -0.22352341), (9.241559, 9.263097, -0.23683189), (9.241559, 9.195452, -0.22351536), (9.241559, 9.1830015, -0.2210646), (9.241559, 9.1830015, -0.20862849), (9.241559, 9.1830015, -0.08742419), (9.241559, 9.1830015, -0.07664147), (9.241559, 9.171375, -0.07664147), (9.241559, 9.052974, -0.07664147), (9.241559, 9.038579, -0.07664147), (9.241559, 9.036225, -0.064685136), (9.241559, 9.022812, 0.0034537017), (9.241559, 9.036118, 0.071044296), (9.241559, 9.038579, 0.08354893), (9.241559, 9.052974, 0.08354893), (9.241559, 9.171375, 0.08354893), (9.241559, 9.1830015, 0.08354893), (9.241559, 9.1830015, 0.09474781), (9.241559, 9.1830015, 0.2154626), (9.241559, 9.1830015, 0.22797194), (9.241559, 9.195452, 0.23042277), (9.241559, 9.263097, 0.24373928), (9.241559, 9.330702, 0.23043081), (8.5627775, 9.343192, 0.22797194), (8.5627775, 9.343192, 0.2154626), (8.5627775, 9.343192, 0.09474781), (8.5627775, 9.343192, 0.08354893), (8.5627775, 9.354885, 0.08354896), (8.5627775, 9.475903, 0.08354893), (8.5627775, 9.487616, 0.08354893), (8.5627775, 9.490077, 0.071044296), (8.5627775, 9.503383, 0.0034537017), (8.5627775, 9.489969, -0.064685136), (8.5627775, 9.487616, -0.07664147), (8.5627775, 9.475903, -0.07664147), (8.5627775, 9.354885, -0.07664147), (8.5627775, 9.343192, -0.07664147), (8.5627775, 9.343192, -0.08742419), (8.5627775, 9.343192, -0.20862849), (8.5627775, 9.343192, -0.2210646), (8.5627775, 9.330702, -0.22352341), (8.5627775, 9.263097, -0.23683189), (8.5627775, 9.195452, -0.22351536), (8.5627775, 9.1830015, -0.2210646), (8.5627775, 9.1830015, -0.20862849), (8.5627775, 9.1830015, -0.08742419), (8.5627775, 9.1830015, -0.07664147), (8.5627775, 9.171375, -0.07664147), (8.5627775, 9.052974, -0.07664147), (8.5627775, 9.038579, -0.07664147), (8.5627775, 9.036225, -0.064685136), (8.5627775, 9.022812, 0.0034537017), (8.5627775, 9.036118, 0.071044296), (8.5627775, 9.038579, 0.08354893), (8.5627775, 9.052974, 0.08354893), (8.5627775, 9.171375, 0.08354893), (8.5627775, 9.1830015, 0.08354893), (8.5627775, 9.1830015, 0.09474781), (8.5627775, 9.1830015, 0.2154626), (8.5627775, 9.1830015, 0.22797194), (8.5627775, 9.195452, 0.23042277), (8.5627775, 9.263097, 0.24373928), (8.5627775, 9.330702, 0.23043081), (7.8839965, 9.343192, 0.22797194), (7.8839965, 9.343192, 0.2154626), (7.8839965, 9.343192, 0.09474781), (7.8839965, 9.343192, 0.08354893), (7.8839965, 9.354885, 0.08354893), (7.8839965, 9.475903, 0.08354893), (7.8839965, 9.487616, 0.08354893), (7.8839965, 9.490077, 0.071044296), (7.8839965, 9.503383, 0.0034537017), (7.8839965, 9.489969, -0.064685136), (7.8839965, 9.487616, -0.07664147), (7.8839965, 9.475903, -0.07664147), (7.8839965, 9.354885, -0.07664147), (7.8839965, 9.343192, -0.07664147), (7.8839965, 9.343192, -0.08742419), (7.8839965, 9.343192, -0.20862849), (7.8839965, 9.343192, -0.2210646), (7.8839965, 9.330702, -0.22352341), (7.8839965, 9.263097, -0.23683189), (7.8839965, 9.195452, -0.22351536), (7.8839965, 9.1830015, -0.2210646), (7.8839965, 9.1830015, -0.20862849), (7.8839965, 9.1830015, -0.08742419), (7.8839965, 9.1830015, -0.07664147), (7.8839965, 9.171375, -0.07664147), (7.8839965, 9.052974, -0.07664147), (7.8839965, 9.038579, -0.07664147), (7.8839965, 9.036225, -0.064685136), (7.8839965, 9.022812, 0.0034537017), (7.8839965, 9.036118, 0.071044296), (7.8839965, 9.038579, 0.08354893), (7.8839965, 9.052974, 0.08354893), (7.8839965, 9.171375, 0.08354893), (7.8839965, 9.1830015, 0.08354893), (7.8839965, 9.1830015, 0.09474781), (7.8839965, 9.1830015, 0.2154626), (7.8839965, 9.1830015, 0.22797194), (7.8839965, 9.195452, 0.23042277), (7.8839965, 9.263097, 0.24373928), (7.8839965, 9.330702, 0.23043081)]
                                            float3 xformOp:translate:pivot = (11.758128, 9.263098, 0.0034537064)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:translate:pivot = (12.400063, 10.068857, -0.8769232)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                        def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_001_grp_"
                                        {
                                            float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_clip_l_thick_003_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (13.600080490112306, 9.822, -0.8771381535642326)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_006_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, 0)
                                                double3 xformOp:translate = (12.000089645385742, 9.663102945804596, -0.64658062822977)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_020_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (14.400089263916016, 10.143098971366882, -1.6771450200193105)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_016_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (13.600080490112305, 9.82309897851944, -1.6771488347165762)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_005_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (13.600095748901365, 9.82309897851944, -0.0771503605954818)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_round_rounded_bottom_004_mesh"
                                            {
                                                double3 xformOp:translate = (12.800092247111804, 9.503098985671997, -1.6771412428162407)
                                                float3 xformOp:translate:pivot = (0.8, 0.23805894, 0.8)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_002_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (1.7763568394002505e-15, 0, 0),
                                            }
                                            float3 xformOp:translate:pivot = (14.800086, 10.0631075, -0.8769085)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_004_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, 90)
                                                double3 xformOp:translate = (16.800092697143555, 9.823098695397382, -0.0753277684651348)
                                                float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.3203793, -0.5600502, -1.8804294)
                                                float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_002_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_002_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_001_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_l_upper_finger_001_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, 0, -1.1102230246251565e-16),
                                        }
                                        float3 xformOp:translate:pivot = (12.400063, 10.068857, 0.8867613)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                        def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_001_grp_"
                                        {
                                            float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_007_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (90, -0, 180)
                                                double3 xformOp:translate = (12.800077438354492, 9.663102945804596, 0.6501676161714395)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_round_rounded_bottom_003_mesh"
                                            {
                                                double3 xformOp:translate = (12.800092697143555, 9.503098985671997, 0.08699242526316875)
                                                float3 xformOp:translate:pivot = (0.8, 0.23805894, 0.8)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_019_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (12.800092697143555, 10.143098971366882, 1.686983128894361)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_004_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (13.600095748901365, 9.82309897851944, 1.6869831288943613)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_019_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (12.800092697143555, 9.82309897851944, 1.6869907582888923)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_clip_l_thick_002_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (13.600080490112306, 9.822197800895472, 0.08699228416779853)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_002_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:translate:pivot = (14.800087, 10.0631075, 0.88722503)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_003_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, 90)
                                                double3 xformOp:translate = (16.800092697143555, 9.823098695397379, 1.6887981151141194)
                                                float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.3203793, -0.5600502, -1.8804294)
                                                float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_002_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_002_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_001_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_r_upper_finger_001_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_l_arm_lower_finger_base_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, -1.4033418e-14, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                                        def Xform "Wall_e_RIG_v001_l_arm_lower_finger_base_grp_"
                                        {
                                            def Xform "Wall_e_RIG_v001_lightGray_axle_connector_double_flexible_thin_002_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (90, -0, -90)
                                                double3 xformOp:translate = (12.000084310770035, 9.623106768846512, -0.3565555274486541)
                                                float3 xformOp:translate:rotatePivot = (0.7603195, 0.36073422, 0.40000007)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.1603196, -1.1210537, -0.039265826)
                                                float3 xformOp:translate:scalePivot = (0.7603195, 0.36073422, 0.40000007)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_axle_connector_double_flexible_thin_003_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (90, -0, -90)
                                                double3 xformOp:translate = (11.6, 9.623106768846512, -0.3565555274486541)
                                                float3 xformOp:translate:rotatePivot = (0.7603195, 0.36073425, 0.40000007)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.1603196, -1.1210537, -0.039265826)
                                                float3 xformOp:translate:scalePivot = (0.7603195, 0.36073425, 0.40000007)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_bar_1l_clip_mecha_002_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (0, -0, -90)
                                                double3 xformOp:translate = (11.163398224234696, 8.903095447677195, -0.15654630064964292)
                                                float3 xformOp:translate:rotatePivot = (0.43438256, 0.7635159, 0.160202)
                                                float3 xformOp:translate:rotatePivotTranslate = (0.32913333, -1.1978984, 0)
                                                float3 xformOp:translate:scalePivot = (0.43438256, 0.7635159, 0.160202)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_lower_finger_001_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (0, 0, -2.710505431213761e-20),
                                            }
                                            float3 xformOp:translate:pivot = (12.403404, 8.463104, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_l_arm_lower_finger_001_grp_"
                                            {
                                                float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_002_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                    double3 xformOp:translate = (13.603395100381832, 8.223095678943217, -0.7965463161468509)
                                                    float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                    float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }

                                                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_003_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                    double3 xformOp:translate = (12.803401585367181, 8.54309567179066, 0.8034483432769776)
                                                    float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                    float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_lower_finger_002_grp"
                                            {
                                                float3 xformOp:rotateXYZ.timeSamples = {
                                                    1: (0, 0, 0),
                                                }
                                                float3 xformOp:scale.timeSamples = {
                                                    1: (1, 1, 1),
                                                }
                                                double3 xformOp:translate.timeSamples = {
                                                    1: (-1.7763568394002505e-15, 0, 0),
                                                }
                                                float3 xformOp:translate:pivot = (14.003392, 8.783104, -0.00018177033)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                                def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_002_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-90, -0, 90)
                                                    double3 xformOp:translate = (16.003397941589355, 8.54309371721745, 0.7875960026778248)
                                                    float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                    float3 xformOp:translate:rotatePivotTranslate = (-1.3203793, -0.5600502, -1.8804294)
                                                    float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }

                                                def Xform "Wall_e_RIG_v001_l_arm_lower_finger_002_grp_pac"
                                                {
                                                }

                                                def Xform "Wall_e_RIG_v001_l_arm_lower_finger_002_grp_scc"
                                                {
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_lower_finger_001_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_l_arm_lower_finger_001_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_lower_finger_base_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_l_arm_lower_finger_base_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_l_arm_extend_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_l_arm_extend_grp_scc"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_l_arm_twist_grp_pac"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_l_arm_twist_grp_scc"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_body_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_l_arm_body_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_shift_extend_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_arm_shift_extend_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_shift_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_arm_shift_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_arm_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_r_arm_shift_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, -1.4033418e-14, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (4.440892098500626e-16, -1.7763568394002505e-15, 0),
                    }
                    float3 xformOp:translate:pivot = (-3.1998544, 9.260992, -0.00018177033)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_r_arm_shift_grp_"
                    {
                        float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                        def Xform "Wall_e_RIG_v001_red_axle_2_002_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-0, 90, 0)
                            double3 xformOp:translate = (-2.640008196234703, 9.022001779198646, 0.39981212332075994)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_black_axle_connector_double_flexible_003_mesh"
                        {
                            double3 xformOp:translate = (-2.7600174248218536, 8.901992550611496, -1.2001771986484528)
                            float3 xformOp:translate:pivot = (0.7603195, 0.36073422, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_straight_003_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (-2.0383248329162593, 9.774501979351044, -0.5158441662788394)
                            float3 xformOp:translate:rotatePivot = (0.5125, 0.5156669, 1.5575283)
                            float3 xformOp:translate:rotatePivotTranslate = (-2.0700283, -1.0281669, -1.0418613)
                            float3 xformOp:translate:scalePivot = (0.5125, 0.5156669, 1.5575283)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_technics_bush_1_2_smooth_009_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-0, -90, 0)
                            double3 xformOp:translate = (-3.5931287803189242, 8.902002050876618, -0.36015060041166796)
                            float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                            float3 xformOp:translate:rotatePivotTranslate = (-0.56014556, 0, 0.15980114)
                            float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Mesh "Wall_e_RIG_v001_darkGrey_axle_3_005_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent.timeSamples = {
                                1: [(-4.7983975, 9.021716, -0.24046284), (-3.5963247, 9.502287, 0.24010834)],
                            }
                            int[] faceVertexCounts.timeSamples = {
                                1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                            }
                            int[] faceVertexIndices.timeSamples = {
                                1: [60, 61, 33, 16, 50, 51, 194, 195, 31, 46, 47, 8, 28, 37, 32, 17, 29, 172, 173, 10, 40, 49, 45, 12, 43, 44, 36, 18, 38, 181, 182, 14, 64, 60, 16, 21, 27, 28, 17, 22, 42, 43, 18, 23, 54, 50, 195, 196, 62, 160, 129, 2, 33, 130, 131, 16, 20, 147, 148, 34, 52, 150, 203, 204, 47, 136, 137, 8, 8, 137, 138, 31, 30, 156, 157, 11, 173, 174, 159, 10, 4, 141, 142, 48, 12, 139, 140, 40, 6, 151, 179, 180, 39, 154, 155, 15, 16, 131, 132, 21, 0, 133, 134, 63, 25, 146, 147, 20, 197, 198, 144, 53, 63, 64, 21, 0, 26, 27, 22, 9, 41, 42, 23, 13, 53, 54, 196, 197, 1, 145, 146, 25, 21, 132, 133, 0, 13, 23, 27, 26, 23, 18, 28, 27, 18, 36, 37, 28, 14, 182, 172, 29, 15, 155, 156, 30, 31, 138, 139, 12, 12, 45, 46, 31, 61, 62, 2, 33, 2, 129, 130, 33, 34, 148, 149, 3, 204, 194, 51, 52, 36, 44, 38, 14, 37, 36, 14, 29, 32, 37, 29, 10, 6, 180, 181, 38, 7, 153, 154, 39, 40, 140, 141, 4, 4, 48, 49, 40, 5, 24, 42, 41, 24, 19, 43, 42, 19, 35, 44, 43, 38, 44, 35, 6, 45, 193, 183, 46, 47, 46, 183, 184, 184, 185, 136, 47, 48, 142, 190, 191, 49, 48, 191, 192, 45, 49, 192, 193, 20, 34, 51, 50, 52, 51, 34, 3, 3, 149, 150, 52, 53, 144, 145, 1, 1, 25, 54, 53, 25, 20, 50, 54, 55, 15, 30, 56, 57, 56, 30, 11, 11, 157, 158, 57, 58, 152, 153, 7, 59, 58, 7, 39, 55, 59, 39, 15, 17, 32, 161, 162, 32, 10, 171, 161, 10, 159, 170, 171, 164, 165, 135, 9, 9, 22, 163, 164, 22, 17, 162, 163, 97, 65, 66, 98, 99, 98, 66, 67, 100, 99, 67, 68, 101, 100, 68, 69, 102, 101, 69, 70, 103, 175, 176, 71, 169, 103, 71, 168, 105, 104, 72, 73, 106, 105, 73, 74, 107, 106, 74, 75, 108, 107, 75, 76, 109, 108, 76, 77, 110, 109, 77, 78, 111, 166, 167, 79, 112, 186, 187, 80, 113, 112, 80, 81, 114, 113, 81, 82, 115, 114, 82, 83, 116, 115, 83, 84, 117, 116, 84, 85, 118, 117, 85, 86, 189, 118, 86, 188, 120, 199, 200, 88, 121, 120, 88, 89, 122, 121, 89, 90, 123, 122, 90, 91, 124, 123, 91, 92, 125, 124, 92, 93, 126, 125, 93, 94, 202, 126, 94, 201, 178, 127, 95, 177, 97, 128, 96, 65, 129, 105, 106, 130, 131, 130, 106, 107, 132, 131, 107, 108, 133, 132, 108, 109, 134, 133, 109, 110, 135, 165, 166, 111, 136, 185, 186, 112, 137, 136, 112, 113, 138, 137, 113, 114, 139, 138, 114, 115, 140, 139, 115, 116, 141, 140, 116, 117, 142, 141, 117, 118, 190, 142, 118, 189, 144, 198, 199, 120, 145, 144, 120, 121, 146, 145, 121, 122, 147, 146, 122, 123, 148, 147, 123, 124, 149, 148, 124, 125, 150, 149, 125, 126, 203, 150, 126, 202, 179, 151, 127, 178, 153, 152, 128, 97, 154, 153, 97, 98, 155, 154, 98, 99, 156, 155, 99, 100, 157, 156, 100, 101, 158, 157, 101, 102, 159, 174, 175, 103, 170, 159, 103, 169, 129, 160, 104, 105, 162, 161, 61, 60, 163, 162, 60, 64, 164, 163, 64, 63, 63, 134, 165, 164, 166, 165, 134, 110, 167, 166, 110, 78, 104, 169, 168, 72, 160, 170, 169, 104, 171, 170, 160, 62, 161, 171, 62, 61, 172, 56, 57, 173, 57, 158, 174, 173, 175, 174, 158, 102, 176, 175, 102, 70, 128, 178, 177, 96, 152, 179, 178, 128, 180, 179, 152, 58, 181, 180, 58, 59, 182, 181, 59, 55, 172, 182, 55, 56, 184, 183, 26, 9, 9, 135, 185, 184, 186, 185, 135, 111, 187, 186, 111, 79, 119, 189, 188, 87, 143, 190, 189, 119, 191, 190, 143, 5, 192, 191, 5, 41, 193, 192, 41, 13, 183, 193, 13, 26, 195, 194, 35, 19, 196, 195, 19, 24, 197, 196, 24, 5, 5, 143, 198, 197, 199, 198, 143, 119, 200, 199, 119, 87, 127, 202, 201, 95, 151, 203, 202, 127, 204, 203, 151, 6, 35, 194, 204, 6],
                            }
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                            point3f[] points.timeSamples = {
                                1: [(-3.5963247, 9.342097, -0.22469552), (-3.5963247, 9.342097, 0.22434103), (-3.5963247, 9.181907, -0.22469553), (-3.5963247, 9.181907, 0.22434103), (-3.5963247, 9.48652, 0.07991793), (-3.5963247, 9.342097, 0.07991793), (-3.5963247, 9.181907, 0.07991792), (-3.5963247, 9.037483, 0.07991794), (-3.5963247, 9.48652, -0.08027246), (-3.5963247, 9.342097, -0.080272466), (-3.5963247, 9.181907, -0.080272466), (-3.5963247, 9.037483, -0.080272466), (-3.5963247, 9.502287, -0.0001772578), (-3.5963247, 9.342097, -0.00017726421), (-3.5963247, 9.181907, -0.00017726421), (-3.5963247, 9.021716, -0.00017726421), (-3.5963247, 9.262002, -0.24046284), (-3.5963247, 9.262002, -0.080272466), (-3.5963247, 9.262002, -0.00017726421), (-3.5963247, 9.262002, 0.07991792), (-3.5963247, 9.262002, 0.24010834), (-3.5963247, 9.330141, -0.22704922), (-3.5963247, 9.330141, -0.08027245), (-3.5963247, 9.330141, -0.00017726421), (-3.5963247, 9.33014, 0.07991793), (-3.5963247, 9.330141, 0.22669473), (-3.5963247, 9.342097, -0.067782044), (-3.5963247, 9.330141, -0.067782044), (-3.5963247, 9.262002, -0.067782044), (-3.5963247, 9.181907, -0.067782044), (-3.5963247, 9.035025, -0.067782044), (-3.5963247, 9.488979, -0.06778204), (-3.5963247, 9.194411, -0.080272466), (-3.5963247, 9.194411, -0.22715718), (-3.5963247, 9.194412, 0.22680265), (-3.5963247, 9.194411, 0.07991792), (-3.5963247, 9.194411, -0.00017726421), (-3.5963247, 9.194411, -0.067782044), (-3.5963247, 9.181908, 0.067468464), (-3.5963247, 9.035033, 0.067468464), (-3.5963247, 9.488972, 0.06746847), (-3.5963247, 9.342097, 0.06746847), (-3.5963247, 9.330141, 0.06746847), (-3.5963247, 9.262002, 0.067468464), (-3.5963247, 9.194412, 0.067468464), (-3.5963247, 9.488494, -0.0001772577), (-3.5963247, 9.476332, -0.067782044), (-3.5963247, 9.474084, -0.080272466), (-3.5963247, 9.474084, 0.07991793), (-3.5963247, 9.476324, 0.06746847), (-3.5963247, 9.262002, 0.22414194), (-3.5963247, 9.194411, 0.21216245), (-3.5963247, 9.181907, 0.20994619), (-3.5963247, 9.342097, 0.20994619), (-3.5963247, 9.330141, 0.21206528), (-3.5963247, 9.035591, -0.00017726421), (-3.5963247, 9.047748, -0.067782015), (-3.5963247, 9.049993, -0.080272436), (-3.5963247, 9.049993, 0.07991794), (-3.5963247, 9.047755, 0.067468464), (-3.5963247, 9.262002, -0.22747162), (-3.5963247, 9.194411, -0.21524501), (-3.5963247, 9.181907, -0.21298298), (-3.5963247, 9.342097, -0.212983), (-3.5963247, 9.330141, -0.21514586), (-4.798397, 9.037483, 0.07991794), (-4.798397, 9.035033, 0.067468464), (-4.798397, 9.021716, -0.00017726421), (-4.798397, 9.035025, -0.067782044), (-4.798397, 9.037483, -0.080272496), (-4.798397, 9.049993, -0.080272496), (-4.798397, 9.181907, -0.080272496), (-4.798397, 9.181907, -0.21298301), (-4.798397, 9.181907, -0.2246955), (-4.798397, 9.194411, -0.22715718), (-4.798397, 9.262002, -0.24046284), (-4.798397, 9.330141, -0.22704923), (-4.798397, 9.342097, -0.22469547), (-4.798397, 9.342097, -0.21298298), (-4.798397, 9.342097, -0.080272496), (-4.798397, 9.474084, -0.080272496), (-4.798397, 9.48652, -0.08027249), (-4.7983975, 9.488979, -0.06778204), (-4.798397, 9.502287, -0.0001772578), (-4.798397, 9.488972, 0.06746847), (-4.798397, 9.48652, 0.07991793), (-4.798397, 9.474084, 0.07991793), (-4.798397, 9.342097, 0.07991793), (-4.798397, 9.342097, 0.20994619), (-4.798397, 9.342097, 0.22434103), (-4.798397, 9.330141, 0.22669473), (-4.798397, 9.262002, 0.24010834), (-4.798397, 9.194412, 0.22680265), (-4.798397, 9.181907, 0.22434103), (-4.798397, 9.181907, 0.20994619), (-4.798397, 9.181907, 0.07991792), (-4.798397, 9.049993, 0.07991794), (-4.3963237, 9.037483, 0.07991794), (-4.3963237, 9.035033, 0.067468464), (-4.3963237, 9.021716, -0.00017726421), (-4.3963237, 9.035025, -0.067782044), (-4.3963237, 9.037483, -0.080272496), (-4.3963237, 9.049993, -0.080272496), (-4.3963237, 9.181907, -0.080272496), (-4.3963237, 9.181907, -0.21298301), (-4.3963237, 9.181907, -0.2246955), (-4.3963237, 9.194411, -0.22715718), (-4.3963237, 9.262002, -0.24046284), (-4.3963237, 9.330141, -0.22704923), (-4.3963237, 9.342097, -0.22469549), (-4.3963237, 9.342097, -0.212983), (-4.3963237, 9.342097, -0.080272496), (-4.3963237, 9.474084, -0.080272496), (-4.3963237, 9.48652, -0.08027249), (-4.3963237, 9.488979, -0.06778204), (-4.3963237, 9.502287, -0.0001772578), (-4.3963237, 9.488972, 0.06746847), (-4.3963237, 9.48652, 0.07991793), (-4.3963237, 9.474084, 0.07991793), (-4.3963237, 9.342097, 0.07991793), (-4.3963237, 9.342097, 0.20994619), (-4.3963237, 9.342097, 0.22434103), (-4.3963237, 9.330141, 0.22669473), (-4.3963237, 9.262002, 0.24010834), (-4.3963237, 9.194412, 0.22680265), (-4.3963237, 9.181907, 0.22434103), (-4.3963237, 9.181907, 0.20994619), (-4.3963237, 9.181907, 0.07991792), (-4.3963237, 9.049993, 0.07991794), (-3.6065958, 9.181907, -0.22469553), (-3.6065958, 9.194411, -0.22715718), (-3.6065958, 9.262002, -0.24046284), (-3.6065958, 9.330141, -0.22704922), (-3.6065958, 9.342097, -0.22469552), (-3.6065958, 9.342097, -0.212983), (-3.6065958, 9.342097, -0.080272466), (-3.6065958, 9.474084, -0.080272466), (-3.6065958, 9.48652, -0.08027246), (-3.6065958, 9.488979, -0.06778204), (-3.6065958, 9.502287, -0.0001772578), (-3.6065958, 9.488972, 0.06746847), (-3.6065958, 9.48652, 0.07991793), (-3.6065958, 9.474084, 0.07991793), (-3.6065958, 9.342097, 0.07991793), (-3.6065958, 9.342097, 0.20994619), (-3.6065958, 9.342097, 0.22434103), (-3.6065958, 9.330141, 0.22669473), (-3.6065958, 9.262002, 0.24010834), (-3.6065958, 9.194412, 0.22680265), (-3.6065958, 9.181907, 0.22434103), (-3.6065958, 9.181907, 0.20994619), (-3.6065958, 9.181907, 0.07991792), (-3.6065958, 9.049993, 0.07991794), (-3.6065958, 9.037483, 0.07991794), (-3.6065958, 9.035033, 0.067468464), (-3.6065958, 9.021716, -0.00017726421), (-3.6065958, 9.035025, -0.067782044), (-3.6065958, 9.037483, -0.080272466), (-3.6065958, 9.049993, -0.080272436), (-3.6065958, 9.181907, -0.080272466), (-3.6065958, 9.181907, -0.21298298), (-3.5963247, 9.194411, -0.09216443), (-3.5963247, 9.262002, -0.09324163), (-3.5963247, 9.330141, -0.092155665), (-3.5963247, 9.342097, -0.091965094), (-3.6065958, 9.342097, -0.091965094), (-4.3963237, 9.342097, -0.091965124), (-4.798397, 9.342097, -0.091965124), (-4.798397, 9.181907, -0.09196514), (-4.3963237, 9.181907, -0.09196514), (-3.6065958, 9.181907, -0.09196511), (-3.5963247, 9.181907, -0.09196511), (-3.5963247, 9.170517, -0.067782044), (-3.5963247, 9.170708, -0.080272466), (-3.6065958, 9.170708, -0.080272466), (-4.3963237, 9.170708, -0.080272496), (-4.798397, 9.170708, -0.080272496), (-4.798397, 9.170708, 0.07991794), (-4.3963237, 9.170708, 0.07991794), (-3.6065958, 9.170708, 0.07991794), (-3.5963247, 9.170708, 0.07991794), (-3.5963247, 9.170518, 0.067468464), (-3.5963247, 9.169485, -0.00017726421), (-3.5963247, 9.353064, -0.067782044), (-3.5963247, 9.35288, -0.080272466), (-3.6065958, 9.35288, -0.080272466), (-4.3963237, 9.35288, -0.080272496), (-4.798397, 9.35288, -0.080272496), (-4.798397, 9.35288, 0.07991793), (-4.3963237, 9.35288, 0.07991793), (-3.6065958, 9.35288, 0.07991793), (-3.5963247, 9.35288, 0.07991793), (-3.5963247, 9.353064, 0.06746847), (-3.5963247, 9.354057, -0.00017726421), (-3.5963247, 9.194411, 0.09174314), (-3.5963247, 9.262002, 0.09281434), (-3.5963247, 9.330141, 0.09173446), (-3.5963247, 9.342097, 0.09154498), (-3.6065958, 9.342097, 0.09154498), (-4.3963237, 9.342097, 0.09154498), (-4.798397, 9.342097, 0.09154497), (-4.798397, 9.181908, 0.09154497), (-4.3963237, 9.181908, 0.09154497), (-3.6065958, 9.181908, 0.09154497), (-3.5963247, 9.181908, 0.09154497)],
                            }
                            float3 xformOp:translate:pivot = (-3.596325, 9.262002, -0.00017726421)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_shift_extend_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, -1.4033418e-14, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (-4.440892098500626e-16, 1.7763568394002505e-15, 4.930380657631324e-32),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_r_arm_shift_extend_grp_"
                        {
                            def Mesh "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_ball_003_mesh" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform bool doubleSided = 1
                                float3[] extent = [(-5.331278, 8.728506, -0.5285332), (-4.2655177, 9.795669, 0.5281913)]
                                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                int[] faceVertexIndices = [0, 50, 74, 53, 50, 14, 51, 74, 74, 51, 20, 52, 53, 74, 52, 17, 14, 54, 75, 51, 54, 1, 55, 75, 75, 55, 15, 56, 51, 75, 56, 20, 20, 56, 76, 59, 56, 15, 57, 76, 76, 57, 3, 58, 59, 76, 58, 16, 17, 52, 77, 61, 52, 20, 59, 77, 77, 59, 16, 60, 61, 77, 60, 2, 2, 60, 78, 64, 60, 16, 62, 78, 78, 62, 21, 63, 64, 78, 63, 8, 16, 58, 79, 62, 58, 3, 65, 79, 79, 65, 18, 66, 62, 79, 66, 21, 21, 66, 80, 69, 66, 18, 67, 80, 80, 67, 5, 68, 69, 80, 68, 19, 8, 63, 81, 71, 63, 21, 69, 81, 81, 69, 19, 70, 71, 81, 70, 4, 4, 70, 82, 26, 70, 19, 72, 82, 82, 72, 22, 73, 26, 82, 73, 11, 19, 68, 83, 72, 68, 5, 27, 83, 83, 27, 9, 28, 72, 83, 28, 22, 22, 28, 84, 31, 28, 9, 29, 84, 84, 29, 7, 30, 31, 84, 30, 10, 11, 73, 85, 33, 73, 22, 31, 85, 85, 31, 10, 32, 33, 85, 32, 6, 6, 32, 86, 36, 32, 10, 34, 86, 86, 34, 23, 35, 36, 86, 35, 13, 10, 30, 87, 34, 30, 7, 37, 87, 87, 37, 12, 38, 34, 87, 38, 23, 23, 38, 88, 40, 38, 12, 39, 88, 88, 39, 1, 54, 40, 88, 54, 14, 13, 35, 89, 41, 35, 23, 40, 89, 89, 40, 14, 50, 41, 89, 50, 0, 1, 39, 90, 55, 39, 12, 42, 90, 90, 42, 24, 43, 55, 90, 43, 15, 12, 37, 91, 42, 37, 7, 29, 91, 91, 29, 9, 44, 42, 91, 44, 24, 24, 44, 92, 45, 44, 9, 27, 92, 92, 27, 5, 67, 45, 92, 67, 18, 15, 43, 93, 57, 43, 24, 45, 93, 93, 45, 18, 65, 57, 93, 65, 3, 6, 36, 94, 33, 36, 13, 46, 94, 94, 46, 25, 47, 33, 94, 47, 11, 13, 41, 95, 46, 41, 0, 53, 95, 95, 53, 17, 48, 46, 95, 48, 25, 25, 48, 96, 49, 48, 17, 61, 96, 96, 61, 2, 64, 49, 96, 64, 8, 11, 47, 97, 26, 47, 25, 49, 97, 97, 49, 8, 71, 26, 97, 71, 4]
                                rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                                point3f[] points = [(-5.1057005, 8.954162, 0.3031156), (-5.1057, 9.570013, 0.3031156), (-5.1057005, 8.954162, -0.3034575), (-5.1057, 9.570013, -0.3034575), (-4.4910955, 8.954162, -0.3034575), (-4.491095, 9.570013, -0.3034575), (-4.4910955, 8.954162, 0.3031156), (-4.491095, 9.570013, 0.3031156), (-4.7983975, 8.881639, -0.37975097), (-4.405264, 9.655338, -0.00017094612), (-4.420051, 9.262089, 0.3774228), (-4.4052644, 8.868837, -0.00017094612), (-4.7983975, 9.642538, 0.37940907), (-4.7983975, 8.881639, 0.37940907), (-5.1767445, 9.262089, 0.3774228), (-5.1915307, 9.655338, -0.00017094612), (-5.1767445, 9.262088, -0.3777647), (-5.191531, 8.868837, -0.00017094612), (-4.7983975, 9.642538, -0.37975097), (-4.420051, 9.262088, -0.3777647), (-5.331278, 9.262088, -0.00017094612), (-4.7983975, 9.262088, -0.5285332), (-4.2655177, 9.262088, -0.00017094612), (-4.7983975, 9.262088, 0.5281913), (-4.7983975, 9.795669, -0.00017094612), (-4.798398, 8.728506, -0.00017094612), (-4.4332514, 8.896708, -0.1819632), (-4.4332514, 9.627467, -0.1819632), (-4.299935, 9.476902, -0.00017094612), (-4.4332514, 9.627467, 0.18162155), (-4.4419494, 9.445621, 0.35477114), (-4.3068933, 9.262088, 0.20420551), (-4.4419494, 9.078556, 0.35477114), (-4.433252, 8.8967085, 0.18162155), (-4.5940213, 9.262088, 0.48832154), (-4.798398, 9.05631, 0.48925638), (-4.6150994, 8.904238, 0.3559394), (-4.6150994, 9.619938, 0.3559394), (-4.7983975, 9.467867, 0.48925638), (-4.981696, 9.619938, 0.3559394), (-5.0027742, 9.262088, 0.48832154), (-4.981696, 8.904238, 0.3559394), (-4.7983975, 9.754994, 0.20560765), (-5.013212, 9.761018, -0.00017094612), (-4.583584, 9.761018, -0.00017094612), (-4.7983975, 9.754994, -0.2059493), (-4.798398, 8.769181, 0.20560765), (-4.5835834, 8.763158, -0.00017094612), (-5.0132117, 8.763158, -0.00017094612), (-4.798398, 8.769182, -0.2059493), (-5.154845, 9.078556, 0.35477114), (-5.289902, 9.262088, 0.20420551), (-5.2968607, 9.047274, -0.00017094612), (-5.163544, 8.8967085, 0.18162155), (-5.154845, 9.445621, 0.35477114), (-5.1635437, 9.627467, 0.18162155), (-5.2968607, 9.476902, -0.00017094612), (-5.1635437, 9.627467, -0.1819632), (-5.154845, 9.44562, -0.35511303), (-5.289902, 9.262088, -0.2045474), (-5.154845, 9.078556, -0.35511303), (-5.1635437, 8.896708, -0.1819632), (-5.0027742, 9.262088, -0.48866343), (-4.798398, 9.05631, -0.48959804), (-4.981696, 8.904238, -0.35628128), (-4.981696, 9.619938, -0.35628128), (-4.7983975, 9.467867, -0.48959804), (-4.6150994, 9.619938, -0.35628128), (-4.4419494, 9.44562, -0.35511303), (-4.5940213, 9.262088, -0.48866343), (-4.4419494, 9.078556, -0.35511303), (-4.6150994, 8.904238, -0.35628128), (-4.3068933, 9.262088, -0.2045474), (-4.299935, 9.047274, -0.00017094612), (-5.2593513, 9.062161, 0.1927967), (-5.2593517, 9.462014, 0.1927967), (-5.2593517, 9.462013, -0.1931386), (-5.2593513, 9.062162, -0.1931386), (-4.9913654, 9.068186, -0.45510077), (-4.991365, 9.455991, -0.45510077), (-4.6054296, 9.455991, -0.45510077), (-4.6054296, 9.068186, -0.45510077), (-4.337444, 9.062162, -0.1931386), (-4.3374443, 9.462013, -0.1931386), (-4.3374443, 9.462014, 0.1927967), (-4.337444, 9.062161, 0.1927967), (-4.6054296, 9.068186, 0.45475912), (-4.6054296, 9.455991, 0.45475888), (-4.991365, 9.455991, 0.45475888), (-4.9913654, 9.068186, 0.45475912), (-4.998324, 9.723976, 0.19373131), (-4.5984716, 9.723976, 0.19373131), (-4.5984716, 9.723977, -0.1940732), (-4.998324, 9.723977, -0.1940732), (-4.5984716, 8.8001995, 0.19373131), (-4.998324, 8.8001995, 0.19373131), (-4.998324, 8.8001995, -0.1940732), (-4.5984716, 8.8001995, -0.1940732)]
                                float3 xformOp:translate:pivot = (-2.0383248, 8.749502, 0.51548964)
                                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_body_grp"
                        {
                            float3 xformOp:rotateXYZ.timeSamples = {
                                1: (1.14110195e-14, -7.5830334e-22, -7.551179e-38),
                            }
                            float3 xformOp:scale.timeSamples = {
                                1: (1, 1, 1),
                            }
                            double3 xformOp:translate.timeSamples = {
                                1: (-1.7763568394002505e-15, 0, 0),
                            }
                            float3 xformOp:translate:pivot = (-4.8000803, 9.263097, 0.003447318)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                            def Xform "Wall_e_RIG_v001_r_arm_body_grp_"
                            {
                                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_006_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (-8.800068855285645, 9.263103544712036, 0.5634479551315708)
                                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.08065438, -1.0401756)
                                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_010_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 180)
                                    double3 xformOp:translate = (-6.400078773498533, 10.063091337680788, 0.8834479479790137)
                                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998398, -1.0404364, -1.0404364)
                                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_036_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, 3.1805547e-15, -90)
                                    double3 xformOp:translate = (-6.400071144104003, 10.063091337680788, -0.39655202341075696)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_007_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (-8.000069618225098, 9.263103544712036, 0.5634479551315708)
                                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.08065438, -1.0401756)
                                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_010_mesh"
                                {
                                    double3 xformOp:translate = (-9.600071907043457, 10.063102781772583, -0.3965473146438197)
                                    uniform token[] xformOpOrder = ["xformOp:translate"]
                                }

                                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_014_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 90)
                                    double3 xformOp:translate = (-8.800078010559082, 8.463090574741335, 0.5634479551315714)
                                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0.2395639, -0.960415)
                                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_015_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 180)
                                    double3 xformOp:translate = (-7.200081825256343, 9.263084471225708, 0.5634479551315711)
                                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, -0.640415, -0.640415)
                                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_darkGrey_brick_2x2_ball_recept_003_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                                    double3 xformOp:translate = (-7.200074195861816, 8.46309667825696, 0.5634479551315708)
                                    float3 xformOp:translate:rotatePivot = (1.4001725, 0.5605411, 0.80019325)
                                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.23965217, -1.3607343)
                                    float3 xformOp:translate:scalePivot = (1.4001725, 0.5605411, 0.80019325)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_011_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 180)
                                    double3 xformOp:translate = (-6.4000787734985325, 9.263084471225708, -0.3965520234107569)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }

                                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_011_mesh"
                                {
                                    float3 xformOp:rotateXYZ = (-90, -0, 180)
                                    double3 xformOp:translate = (-6.400086402893066, 10.063091337680786, -0.39655202341075696)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_twist_grp"
                            {
                                float3 xformOp:rotateXYZ.timeSamples = {
                                    1: (-4.1823686e-22, 0, 0),
                                }
                                float3 xformOp:scale.timeSamples = {
                                    1: (1, 1, 1),
                                }
                                double3 xformOp:translate.timeSamples = {
                                    1: (-1.7763568394002505e-15, 0, -1.734723475976807e-18),
                                }
                                float3 xformOp:translate:pivot = (-9.598832, 9.262169, 0.009834416)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                def Xform "Wall_e_RIG_v001_r_arm_twist_grp_"
                                {
                                    float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                    uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                    def Mesh "Wall_e_RIG_v001_lightGray_l_arm_cap_002_mesh" (
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                    )
                                    {
                                        uniform bool doubleSided = 1
                                        float3[] extent = [(-10.442841, 8.495436, -0.7569004), (-9.598833, 10.02891, 0.77656937)]
                                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                        int[] faceVertexIndices = [44, 1, 61, 62, 56, 57, 5, 38, 1, 8, 60, 61, 6, 10, 58, 59, 8, 6, 59, 60, 10, 5, 57, 58, 52, 85, 86, 4, 3, 82, 83, 73, 11, 81, 82, 3, 7, 80, 81, 11, 9, 79, 80, 7, 2, 78, 79, 9, 67, 77, 78, 2, 0, 74, 75, 66, 21, 22, 71, 72, 22, 23, 70, 71, 23, 24, 69, 70, 24, 25, 68, 69, 39, 40, 14, 13, 40, 41, 15, 14, 41, 42, 16, 15, 42, 43, 17, 16, 53, 54, 31, 19, 20, 28, 33, 32, 28, 29, 34, 33, 29, 30, 35, 34, 30, 26, 36, 35, 27, 37, 64, 65, 54, 55, 51, 31, 32, 33, 49, 50, 33, 34, 48, 49, 34, 35, 47, 48, 35, 36, 46, 47, 37, 45, 63, 64, 45, 44, 62, 63, 47, 46, 43, 42, 48, 47, 42, 41, 49, 48, 41, 40, 50, 49, 40, 39, 51, 55, 56, 38, 12, 84, 85, 52, 20, 32, 54, 53, 32, 50, 55, 54, 56, 55, 50, 39, 39, 13, 57, 56, 58, 57, 13, 14, 59, 58, 14, 15, 60, 59, 15, 16, 61, 60, 16, 17, 62, 61, 17, 43, 63, 62, 43, 46, 64, 63, 46, 36, 65, 64, 36, 26, 66, 75, 76, 18, 18, 76, 77, 67, 69, 68, 26, 30, 70, 69, 30, 29, 71, 70, 29, 28, 72, 71, 28, 20, 73, 83, 84, 12, 74, 27, 65, 75, 76, 75, 65, 26, 77, 76, 26, 68, 78, 77, 68, 25, 79, 78, 25, 24, 80, 79, 24, 23, 81, 80, 23, 22, 82, 81, 22, 21, 83, 82, 21, 72, 84, 83, 72, 20, 85, 84, 20, 53, 86, 85, 53, 19, 87, 88, 223, 224, 88, 89, 230, 223, 89, 90, 229, 230, 90, 91, 228, 229, 91, 92, 227, 228, 92, 93, 226, 227, 93, 94, 225, 226, 94, 87, 224, 225, 88, 87, 222, 215, 89, 88, 215, 216, 90, 89, 216, 217, 91, 90, 217, 218, 92, 91, 218, 219, 93, 92, 219, 220, 94, 93, 220, 221, 87, 94, 221, 222, 104, 103, 206, 199, 105, 104, 199, 200, 106, 105, 200, 201, 107, 106, 201, 202, 108, 107, 202, 203, 109, 108, 203, 204, 110, 109, 204, 205, 103, 110, 205, 206, 112, 111, 190, 183, 113, 112, 183, 184, 114, 113, 184, 185, 115, 114, 185, 186, 116, 115, 186, 187, 117, 116, 187, 188, 118, 117, 188, 189, 111, 118, 189, 190, 120, 119, 174, 167, 121, 120, 167, 168, 122, 121, 168, 169, 123, 122, 169, 170, 124, 123, 170, 171, 125, 124, 171, 172, 126, 125, 172, 173, 119, 126, 173, 174, 128, 127, 318, 311, 129, 128, 311, 312, 130, 129, 312, 313, 131, 130, 313, 314, 132, 131, 314, 315, 133, 132, 315, 316, 134, 133, 316, 317, 127, 134, 317, 318, 136, 135, 302, 295, 137, 136, 295, 296, 138, 137, 296, 297, 139, 138, 297, 298, 140, 139, 298, 299, 141, 140, 299, 300, 142, 141, 300, 301, 135, 142, 301, 302, 144, 143, 286, 279, 145, 144, 279, 280, 146, 145, 280, 281, 147, 146, 281, 282, 148, 147, 282, 283, 149, 148, 283, 284, 150, 149, 284, 285, 143, 150, 285, 286, 152, 151, 270, 263, 153, 152, 263, 264, 154, 153, 264, 265, 155, 154, 265, 266, 156, 155, 266, 267, 157, 156, 267, 268, 158, 157, 268, 269, 151, 158, 269, 270, 160, 159, 254, 247, 161, 160, 247, 248, 162, 161, 248, 249, 163, 162, 249, 250, 164, 163, 250, 251, 165, 164, 251, 252, 166, 165, 252, 253, 159, 166, 253, 254, 168, 167, 319, 320, 169, 168, 320, 321, 170, 169, 321, 322, 171, 170, 322, 323, 172, 171, 323, 324, 173, 172, 324, 325, 174, 173, 325, 326, 167, 174, 326, 319, 176, 175, 120, 121, 177, 176, 121, 122, 178, 177, 122, 123, 179, 178, 123, 124, 180, 179, 124, 125, 181, 180, 125, 126, 182, 181, 126, 119, 175, 182, 119, 120, 184, 183, 175, 176, 185, 184, 176, 177, 186, 185, 177, 178, 187, 186, 178, 179, 188, 187, 179, 180, 189, 188, 180, 181, 190, 189, 181, 182, 183, 190, 182, 175, 192, 191, 112, 113, 193, 192, 113, 114, 194, 193, 114, 115, 195, 194, 115, 116, 196, 195, 116, 117, 197, 196, 117, 118, 198, 197, 118, 111, 191, 198, 111, 112, 200, 199, 191, 192, 201, 200, 192, 193, 202, 201, 193, 194, 203, 202, 194, 195, 204, 203, 195, 196, 205, 204, 196, 197, 206, 205, 197, 198, 199, 206, 198, 191, 208, 207, 104, 105, 209, 208, 105, 106, 210, 209, 106, 107, 211, 210, 107, 108, 212, 211, 108, 109, 213, 212, 109, 110, 214, 213, 110, 103, 207, 214, 103, 104, 216, 215, 207, 208, 217, 216, 208, 209, 218, 217, 209, 210, 219, 218, 210, 211, 220, 219, 211, 212, 221, 220, 212, 213, 222, 221, 213, 214, 215, 222, 214, 207, 224, 223, 231, 232, 225, 224, 232, 233, 226, 225, 233, 234, 227, 226, 234, 235, 228, 227, 235, 236, 229, 228, 236, 237, 230, 229, 237, 238, 223, 230, 238, 231, 232, 231, 96, 95, 233, 232, 95, 102, 234, 233, 102, 101, 235, 234, 101, 100, 236, 235, 100, 99, 237, 236, 99, 98, 238, 237, 98, 97, 231, 238, 97, 96, 240, 239, 96, 97, 241, 240, 97, 98, 242, 241, 98, 99, 243, 242, 99, 100, 244, 243, 100, 101, 245, 244, 101, 102, 246, 245, 102, 95, 239, 246, 95, 96, 248, 247, 239, 240, 249, 248, 240, 241, 250, 249, 241, 242, 251, 250, 242, 243, 252, 251, 243, 244, 253, 252, 244, 245, 254, 253, 245, 246, 247, 254, 246, 239, 256, 255, 160, 161, 257, 256, 161, 162, 258, 257, 162, 163, 259, 258, 163, 164, 260, 259, 164, 165, 261, 260, 165, 166, 262, 261, 166, 159, 255, 262, 159, 160, 264, 263, 255, 256, 265, 264, 256, 257, 266, 265, 257, 258, 267, 266, 258, 259, 268, 267, 259, 260, 269, 268, 260, 261, 270, 269, 261, 262, 263, 270, 262, 255, 272, 271, 152, 153, 273, 272, 153, 154, 274, 273, 154, 155, 275, 274, 155, 156, 276, 275, 156, 157, 277, 276, 157, 158, 278, 277, 158, 151, 271, 278, 151, 152, 280, 279, 271, 272, 281, 280, 272, 273, 282, 281, 273, 274, 283, 282, 274, 275, 284, 283, 275, 276, 285, 284, 276, 277, 286, 285, 277, 278, 279, 286, 278, 271, 288, 287, 144, 145, 289, 288, 145, 146, 290, 289, 146, 147, 291, 290, 147, 148, 292, 291, 148, 149, 293, 292, 149, 150, 294, 293, 150, 143, 287, 294, 143, 144, 296, 295, 287, 288, 297, 296, 288, 289, 298, 297, 289, 290, 299, 298, 290, 291, 300, 299, 291, 292, 301, 300, 292, 293, 302, 301, 293, 294, 295, 302, 294, 287, 304, 303, 136, 137, 305, 304, 137, 138, 306, 305, 138, 139, 307, 306, 139, 140, 308, 307, 140, 141, 309, 308, 141, 142, 310, 309, 142, 135, 303, 310, 135, 136, 312, 311, 303, 304, 313, 312, 304, 305, 314, 313, 305, 306, 315, 314, 306, 307, 316, 315, 307, 308, 317, 316, 308, 309, 318, 317, 309, 310, 311, 318, 310, 303, 320, 319, 128, 129, 321, 320, 129, 130, 322, 321, 130, 131, 323, 322, 131, 132, 324, 323, 132, 133, 325, 324, 133, 134, 326, 325, 134, 127, 319, 326, 127, 128, 371, 328, 388, 389, 383, 384, 332, 365, 328, 335, 387, 388, 333, 337, 385, 386, 335, 333, 386, 387, 337, 332, 384, 385, 379, 412, 413, 331, 330, 409, 410, 400, 338, 408, 409, 330, 334, 407, 408, 338, 336, 406, 407, 334, 329, 405, 406, 336, 394, 404, 405, 329, 327, 401, 402, 393, 348, 349, 398, 399, 349, 350, 397, 398, 350, 351, 396, 397, 351, 352, 395, 396, 366, 367, 341, 340, 367, 368, 342, 341, 368, 369, 343, 342, 369, 370, 344, 343, 380, 381, 358, 346, 347, 355, 360, 359, 355, 356, 361, 360, 356, 357, 362, 361, 357, 353, 363, 362, 354, 364, 391, 392, 381, 382, 378, 358, 359, 360, 376, 377, 360, 361, 375, 376, 361, 362, 374, 375, 362, 363, 373, 374, 364, 372, 390, 391, 372, 371, 389, 390, 374, 373, 370, 369, 375, 374, 369, 368, 376, 375, 368, 367, 377, 376, 367, 366, 378, 382, 383, 365, 339, 411, 412, 379, 347, 359, 381, 380, 359, 377, 382, 381, 383, 382, 377, 366, 366, 340, 384, 383, 385, 384, 340, 341, 386, 385, 341, 342, 387, 386, 342, 343, 388, 387, 343, 344, 389, 388, 344, 370, 390, 389, 370, 373, 391, 390, 373, 363, 392, 391, 363, 353, 393, 402, 403, 345, 345, 403, 404, 394, 396, 395, 353, 357, 397, 396, 357, 356, 398, 397, 356, 355, 399, 398, 355, 347, 400, 410, 411, 339, 401, 354, 392, 402, 403, 402, 392, 353, 404, 403, 353, 395, 405, 404, 395, 352, 406, 405, 352, 351, 407, 406, 351, 350, 408, 407, 350, 349, 409, 408, 349, 348, 410, 409, 348, 399, 411, 410, 399, 347, 412, 411, 347, 380, 413, 412, 380, 346, 458, 415, 475, 476, 470, 471, 419, 452, 415, 422, 474, 475, 420, 424, 472, 473, 422, 420, 473, 474, 424, 419, 471, 472, 466, 499, 500, 418, 417, 496, 497, 487, 425, 495, 496, 417, 421, 494, 495, 425, 423, 493, 494, 421, 416, 492, 493, 423, 481, 491, 492, 416, 414, 488, 489, 480, 435, 436, 485, 486, 436, 437, 484, 485, 437, 438, 483, 484, 438, 439, 482, 483, 453, 454, 428, 427, 454, 455, 429, 428, 455, 456, 430, 429, 456, 457, 431, 430, 467, 468, 445, 433, 434, 442, 447, 446, 442, 443, 448, 447, 443, 444, 449, 448, 444, 440, 450, 449, 441, 451, 478, 479, 468, 469, 465, 445, 446, 447, 463, 464, 447, 448, 462, 463, 448, 449, 461, 462, 449, 450, 460, 461, 451, 459, 477, 478, 459, 458, 476, 477, 461, 460, 457, 456, 462, 461, 456, 455, 463, 462, 455, 454, 464, 463, 454, 453, 465, 469, 470, 452, 426, 498, 499, 466, 434, 446, 468, 467, 446, 464, 469, 468, 470, 469, 464, 453, 453, 427, 471, 470, 472, 471, 427, 428, 473, 472, 428, 429, 474, 473, 429, 430, 475, 474, 430, 431, 476, 475, 431, 457, 477, 476, 457, 460, 478, 477, 460, 450, 479, 478, 450, 440, 480, 489, 490, 432, 432, 490, 491, 481, 483, 482, 440, 444, 484, 483, 444, 443, 485, 484, 443, 442, 486, 485, 442, 434, 487, 497, 498, 426, 488, 441, 479, 489, 490, 489, 479, 440, 491, 490, 440, 482, 492, 491, 482, 439, 493, 492, 439, 438, 494, 493, 438, 437, 495, 494, 437, 436, 496, 495, 436, 435, 497, 496, 435, 486, 498, 497, 486, 434, 499, 498, 434, 467, 500, 499, 467, 433, 545, 502, 562, 563, 557, 558, 506, 539, 502, 509, 561, 562, 507, 511, 559, 560, 509, 507, 560, 561, 511, 506, 558, 559, 553, 586, 587, 505, 504, 583, 584, 574, 512, 582, 583, 504, 508, 581, 582, 512, 510, 580, 581, 508, 503, 579, 580, 510, 568, 578, 579, 503, 501, 575, 576, 567, 522, 523, 572, 573, 523, 524, 571, 572, 524, 525, 570, 571, 525, 526, 569, 570, 540, 541, 515, 514, 541, 542, 516, 515, 542, 543, 517, 516, 543, 544, 518, 517, 554, 555, 532, 520, 521, 529, 534, 533, 529, 530, 535, 534, 530, 531, 536, 535, 531, 527, 537, 536, 528, 538, 565, 566, 555, 556, 552, 532, 533, 534, 550, 551, 534, 535, 549, 550, 535, 536, 548, 549, 536, 537, 547, 548, 538, 546, 564, 565, 546, 545, 563, 564, 548, 547, 544, 543, 549, 548, 543, 542, 550, 549, 542, 541, 551, 550, 541, 540, 552, 556, 557, 539, 513, 585, 586, 553, 521, 533, 555, 554, 533, 551, 556, 555, 557, 556, 551, 540, 540, 514, 558, 557, 559, 558, 514, 515, 560, 559, 515, 516, 561, 560, 516, 517, 562, 561, 517, 518, 563, 562, 518, 544, 564, 563, 544, 547, 565, 564, 547, 537, 566, 565, 537, 527, 567, 576, 577, 519, 519, 577, 578, 568, 570, 569, 527, 531, 571, 570, 531, 530, 572, 571, 530, 529, 573, 572, 529, 521, 574, 584, 585, 513, 575, 528, 566, 576, 577, 576, 566, 527, 578, 577, 527, 569, 579, 578, 569, 526, 580, 579, 526, 525, 581, 580, 525, 524, 582, 581, 524, 523, 583, 582, 523, 522, 584, 583, 522, 573, 585, 584, 573, 521, 586, 585, 521, 554, 587, 586, 554, 520]
                                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_wall_e_anim_v003_light_gray_sg>
                                        point3f[] points = [(-9.863384, 8.871303, 0.11254534), (-10.430916, 8.871303, 0.04244059), (-9.863384, 8.58097, 0.11254534), (-9.863384, 8.58097, -0.09287655), (-9.863384, 8.871303, -0.09287655), (-10.430916, 8.871303, -0.022771787), (-10.430916, 8.871303, 0.0098343985), (-9.863384, 8.566126, 0.0098343985), (-10.430916, 8.871303, 0.039243877), (-9.863384, 8.58097, 0.10243041), (-10.430916, 8.871303, -0.019361977), (-9.863384, 8.58097, -0.08173069), (-9.863384, 8.701692, -0.09287655), (-10.430916, 8.701692, -0.022771787), (-10.430916, 8.701692, -0.019361977), (-10.430916, 8.69427, 0.0098343985), (-10.430916, 8.701692, 0.039243877), (-10.430916, 8.701692, 0.04244059), (-9.863384, 8.701692, 0.11254534), (-10.109826, 8.871303, -0.09287655), (-10.109826, 8.701692, -0.09287655), (-10.109826, 8.58097, -0.09287655), (-10.109826, 8.58097, -0.08173069), (-10.109826, 8.566126, 0.0098343985), (-10.109826, 8.58097, 0.10243041), (-10.109826, 8.58097, 0.11254534), (-10.109826, 8.701692, 0.11254534), (-10.109826, 8.871303, 0.11254534), (-10.109826, 8.701692, -0.08173069), (-10.109826, 8.69427, 0.0098343985), (-10.109826, 8.701692, 0.10243041), (-10.116282, 8.871303, -0.09287655), (-10.116282, 8.701692, -0.09287655), (-10.116282, 8.701692, -0.08173069), (-10.116282, 8.69427, 0.0098343985), (-10.116282, 8.701692, 0.1024304), (-10.116282, 8.701692, 0.11254534), (-10.116282, 8.871303, 0.11254534), (-10.424503, 8.871303, -0.022771787), (-10.424503, 8.701692, -0.022771787), (-10.424503, 8.701692, -0.019361977), (-10.424503, 8.69427, 0.0098343985), (-10.424503, 8.701692, 0.039243877), (-10.424503, 8.701692, 0.04244059), (-10.424503, 8.871303, 0.04244059), (-10.273791, 8.871303, 0.08726484), (-10.273791, 8.701692, 0.08726484), (-10.273791, 8.701692, 0.079648), (-10.273791, 8.69427, 0.0098343985), (-10.273791, 8.701692, -0.05926957), (-10.273791, 8.701692, -0.067596056), (-10.273791, 8.871303, -0.067596056), (-9.863384, 8.708758, -0.09287655), (-10.109826, 8.708758, -0.09287655), (-10.116282, 8.708758, -0.09287655), (-10.273791, 8.708758, -0.067596056), (-10.424503, 8.708758, -0.022771787), (-10.430916, 8.708758, -0.022771787), (-10.430916, 8.708758, -0.019361977), (-10.430916, 8.701645, 0.0098343985), (-10.430916, 8.708758, 0.039243877), (-10.430916, 8.708758, 0.04244059), (-10.424503, 8.708758, 0.04244059), (-10.273791, 8.708758, 0.08726484), (-10.116282, 8.708758, 0.11254534), (-10.109826, 8.708758, 0.11254534), (-9.863384, 8.708758, 0.11254534), (-9.863384, 8.692343, 0.11254534), (-10.109826, 8.692342, 0.11254534), (-10.109826, 8.692342, 0.10243041), (-10.109826, 8.684345, 0.0098343985), (-10.109826, 8.692342, -0.08173069), (-10.109826, 8.692342, -0.09287655), (-9.863384, 8.692343, -0.09287655), (-10.101019, 8.871303, 0.11254534), (-10.101019, 8.708758, 0.11254534), (-10.101019, 8.701692, 0.11254534), (-10.101019, 8.692342, 0.11254534), (-9.991521, 8.58097, 0.11254534), (-9.991521, 8.58097, 0.10243041), (-9.991521, 8.566126, 0.0098343985), (-9.991521, 8.58097, -0.08173069), (-9.991521, 8.58097, -0.09287655), (-10.101019, 8.692342, -0.09287655), (-10.101019, 8.701692, -0.09287655), (-10.101019, 8.708758, -0.09287655), (-10.101019, 8.871303, -0.09287655), (-9.896331, 9.804338, 0.5519979), (-9.896331, 9.26217, 0.77656937), (-9.896331, 8.720008, 0.5519979), (-9.896331, 8.495436, 0.0098343985), (-9.896331, 8.720008, -0.5323292), (-9.896331, 9.26217, -0.7569004), (-9.896331, 9.804338, -0.5323292), (-9.896331, 10.02891, 0.0098343985), (-9.598833, 9.804338, 0.5519979), (-9.598833, 9.26217, 0.77656937), (-9.598833, 8.720008, 0.5519979), (-9.598833, 8.495436, 0.009834359), (-9.598833, 8.720008, -0.5323292), (-9.598833, 9.26217, -0.7569004), (-9.598833, 9.804338, -0.5323292), (-9.598833, 10.02891, 0.0098343985), (-9.896331, 9.612329, 0.35999396), (-9.896331, 9.26217, 0.50503445), (-9.896331, 8.912011, 0.35999396), (-9.896331, 8.766972, 0.0098343985), (-9.896331, 8.912011, -0.3403252), (-9.896331, 9.26217, -0.48536557), (-9.896331, 9.612329, -0.3403252), (-9.896331, 9.757369, 0.0098343985), (-10.442841, 9.612329, 0.35999396), (-10.442841, 9.26217, 0.50503445), (-10.442841, 8.912011, 0.35999396), (-10.442841, 8.766972, 0.0098343985), (-10.442841, 8.912011, -0.3403252), (-10.442841, 9.26217, -0.48536557), (-10.442841, 9.612329, -0.3403252), (-10.442841, 9.757369, 0.0098343985), (-10.442841, 9.544896, 0.2925575), (-10.442841, 9.26217, 0.4096649), (-10.442841, 8.979449, 0.2925575), (-10.442841, 8.862343, 0.009834407), (-10.442841, 8.979449, -0.27288866), (-10.442841, 9.26217, -0.38999605), (-10.442841, 9.544896, -0.27288866), (-10.442841, 9.662004, 0.009834407), (-9.598833, 9.544896, 0.2925575), (-9.598833, 9.26217, 0.4096649), (-9.598833, 8.979449, 0.2925575), (-9.598833, 8.862343, 0.009834407), (-9.598833, 8.979449, -0.27288866), (-9.598833, 9.26217, -0.38999605), (-9.598833, 9.544896, -0.27288866), (-9.598833, 9.662004, 0.009834407), (-9.598833, 9.608639, 0.35630342), (-9.598833, 9.26217, 0.4998153), (-9.598833, 8.915702, 0.35630342), (-9.598833, 8.772192, 0.0098343985), (-9.598833, 8.915702, -0.33663467), (-9.598833, 9.26217, -0.48014644), (-9.598833, 9.608639, -0.33663467), (-9.598833, 9.752153, 0.0098343985), (-9.795005, 9.608639, 0.35630342), (-9.795005, 9.26217, 0.4998153), (-9.795005, 8.915702, 0.35630342), (-9.795005, 8.772192, 0.0098343985), (-9.795005, 8.915702, -0.33663467), (-9.795005, 9.26217, -0.48014644), (-9.795005, 9.608639, -0.33663467), (-9.795005, 9.752153, 0.0098343985), (-9.795005, 9.742068, 0.48973274), (-9.795005, 9.26217, 0.6885129), (-9.795005, 8.782272, 0.48973274), (-9.795005, 8.583493, 0.009834381), (-9.795005, 8.782272, -0.47006398), (-9.795005, 9.26217, -0.668844), (-9.795005, 9.742068, -0.47006398), (-9.795005, 9.940849, 0.009834381), (-9.598833, 9.742068, 0.48973274), (-9.598833, 9.26217, 0.6885129), (-9.598833, 8.782272, 0.48973274), (-9.598833, 8.583493, 0.009834381), (-9.598833, 8.782272, -0.47006398), (-9.598833, 9.26217, -0.668844), (-9.598833, 9.742068, -0.47006398), (-9.598833, 9.940849, 0.009834381), (-10.434372, 9.26217, 0.4096649), (-10.434372, 8.979449, 0.2925575), (-10.434372, 8.862343, 0.009834407), (-10.434372, 8.979449, -0.27288866), (-10.434372, 9.26217, -0.38999605), (-10.434372, 9.544896, -0.27288866), (-10.434372, 9.662004, 0.009834407), (-10.434372, 9.544896, 0.2925575), (-10.442841, 9.26217, 0.42541537), (-10.442841, 8.968311, 0.30369478), (-10.442841, 8.846592, 0.009834406), (-10.442841, 8.968311, -0.28402594), (-10.442841, 9.26217, -0.40574652), (-10.442841, 9.556033, -0.28402594), (-10.442841, 9.677753, 0.009834406), (-10.442841, 9.556033, 0.30369478), (-10.442841, 9.26217, 0.48802388), (-10.442841, 8.92404, 0.3479657), (-10.442841, 8.783982, 0.0098344), (-10.442841, 8.92404, -0.3282969), (-10.442841, 9.26217, -0.46835503), (-10.442841, 9.600301, -0.3282969), (-10.442841, 9.740359, 0.0098344), (-10.442841, 9.600301, 0.3479657), (-10.429593, 9.26217, 0.50503445), (-10.429593, 8.912011, 0.35999396), (-10.429593, 8.766972, 0.0098343985), (-10.429593, 8.912011, -0.3403252), (-10.429593, 9.26217, -0.48536557), (-10.429593, 9.612329, -0.3403252), (-10.429593, 9.757369, 0.0098343985), (-10.429593, 9.612329, 0.35999396), (-9.9155445, 9.26217, 0.50503445), (-9.9155445, 8.912011, 0.35999396), (-9.9155445, 8.766972, 0.0098343985), (-9.9155445, 8.912011, -0.3403252), (-9.9155445, 9.26217, -0.48536557), (-9.9155445, 9.612329, -0.3403252), (-9.9155445, 9.757369, 0.0098343985), (-9.9155445, 9.612329, 0.35999396), (-9.896331, 9.26217, 0.53241885), (-9.896331, 8.892647, 0.3793576), (-9.896331, 8.739587, 0.0098343985), (-9.896331, 8.892647, -0.35968885), (-9.896331, 9.26217, -0.5127499), (-9.896331, 9.631693, -0.35968885), (-9.896331, 9.784754, 0.0098343985), (-9.896331, 9.631693, 0.3793576), (-9.896331, 9.26217, 0.7564026), (-9.896331, 8.734268, 0.53773785), (-9.896331, 8.515603, 0.0098343985), (-9.896331, 8.734268, -0.51806915), (-9.896331, 9.26217, -0.7367338), (-9.896331, 9.790077, -0.51806915), (-9.896331, 10.008742, 0.0098343985), (-9.896331, 9.790077, 0.53773785), (-9.878087, 9.26217, 0.77656937), (-9.878087, 9.804338, 0.5519979), (-9.878087, 10.02891, 0.0098343985), (-9.878087, 9.804338, -0.5323292), (-9.878087, 9.26217, -0.7569004), (-9.878087, 8.720008, -0.5323292), (-9.878087, 8.495436, 0.009834396), (-9.878087, 8.720008, 0.5519979), (-9.618572, 9.26217, 0.77656937), (-9.618572, 9.804338, 0.5519979), (-9.618572, 10.02891, 0.0098343985), (-9.618572, 9.804338, -0.5323292), (-9.618572, 9.26217, -0.7569004), (-9.618572, 8.720008, -0.5323292), (-9.618571, 8.495436, 0.009834362), (-9.618572, 8.720008, 0.5519979), (-9.598833, 9.26217, 0.7586194), (-9.598833, 8.7327, 0.5393053), (-9.598833, 8.513386, 0.009834364), (-9.598833, 8.7327, -0.51963675), (-9.598833, 9.26217, -0.7389505), (-9.598833, 9.791645, -0.51963675), (-9.598833, 10.010959, 0.009834395), (-9.598833, 9.791645, 0.5393053), (-9.598833, 9.26217, 0.70491636), (-9.598833, 8.770673, 0.5013317), (-9.598833, 8.56709, 0.009834377), (-9.598833, 8.770673, -0.48166293), (-9.598833, 9.26217, -0.6852474), (-9.598833, 9.753668, -0.48166293), (-9.598833, 9.957253, 0.009834384), (-9.598833, 9.753668, 0.5013317), (-9.623766, 9.26217, 0.6885129), (-9.623766, 8.782272, 0.48973274), (-9.623766, 8.583493, 0.009834381), (-9.623766, 8.782272, -0.47006398), (-9.623766, 9.26217, -0.668844), (-9.623766, 9.742068, -0.47006398), (-9.623766, 9.940849, 0.009834381), (-9.623766, 9.742068, 0.48973274), (-9.772643, 9.26217, 0.6885129), (-9.772643, 8.782272, 0.48973277), (-9.772643, 8.583493, 0.009834381), (-9.772643, 8.782272, -0.470064), (-9.772643, 9.26217, -0.668844), (-9.772643, 9.742068, -0.470064), (-9.772643, 9.940849, 0.009834381), (-9.772643, 9.742068, 0.48973277), (-9.795005, 9.26217, 0.66714346), (-9.795005, 8.797382, 0.4746223), (-9.795005, 8.604863, 0.009834383), (-9.795005, 8.797382, -0.45495355), (-9.795005, 9.26217, -0.6474745), (-9.795005, 9.726958, -0.45495355), (-9.795005, 9.91948, 0.009834383), (-9.795005, 9.726958, 0.4746223), (-9.795005, 9.26217, 0.513121), (-9.795005, 8.906294, 0.36571193), (-9.795005, 8.758886, 0.009834398), (-9.795005, 8.906294, -0.34604317), (-9.795005, 9.26217, -0.49345207), (-9.795005, 9.618048, -0.34604317), (-9.795005, 9.765459, 0.009834398), (-9.795005, 9.618048, 0.36571193), (-9.769526, 9.26217, 0.4998153), (-9.769526, 8.915702, 0.35630342), (-9.769526, 8.772192, 0.0098343985), (-9.769526, 8.915702, -0.33663467), (-9.769526, 9.26217, -0.48014644), (-9.769526, 9.608639, -0.33663467), (-9.769526, 9.752153, 0.0098343985), (-9.769526, 9.608639, 0.35630342), (-9.619463, 9.26217, 0.4998153), (-9.619463, 8.915702, 0.35630342), (-9.619463, 8.772192, 0.0098343985), (-9.619463, 8.915702, -0.33663467), (-9.619463, 9.26217, -0.48014644), (-9.619463, 9.608639, -0.33663467), (-9.619463, 9.752153, 0.0098343985), (-9.619463, 9.608639, 0.35630342), (-9.598833, 9.26217, 0.48081973), (-9.598833, 8.929134, 0.34287152), (-9.598833, 8.791188, 0.0098344), (-9.598833, 8.929134, -0.32320276), (-9.598833, 9.26217, -0.46115088), (-9.598833, 9.595208, -0.32320276), (-9.598833, 9.733158, 0.0098344), (-9.598833, 9.595208, 0.34287152), (-9.598833, 9.26217, 0.4251066), (-9.598833, 8.96853, 0.30347645), (-9.598833, 8.846901, 0.009834406), (-9.598833, 8.96853, -0.2838076), (-9.598833, 9.26217, -0.40543777), (-9.598833, 9.555815, -0.2838076), (-9.598833, 9.677445, 0.009834406), (-9.598833, 9.555815, 0.30347645), (-9.6175, 9.26217, 0.4096649), (-9.6175, 8.979449, 0.2925575), (-9.6175, 8.862343, 0.009834407), (-9.6175, 8.979449, -0.27288866), (-9.6175, 9.26217, -0.38999605), (-9.6175, 9.544896, -0.27288866), (-9.6175, 9.662004, 0.009834407), (-9.6175, 9.544896, 0.2925575), (-9.863384, 9.159465, -0.38103858), (-10.430916, 9.229569, -0.38103858), (-9.863384, 9.159465, -0.67137134), (-9.863384, 9.364886, -0.67137134), (-9.863384, 9.364886, -0.38103858), (-10.430916, 9.294782, -0.38103858), (-10.430916, 9.262176, -0.38103858), (-9.863384, 9.262176, -0.6862153), (-10.430916, 9.232766, -0.38103858), (-9.863384, 9.1695795, -0.67137134), (-10.430916, 9.291371, -0.38103858), (-9.863384, 9.353741, -0.67137134), (-9.863384, 9.364886, -0.55064905), (-10.430916, 9.294782, -0.5506493), (-10.430916, 9.291371, -0.5506493), (-10.430916, 9.262176, -0.55807126), (-10.430916, 9.232766, -0.5506493), (-10.430916, 9.229569, -0.5506493), (-9.863384, 9.159465, -0.55064905), (-10.109826, 9.364886, -0.38103858), (-10.109826, 9.364886, -0.5506493), (-10.109826, 9.364886, -0.67137134), (-10.109826, 9.353741, -0.67137134), (-10.109826, 9.262176, -0.6862153), (-10.109826, 9.1695795, -0.67137134), (-10.109826, 9.159465, -0.67137134), (-10.109826, 9.159465, -0.5506493), (-10.109826, 9.159465, -0.38103858), (-10.109826, 9.353741, -0.5506493), (-10.109826, 9.262176, -0.55807126), (-10.109826, 9.1695795, -0.5506493), (-10.116282, 9.364886, -0.38103858), (-10.116282, 9.364886, -0.5506493), (-10.116282, 9.353741, -0.5506493), (-10.116282, 9.262176, -0.55807126), (-10.116282, 9.1695795, -0.5506493), (-10.116282, 9.159465, -0.5506493), (-10.116282, 9.159465, -0.38103858), (-10.424503, 9.294782, -0.38103858), (-10.424503, 9.294782, -0.5506493), (-10.424503, 9.291371, -0.5506493), (-10.424503, 9.262176, -0.55807126), (-10.424503, 9.232766, -0.5506493), (-10.424503, 9.229569, -0.5506493), (-10.424503, 9.229569, -0.38103858), (-10.273791, 9.184745, -0.38103858), (-10.273791, 9.184745, -0.5506493), (-10.273791, 9.192362, -0.5506493), (-10.273791, 9.262176, -0.55807126), (-10.273791, 9.33128, -0.5506493), (-10.273791, 9.339605, -0.5506493), (-10.273791, 9.339605, -0.38103858), (-9.863384, 9.364886, -0.5435828), (-10.109826, 9.364886, -0.5435829), (-10.116282, 9.364886, -0.5435829), (-10.273791, 9.339605, -0.5435829), (-10.424503, 9.294782, -0.5435829), (-10.430916, 9.294782, -0.5435829), (-10.430916, 9.291371, -0.5435829), (-10.430916, 9.262176, -0.55069566), (-10.430916, 9.232766, -0.5435829), (-10.430916, 9.229569, -0.5435829), (-10.424503, 9.229569, -0.5435829), (-10.273791, 9.184745, -0.5435829), (-10.116282, 9.159465, -0.5435829), (-10.109826, 9.159465, -0.5435829), (-9.863384, 9.159465, -0.5435828), (-9.863384, 9.159465, -0.5599985), (-10.109826, 9.159465, -0.55999875), (-10.109826, 9.1695795, -0.55999875), (-10.109826, 9.262176, -0.56799555), (-10.109826, 9.353741, -0.55999875), (-10.109826, 9.364886, -0.55999875), (-9.863384, 9.364886, -0.5599985), (-10.101019, 9.159465, -0.38103858), (-10.101019, 9.159465, -0.5435829), (-10.101019, 9.159465, -0.5506493), (-10.101019, 9.159465, -0.55999875), (-9.991521, 9.159465, -0.67137134), (-9.991521, 9.1695795, -0.67137134), (-9.991521, 9.262176, -0.6862153), (-9.991521, 9.353741, -0.67137134), (-9.991521, 9.364886, -0.67137134), (-10.101019, 9.364886, -0.55999875), (-10.101019, 9.364886, -0.5506493), (-10.101019, 9.364886, -0.5435829), (-10.101019, 9.364886, -0.38103858), (-9.863384, 9.364886, 0.40070733), (-10.430916, 9.294782, 0.40070733), (-9.863384, 9.364886, 0.69104016), (-9.863384, 9.159465, 0.69104016), (-9.863384, 9.159465, 0.40070733), (-10.430916, 9.229569, 0.40070733), (-10.430916, 9.262176, 0.40070733), (-9.863384, 9.262176, 0.7058841), (-10.430916, 9.291585, 0.40070733), (-9.863384, 9.354772, 0.69104016), (-10.430916, 9.232979, 0.40070733), (-9.863384, 9.17061, 0.69104016), (-9.863384, 9.159465, 0.57031786), (-10.430916, 9.229569, 0.570318), (-10.430916, 9.232979, 0.570318), (-10.430916, 9.262176, 0.57773995), (-10.430916, 9.291585, 0.570318), (-10.430916, 9.294782, 0.570318), (-9.863384, 9.364886, 0.57031786), (-10.109826, 9.159465, 0.40070733), (-10.109826, 9.159465, 0.570318), (-10.109826, 9.159465, 0.69104016), (-10.109826, 9.17061, 0.69104016), (-10.109826, 9.262176, 0.7058841), (-10.109826, 9.354772, 0.69104016), (-10.109826, 9.364886, 0.69104016), (-10.109826, 9.364886, 0.570318), (-10.109826, 9.364886, 0.40070733), (-10.109826, 9.17061, 0.570318), (-10.109826, 9.262176, 0.57773995), (-10.109826, 9.354772, 0.570318), (-10.116282, 9.159465, 0.40070733), (-10.116282, 9.159465, 0.570318), (-10.116282, 9.17061, 0.570318), (-10.116282, 9.262176, 0.57773995), (-10.116282, 9.354772, 0.570318), (-10.116282, 9.364886, 0.570318), (-10.116282, 9.364886, 0.40070733), (-10.424503, 9.229569, 0.40070733), (-10.424503, 9.229569, 0.570318), (-10.424503, 9.232979, 0.570318), (-10.424503, 9.262176, 0.57773995), (-10.424503, 9.291585, 0.570318), (-10.424503, 9.294782, 0.570318), (-10.424503, 9.294782, 0.40070733), (-10.273791, 9.339605, 0.40070733), (-10.273791, 9.339605, 0.570318), (-10.273791, 9.331989, 0.570318), (-10.273791, 9.262176, 0.57773995), (-10.273791, 9.193071, 0.570318), (-10.273791, 9.184745, 0.570318), (-10.273791, 9.184745, 0.40070733), (-9.863384, 9.159465, 0.5632515), (-10.109826, 9.159465, 0.56325173), (-10.116282, 9.159465, 0.56325173), (-10.273791, 9.184745, 0.56325173), (-10.424503, 9.229569, 0.56325173), (-10.430916, 9.229569, 0.56325173), (-10.430916, 9.232979, 0.56325173), (-10.430916, 9.262176, 0.5703645), (-10.430916, 9.291585, 0.56325173), (-10.430916, 9.294782, 0.56325173), (-10.424503, 9.294782, 0.56325173), (-10.273791, 9.339605, 0.56325173), (-10.116282, 9.364886, 0.56325173), (-10.109826, 9.364886, 0.56325173), (-9.863384, 9.364886, 0.5632515), (-9.863384, 9.364886, 0.5796673), (-10.109826, 9.364886, 0.57966757), (-10.109826, 9.354772, 0.57966757), (-10.109826, 9.262176, 0.58766425), (-10.109826, 9.17061, 0.57966757), (-10.109826, 9.159465, 0.57966757), (-9.863384, 9.159465, 0.5796673), (-10.101019, 9.364886, 0.40070733), (-10.101019, 9.364886, 0.56325173), (-10.101019, 9.364886, 0.570318), (-10.101019, 9.364886, 0.57966757), (-9.991521, 9.364886, 0.69104016), (-9.991521, 9.354772, 0.69104016), (-9.991521, 9.262176, 0.7058841), (-9.991521, 9.17061, 0.69104016), (-9.991521, 9.159465, 0.69104016), (-10.101019, 9.159465, 0.57966757), (-10.101019, 9.159465, 0.570318), (-10.101019, 9.159465, 0.56325173), (-10.101019, 9.159465, 0.40070733), (-9.863384, 9.6530485, -0.09287655), (-10.430916, 9.6530485, -0.022771787), (-9.863384, 9.943381, -0.09287655), (-9.863384, 9.943381, 0.11254534), (-9.863384, 9.6530485, 0.11254534), (-10.430916, 9.6530485, 0.04244059), (-10.430916, 9.6530485, 0.0098343985), (-9.863384, 9.958225, 0.0098343985), (-10.430916, 9.6530485, -0.019575085), (-9.863384, 9.943381, -0.08276162), (-10.430916, 9.6530485, 0.03903077), (-9.863384, 9.943381, 0.10139948), (-9.863384, 9.822659, 0.11254534), (-10.430916, 9.822659, 0.04244059), (-10.430916, 9.822659, 0.03903077), (-10.430916, 9.830081, 0.0098343985), (-10.430916, 9.822659, -0.019575085), (-10.430916, 9.822659, -0.022771787), (-9.863384, 9.822659, -0.09287655), (-10.109826, 9.6530485, 0.11254534), (-10.109826, 9.822659, 0.11254534), (-10.109826, 9.943381, 0.11254534), (-10.109826, 9.943381, 0.10139948), (-10.109826, 9.958225, 0.0098343985), (-10.109826, 9.943381, -0.08276162), (-10.109826, 9.943381, -0.09287655), (-10.109826, 9.822659, -0.09287655), (-10.109826, 9.6530485, -0.09287655), (-10.109826, 9.822659, 0.10139948), (-10.109826, 9.830081, 0.0098343985), (-10.109826, 9.822659, -0.08276162), (-10.116282, 9.6530485, 0.11254534), (-10.116282, 9.822659, 0.11254534), (-10.116282, 9.822659, 0.10139948), (-10.116282, 9.830081, 0.0098343985), (-10.116282, 9.822659, -0.082761616), (-10.116282, 9.822659, -0.09287655), (-10.116282, 9.6530485, -0.09287655), (-10.424503, 9.6530485, 0.04244059), (-10.424503, 9.822659, 0.04244059), (-10.424503, 9.822659, 0.03903077), (-10.424503, 9.830081, 0.0098343985), (-10.424503, 9.822659, -0.019575085), (-10.424503, 9.822659, -0.022771787), (-10.424503, 9.6530485, -0.022771787), (-10.273791, 9.6530485, -0.067596056), (-10.273791, 9.822659, -0.067596056), (-10.273791, 9.822659, -0.059979215), (-10.273791, 9.830081, 0.0098343985), (-10.273791, 9.822659, 0.07893836), (-10.273791, 9.822659, 0.08726484), (-10.273791, 9.6530485, 0.08726484), (-9.863384, 9.815593, 0.11254534), (-10.109826, 9.815593, 0.11254534), (-10.116282, 9.815593, 0.11254534), (-10.273791, 9.815593, 0.08726484), (-10.424503, 9.815593, 0.04244059), (-10.430916, 9.815593, 0.04244059), (-10.430916, 9.815593, 0.03903077), (-10.430916, 9.822705, 0.0098343985), (-10.430916, 9.815593, -0.019575085), (-10.430916, 9.815593, -0.022771787), (-10.424503, 9.815593, -0.022771787), (-10.273791, 9.815593, -0.067596056), (-10.116282, 9.815593, -0.09287655), (-10.109826, 9.815593, -0.09287655), (-9.863384, 9.815593, -0.09287655), (-9.863384, 9.832008, -0.09287655), (-10.109826, 9.832008, -0.09287655), (-10.109826, 9.832008, -0.08276162), (-10.109826, 9.840005, 0.0098343985), (-10.109826, 9.832008, 0.10139948), (-10.109826, 9.832008, 0.11254534), (-9.863384, 9.832008, 0.11254534), (-10.101019, 9.6530485, -0.09287655), (-10.101019, 9.815593, -0.09287655), (-10.101019, 9.822659, -0.09287655), (-10.101019, 9.832008, -0.09287655), (-9.991521, 9.943381, -0.09287655), (-9.991521, 9.943381, -0.08276162), (-9.991521, 9.958225, 0.0098343985), (-9.991521, 9.943381, 0.10139948), (-9.991521, 9.943381, 0.11254534), (-10.101019, 9.832008, 0.11254534), (-10.101019, 9.822659, 0.11254534), (-10.101019, 9.815593, 0.11254534), (-10.101019, 9.6530485, 0.11254534)]
                                        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.375, 0.5), (0.375, 0.75), (0.625, 0.75), (0.875, 0), (0.75, 0), (0.375, 0.375), (0.6373099, 0), (0.375, 0.26230994), (0.8614354, 0), (0.375, 0.4864354), (0.375, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.375, 0.125), (0.483559, 0.75), (0.483559, 0.625), (0.483559, 0.5), (0.483559, 0.4864354), (0.483559, 0.375), (0.483559, 0.26230994), (0.483559, 0.25), (0.483559, 0.125), (0.483559, 0), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0.48640287, 0.75), (0.48640287, 0.625), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (1, 0.020106256), (0, 0.020106256), (0.48640287, 0.125), (1, 0.020106256), (0.48640287, 0), (0.6221752, 0.75), (0.6221752, 0.625), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (1, 0.9800284), (0, 0.9800284), (0.6221752, 0.125), (1, 0.9800284), (0.6221752, 0), (0.55578625, 0), (0.55578625, 0.125), (1, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0.625), (0, 0.5106528), (0.55578625, 0.75), (0.375, 0.6302078), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.55578625, 0.6302078), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.875, 0.119792245), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.6373099, 0.119792245), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.55578625, 0.119792245), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.375, 0.119792245), (0.375, 0.13468081), (1, 0.9225536), (0.483559, 0.13468081), (1, 0.9225536), (0, 0.9225536), (1, 0.9225536), (0, 0.9225536), (1, 0.9225536), (0, 0.9225536), (0, 0.9225536), (0.483559, 0.61531925), (0.375, 0.61531925), (0.4796792, 0), (0.4796792, 0.119792245), (0.4796792, 0.125), (0.4796792, 0.13468081), (0.4796792, 0.25), (0.4796792, 0.26230994), (0.4796792, 0.375), (0.4796792, 0.4864354), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.4796792, 0.625), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.3125), (0.40625, 0.3125), (0.40625, 0.3355541), (0.375, 0.3355541), (0.4375, 0.3125), (0.43750003, 0.3355541), (0.46875, 0.3125), (0.46875003, 0.3355541), (0.5, 0.3125), (0.5, 0.3355541), (0.53125, 0.3125), (0.53125, 0.3355541), (0.5625, 0.3125), (0.5625, 0.3355541), (0.59375, 0.3125), (0.59375, 0.3355541), (0.625, 0.3125), (0.625, 0.3355541), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.074269295), (0, 0.074269295), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.035155628), (0, 0.035155628), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.17836475), (0, 0.17836475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.010034475), (0, 0.010034475), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.17128856), (0, 0.17128856), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.10516359), (0, 0.10516359), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.07051294), (0, 0.07051294), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.11399253), (0, 0.11399253), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (0, 0), (1, 0), (1, 0.18628326), (0, 0.18628326), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (1, 0.9778825), (0, 0.9778825), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.83484787), (1, 0.83484787), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.9757582), (1, 0.9757582), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0, 0.8991496), (1, 0.8991496), (1, 1), (0, 1), (0.40625, 0.6634969), (0.375, 0.6634969), (0.625, 0.6634969), (0.59375, 0.6634969), (0.5625, 0.6634969), (0.53125, 0.6634969), (0.5, 0.6634969), (0.46875, 0.6634969), (0.4375, 0.6634969), (0.40625, 0.68843985), (0.375, 0.68843985), (0.625, 0.68843985), (0.59375, 0.68843985), (0.5625, 0.68843985), (0.53125, 0.68843985), (0.5, 0.68843985), (0.46875, 0.68843985), (0.4375, 0.68843985), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.79615456), (1, 0.79615456), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.8729016), (1, 0.8729016), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.88675326), (1, 0.88675326), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.8701172), (1, 0.8701172), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (0, 0.78929037), (1, 0.78929037), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925), (0.6221752, 0), (0.625, 0), (0.625, 0.119792245), (0.6221752, 0.119792245), (0.6221752, 0.6302078), (0.625, 0.6302078), (0.625, 0.75), (0.6221752, 0.75), (0.6373099, 0), (0.6373099, 0.119792245), (0.75, 0), (0.8614354, 0), (0.8614354, 0.119792245), (0.75, 0.119792245), (0.875, 0), (0.875, 0.119792245), (0.375, 0.6302078), (0.4796792, 0.6302078), (0.4796792, 0.75), (0.375, 0.75), (0.375, 0.5), (0.4796792, 0.5), (0.4796792, 0.61531925), (0.375, 0.61531925), (0.375, 0.4864354), (0.4796792, 0.4864354), (0.375, 0.375), (0.4796792, 0.375), (0.375, 0.26230994), (0.4796792, 0.26230994), (0.375, 0.25), (0.4796792, 0.25), (0.375, 0.13468081), (0.4796792, 0.13468081), (0.375, 0), (0.4796792, 0), (0.4796792, 0.119792245), (0.375, 0.119792245), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0), (1, 0), (1, 0.9225536), (0, 0.9225536), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0, 0.9800284), (1, 0.9800284), (1, 1), (0, 1), (0.483559, 0.6302078), (0.48640287, 0.6302078), (0.48640287, 0.75), (0.483559, 0.75), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0, 0), (1, 0), (1, 0.020106256), (0, 0.020106256), (0.483559, 0), (0.48640287, 0), (0.48640287, 0.119792245), (0.483559, 0.119792245), (0.55578625, 0.6302078), (0.55578625, 0.75), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (1, 0.5106528), (0, 0.5106528), (0.55578625, 0), (0.55578625, 0.119792245), (0.375, 0.625), (0.4796792, 0.625), (0.483559, 0.625), (0.48640287, 0.625), (0.55578625, 0.625), (0.6221752, 0.625), (0.625, 0.625), (0.875, 0.125), (0.8614354, 0.125), (0.75, 0.125), (0.6373099, 0.125), (0.625, 0.125), (0.6221752, 0.125), (0.55578625, 0.125), (0.48640287, 0.125), (0.483559, 0.125), (0.4796792, 0.125), (0.375, 0.125), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (0.483559, 0.13468081), (0.483559, 0.25), (0.483559, 0.26230994), (0.483559, 0.375), (0.483559, 0.4864354), (0.483559, 0.5), (0.483559, 0.61531925)] (
                                            customData = {
                                                dictionary Maya = {
                                                    token name = "map1"
                                                }
                                            }
                                            interpolation = "faceVarying"
                                        )
                                        int[] primvars:st:indices = [85, 1, 108, 109, 102, 103, 5, 74, 1, 9, 107, 108, 7, 11, 105, 106, 9, 7, 106, 107, 11, 6, 104, 105, 98, 137, 138, 4, 3, 134, 135, 125, 12, 133, 134, 3, 8, 132, 133, 12, 10, 131, 132, 8, 2, 130, 131, 10, 114, 129, 130, 2, 0, 126, 127, 113, 30, 31, 121, 123, 34, 35, 119, 122, 38, 39, 117, 120, 42, 43, 115, 118, 76, 77, 48, 49, 78, 79, 52, 53, 80, 81, 56, 57, 82, 84, 60, 61, 99, 100, 62, 21, 46, 47, 65, 64, 50, 51, 67, 66, 54, 55, 69, 68, 58, 59, 72, 70, 29, 73, 111, 112, 100, 101, 97, 62, 64, 65, 93, 96, 66, 67, 91, 94, 68, 69, 89, 92, 70, 72, 88, 90, 73, 86, 110, 111, 86, 85, 109, 110, 90, 88, 84, 82, 92, 89, 81, 80, 94, 91, 79, 78, 96, 93, 77, 76, 97, 101, 102, 74, 13, 136, 137, 98, 22, 63, 100, 99, 63, 95, 101, 100, 102, 101, 95, 75, 75, 14, 103, 102, 105, 104, 15, 16, 106, 105, 16, 17, 107, 106, 17, 18, 108, 107, 18, 19, 109, 108, 19, 83, 110, 109, 83, 87, 111, 110, 87, 71, 112, 111, 71, 28, 113, 127, 128, 20, 20, 128, 129, 114, 118, 115, 44, 45, 120, 117, 40, 41, 122, 119, 36, 37, 123, 121, 32, 33, 125, 135, 136, 13, 126, 29, 112, 127, 128, 127, 112, 28, 129, 128, 28, 116, 130, 129, 116, 27, 131, 130, 27, 26, 132, 131, 26, 25, 133, 132, 25, 24, 134, 133, 24, 23, 135, 134, 23, 124, 136, 135, 124, 22, 137, 136, 22, 99, 138, 137, 99, 21, 139, 140, 141, 142, 140, 143, 144, 141, 143, 145, 146, 144, 145, 147, 148, 146, 147, 149, 150, 148, 149, 151, 152, 150, 151, 153, 154, 152, 153, 155, 156, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 260, 259, 445, 446, 264, 263, 447, 448, 268, 267, 449, 450, 272, 271, 451, 452, 276, 275, 453, 454, 280, 279, 455, 456, 284, 283, 457, 458, 256, 255, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 228, 227, 462, 461, 232, 231, 466, 465, 236, 235, 470, 469, 240, 239, 474, 473, 244, 243, 478, 477, 248, 247, 482, 481, 252, 251, 486, 485, 224, 223, 490, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 196, 195, 494, 493, 200, 199, 498, 497, 204, 203, 502, 501, 208, 207, 506, 505, 212, 211, 510, 509, 216, 215, 514, 513, 220, 219, 518, 517, 192, 191, 522, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 164, 163, 526, 525, 168, 167, 530, 529, 172, 171, 534, 533, 176, 175, 538, 537, 180, 179, 542, 541, 184, 183, 546, 545, 188, 187, 550, 549, 160, 159, 554, 553, 142, 141, 557, 558, 154, 156, 559, 560, 152, 154, 560, 561, 150, 152, 561, 562, 148, 150, 562, 563, 146, 148, 563, 564, 144, 146, 564, 565, 141, 144, 565, 557, 558, 557, 566, 567, 560, 559, 568, 569, 561, 560, 569, 570, 562, 561, 570, 571, 563, 562, 571, 572, 564, 563, 572, 573, 565, 564, 573, 574, 557, 565, 574, 566, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 420, 419, 576, 575, 424, 423, 580, 579, 428, 427, 584, 583, 432, 431, 588, 587, 436, 435, 592, 591, 440, 439, 596, 595, 444, 443, 600, 599, 416, 415, 604, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 388, 387, 608, 607, 392, 391, 612, 611, 396, 395, 616, 615, 400, 399, 620, 619, 404, 403, 624, 623, 408, 407, 628, 627, 412, 411, 632, 631, 384, 383, 636, 635, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 356, 355, 640, 639, 360, 359, 644, 643, 364, 363, 648, 647, 368, 367, 652, 651, 372, 371, 656, 655, 376, 375, 660, 659, 380, 379, 664, 663, 352, 351, 668, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 324, 323, 672, 671, 328, 327, 676, 675, 332, 331, 680, 679, 336, 335, 684, 683, 340, 339, 688, 687, 344, 343, 692, 691, 348, 347, 696, 695, 320, 319, 700, 699, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 292, 291, 704, 703, 296, 295, 708, 707, 300, 299, 712, 711, 304, 303, 716, 715, 308, 307, 720, 719, 312, 311, 724, 723, 316, 315, 728, 727, 288, 287, 732, 731, 446, 445, 735, 736, 448, 447, 737, 738, 450, 449, 739, 740, 452, 451, 741, 742, 454, 453, 743, 744, 456, 455, 745, 746, 458, 457, 747, 748, 460, 459, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 752, 759, 760, 753, 761, 762, 763, 764, 759, 761, 764, 760, 762, 765, 766, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 772, 771, 777, 778, 776, 775, 779, 780, 778, 777, 781, 782, 780, 779, 783, 784, 782, 781, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 822, 845, 846, 823, 828, 827, 847, 848, 832, 831, 849, 850, 836, 835, 851, 852, 840, 839, 853, 854, 842, 855, 856, 843, 855, 751, 754, 856, 854, 853, 818, 817, 852, 851, 814, 813, 850, 849, 810, 809, 848, 847, 806, 805, 846, 845, 755, 758, 857, 858, 768, 767, 859, 860, 822, 821, 860, 861, 845, 822, 755, 845, 861, 862, 862, 863, 756, 755, 763, 766, 864, 865, 764, 763, 865, 866, 760, 764, 866, 867, 753, 760, 867, 868, 754, 753, 868, 869, 856, 754, 869, 870, 843, 856, 870, 871, 844, 843, 871, 872, 788, 787, 873, 874, 874, 873, 784, 783, 804, 803, 875, 876, 800, 799, 877, 878, 796, 795, 879, 880, 792, 791, 881, 882, 774, 773, 858, 857, 786, 841, 844, 787, 873, 787, 844, 872, 784, 873, 872, 883, 782, 784, 883, 884, 780, 782, 884, 885, 778, 780, 885, 886, 776, 778, 886, 887, 772, 776, 887, 888, 773, 772, 888, 889, 858, 773, 889, 859, 768, 858, 859, 821, 769, 768, 821, 824, 890, 891, 892, 893, 894, 895, 896, 897, 891, 898, 899, 892, 900, 901, 902, 903, 898, 900, 903, 899, 901, 904, 905, 902, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 911, 910, 916, 917, 915, 914, 918, 919, 917, 916, 920, 921, 919, 918, 922, 923, 921, 920, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 961, 984, 985, 962, 967, 966, 986, 987, 971, 970, 988, 989, 975, 974, 990, 991, 979, 978, 992, 993, 981, 994, 995, 982, 994, 890, 893, 995, 993, 992, 957, 956, 991, 990, 953, 952, 989, 988, 949, 948, 987, 986, 945, 944, 985, 984, 894, 897, 996, 997, 907, 906, 998, 999, 961, 960, 999, 1000, 984, 961, 894, 984, 1000, 1001, 1001, 1002, 895, 894, 902, 905, 1003, 1004, 903, 902, 1004, 1005, 899, 903, 1005, 1006, 892, 899, 1006, 1007, 893, 892, 1007, 1008, 995, 893, 1008, 1009, 982, 995, 1009, 1010, 983, 982, 1010, 1011, 927, 926, 1012, 1013, 1013, 1012, 923, 922, 943, 942, 1014, 1015, 939, 938, 1016, 1017, 935, 934, 1018, 1019, 931, 930, 1020, 1021, 913, 912, 997, 996, 925, 980, 983, 926, 1012, 926, 983, 1011, 923, 1012, 1011, 1022, 921, 923, 1022, 1023, 919, 921, 1023, 1024, 917, 919, 1024, 1025, 915, 917, 1025, 1026, 911, 915, 1026, 1027, 912, 911, 1027, 1028, 997, 912, 1028, 998, 907, 997, 998, 960, 908, 907, 960, 963, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1030, 1037, 1038, 1031, 1039, 1040, 1041, 1042, 1037, 1039, 1042, 1038, 1040, 1043, 1044, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1050, 1049, 1055, 1056, 1054, 1053, 1057, 1058, 1056, 1055, 1059, 1060, 1058, 1057, 1061, 1062, 1060, 1059, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1100, 1123, 1124, 1101, 1106, 1105, 1125, 1126, 1110, 1109, 1127, 1128, 1114, 1113, 1129, 1130, 1118, 1117, 1131, 1132, 1120, 1133, 1134, 1121, 1133, 1029, 1032, 1134, 1132, 1131, 1096, 1095, 1130, 1129, 1092, 1091, 1128, 1127, 1088, 1087, 1126, 1125, 1084, 1083, 1124, 1123, 1033, 1036, 1135, 1136, 1046, 1045, 1137, 1138, 1100, 1099, 1138, 1139, 1123, 1100, 1033, 1123, 1139, 1140, 1140, 1141, 1034, 1033, 1041, 1044, 1142, 1143, 1042, 1041, 1143, 1144, 1038, 1042, 1144, 1145, 1031, 1038, 1145, 1146, 1032, 1031, 1146, 1147, 1134, 1032, 1147, 1148, 1121, 1134, 1148, 1149, 1122, 1121, 1149, 1150, 1066, 1065, 1151, 1152, 1152, 1151, 1062, 1061, 1082, 1081, 1153, 1154, 1078, 1077, 1155, 1156, 1074, 1073, 1157, 1158, 1070, 1069, 1159, 1160, 1052, 1051, 1136, 1135, 1064, 1119, 1122, 1065, 1151, 1065, 1122, 1150, 1062, 1151, 1150, 1161, 1060, 1062, 1161, 1162, 1058, 1060, 1162, 1163, 1056, 1058, 1163, 1164, 1054, 1056, 1164, 1165, 1050, 1054, 1165, 1166, 1051, 1050, 1166, 1167, 1136, 1051, 1167, 1137, 1046, 1136, 1137, 1099, 1047, 1046, 1099, 1102]
                                        float3 xformOp:translate:pivot = (-10.020837, 9.262173, 0.00983449)
                                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                    }

                                    def Xform "Wall_e_RIG_v001_black_pin_3l_friction_bridge_005_mesh"
                                    {
                                        double3 xformOp:translate = (-11.200074158980756, 8.903097531318664, -0.36177892088889696)
                                        float3 xformOp:translate:pivot = (1.1991435, 0.35907802, 0.35883915)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_arm_extend_grp"
                                {
                                    float3 xformOp:rotateXYZ.timeSamples = {
                                        1: (-4.1823686e-22, 0, 0),
                                    }
                                    float3 xformOp:scale.timeSamples = {
                                        1: (1, 1, 1),
                                    }
                                    double3 xformOp:translate.timeSamples = {
                                        1: (-8.881784197001252e-16, 0, 0),
                                    }
                                    float3 xformOp:translate:pivot = (-7.1949387, 9.263097, 0.0034410655)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                    def Xform "Wall_e_RIG_v001_r_arm_extend_grp_"
                                    {
                                        def Xform "Wall_e_RIG_v001_darkGrey_axle_and_bar_connector_perpendicular_002_mesh"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 180)
                                            double3 xformOp:translate = (-12.000082582235336, 10.423097408418982, -0.39655894637107514)
                                            float3 xformOp:translate:rotatePivot = (0.39997885, 0.8178586, 0.39999387)
                                            float3 xformOp:translate:rotatePivotTranslate = (-0.7999577, -1.6357172, 0)
                                            float3 xformOp:translate:scalePivot = (0.39997885, 0.8178586, 0.39999387)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                        }

                                        def Mesh "Wall_e_RIG_v001_beige_axle_3_stud_002_mesh" (
                                            prepend apiSchemas = ["MaterialBindingAPI"]
                                        )
                                        {
                                            uniform bool doubleSided = 1
                                            float3[] extent = [(-13.038353, 8.906764, -0.35289192), (-7.1949387, 9.619431, 0.359774)]
                                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                            int[] faceVertexIndices = [60, 61, 33, 16, 50, 51, 232, 233, 31, 46, 47, 8, 28, 37, 32, 17, 29, 206, 207, 10, 40, 49, 45, 12, 43, 44, 36, 18, 38, 217, 218, 14, 64, 60, 16, 21, 27, 28, 17, 22, 42, 43, 18, 23, 54, 50, 233, 234, 62, 192, 161, 2, 33, 162, 163, 16, 20, 179, 180, 34, 52, 182, 243, 244, 47, 168, 169, 8, 8, 169, 170, 31, 30, 188, 189, 11, 207, 208, 191, 10, 4, 173, 174, 48, 12, 171, 172, 40, 6, 183, 215, 216, 39, 186, 187, 15, 16, 163, 164, 21, 0, 165, 166, 63, 25, 178, 179, 20, 235, 236, 176, 53, 63, 64, 21, 0, 26, 27, 22, 9, 41, 42, 23, 13, 53, 54, 234, 235, 1, 177, 178, 25, 21, 164, 165, 0, 13, 23, 27, 26, 23, 18, 28, 27, 18, 36, 37, 28, 14, 218, 206, 29, 15, 187, 188, 30, 31, 170, 171, 12, 12, 45, 46, 31, 61, 62, 2, 33, 2, 161, 162, 33, 34, 180, 181, 3, 244, 232, 51, 52, 36, 44, 38, 14, 37, 36, 14, 29, 32, 37, 29, 10, 6, 216, 217, 38, 7, 185, 186, 39, 40, 172, 173, 4, 4, 48, 49, 40, 5, 24, 42, 41, 24, 19, 43, 42, 19, 35, 44, 43, 38, 44, 35, 6, 45, 231, 219, 46, 47, 46, 219, 220, 220, 221, 168, 47, 48, 174, 228, 229, 49, 48, 229, 230, 45, 49, 230, 231, 20, 34, 51, 50, 52, 51, 34, 3, 3, 181, 182, 52, 53, 176, 177, 1, 1, 25, 54, 53, 25, 20, 50, 54, 55, 15, 30, 56, 57, 56, 30, 11, 11, 189, 190, 57, 58, 184, 185, 7, 59, 58, 7, 39, 55, 59, 39, 15, 17, 32, 193, 194, 32, 10, 205, 193, 10, 191, 204, 205, 196, 197, 167, 9, 9, 22, 195, 196, 22, 17, 194, 195, 97, 65, 66, 98, 99, 98, 66, 67, 100, 99, 67, 68, 101, 100, 68, 69, 102, 101, 69, 70, 103, 210, 211, 71, 202, 103, 71, 201, 105, 104, 72, 73, 106, 105, 73, 74, 107, 106, 74, 75, 108, 107, 75, 76, 109, 108, 76, 77, 110, 109, 77, 78, 111, 199, 200, 79, 112, 223, 224, 80, 113, 112, 80, 81, 114, 113, 81, 82, 115, 114, 82, 83, 116, 115, 83, 84, 117, 116, 84, 85, 118, 117, 85, 86, 226, 118, 86, 225, 120, 238, 239, 88, 121, 120, 88, 89, 122, 121, 89, 90, 123, 122, 90, 91, 124, 123, 91, 92, 125, 124, 92, 93, 126, 125, 93, 94, 241, 126, 94, 240, 213, 127, 95, 212, 97, 128, 96, 65, 129, 97, 98, 130, 131, 130, 98, 99, 132, 131, 99, 100, 133, 132, 100, 101, 134, 133, 101, 102, 135, 209, 210, 103, 203, 135, 103, 202, 137, 136, 104, 105, 138, 137, 105, 106, 139, 138, 106, 107, 140, 139, 107, 108, 141, 140, 108, 109, 142, 141, 109, 110, 143, 198, 199, 111, 144, 222, 223, 112, 145, 144, 112, 113, 146, 145, 113, 114, 147, 146, 114, 115, 148, 147, 115, 116, 149, 148, 116, 117, 150, 149, 117, 118, 227, 150, 118, 226, 152, 237, 238, 120, 153, 152, 120, 121, 154, 153, 121, 122, 155, 154, 122, 123, 156, 155, 123, 124, 157, 156, 124, 125, 158, 157, 125, 126, 242, 158, 126, 241, 214, 159, 127, 213, 129, 160, 128, 97, 161, 581, 582, 162, 163, 162, 582, 583, 164, 163, 583, 584, 165, 164, 584, 585, 166, 165, 585, 586, 167, 197, 587, 588, 168, 221, 589, 590, 169, 168, 590, 551, 170, 169, 551, 552, 171, 170, 552, 553, 172, 171, 553, 554, 173, 172, 554, 555, 174, 173, 555, 556, 228, 174, 556, 557, 176, 236, 559, 560, 177, 176, 560, 561, 178, 177, 561, 562, 179, 178, 562, 563, 180, 179, 563, 564, 181, 180, 564, 565, 182, 181, 565, 566, 243, 182, 566, 567, 215, 183, 568, 569, 185, 184, 570, 571, 186, 185, 571, 572, 187, 186, 572, 573, 188, 187, 573, 574, 189, 188, 574, 575, 190, 189, 575, 576, 191, 208, 577, 578, 204, 191, 578, 579, 161, 192, 580, 581, 194, 193, 61, 60, 195, 194, 60, 64, 196, 195, 64, 63, 63, 166, 197, 196, 587, 197, 166, 586, 199, 198, 142, 110, 200, 199, 110, 78, 104, 202, 201, 72, 136, 203, 202, 104, 192, 204, 579, 580, 205, 204, 192, 62, 193, 205, 62, 61, 206, 56, 57, 207, 57, 190, 208, 207, 577, 208, 190, 576, 210, 209, 134, 102, 211, 210, 102, 70, 128, 213, 212, 96, 160, 214, 213, 128, 184, 215, 569, 570, 216, 215, 184, 58, 217, 216, 58, 59, 218, 217, 59, 55, 206, 218, 55, 56, 220, 219, 26, 9, 9, 167, 221, 220, 589, 221, 167, 588, 223, 222, 143, 111, 224, 223, 111, 79, 119, 226, 225, 87, 151, 227, 226, 119, 175, 228, 557, 558, 229, 228, 175, 5, 230, 229, 5, 41, 231, 230, 41, 13, 219, 231, 13, 26, 233, 232, 35, 19, 234, 233, 19, 24, 235, 234, 24, 5, 5, 175, 236, 235, 559, 236, 175, 558, 238, 237, 151, 119, 239, 238, 119, 87, 127, 241, 240, 95, 159, 242, 241, 127, 183, 243, 567, 568, 244, 243, 183, 6, 35, 232, 244, 6, 245, 246, 312, 313, 246, 247, 311, 312, 247, 248, 318, 311, 248, 249, 317, 318, 249, 250, 316, 317, 250, 251, 315, 316, 251, 252, 314, 315, 252, 245, 313, 314, 246, 245, 261, 262, 247, 246, 262, 263, 248, 247, 263, 264, 249, 248, 264, 265, 250, 249, 265, 266, 251, 250, 266, 267, 252, 251, 267, 268, 245, 252, 268, 261, 269, 262, 261, 268, 269, 264, 263, 262, 269, 266, 265, 264, 269, 268, 267, 266, 253, 254, 328, 329, 254, 255, 327, 328, 255, 256, 334, 327, 256, 257, 333, 334, 257, 258, 332, 333, 258, 259, 331, 332, 259, 260, 330, 331, 260, 253, 329, 330, 270, 271, 344, 345, 271, 272, 343, 344, 272, 273, 350, 343, 273, 274, 349, 350, 274, 275, 348, 349, 275, 276, 347, 348, 276, 277, 346, 347, 277, 270, 345, 346, 278, 279, 360, 361, 279, 280, 359, 360, 280, 281, 366, 359, 281, 282, 365, 366, 282, 283, 364, 365, 283, 284, 363, 364, 284, 285, 362, 363, 285, 278, 361, 362, 286, 287, 376, 377, 287, 288, 375, 376, 288, 289, 382, 375, 289, 290, 381, 382, 290, 291, 380, 381, 291, 292, 379, 380, 292, 293, 378, 379, 293, 286, 377, 378, 294, 295, 303, 302, 295, 296, 304, 303, 296, 297, 305, 304, 297, 298, 306, 305, 298, 299, 307, 306, 299, 300, 308, 307, 300, 301, 309, 308, 301, 294, 302, 309, 310, 303, 304, 305, 310, 305, 306, 307, 310, 307, 308, 309, 310, 309, 302, 303, 312, 311, 319, 320, 313, 312, 320, 321, 314, 313, 321, 322, 315, 314, 322, 323, 316, 315, 323, 324, 317, 316, 324, 325, 318, 317, 325, 326, 311, 318, 326, 319, 320, 319, 255, 254, 321, 320, 254, 253, 322, 321, 253, 260, 323, 322, 260, 259, 324, 323, 259, 258, 325, 324, 258, 257, 326, 325, 257, 256, 319, 326, 256, 255, 328, 327, 335, 336, 329, 328, 336, 337, 330, 329, 337, 338, 331, 330, 338, 339, 332, 331, 339, 340, 333, 332, 340, 341, 334, 333, 341, 342, 327, 334, 342, 335, 336, 335, 272, 271, 337, 336, 271, 270, 338, 337, 270, 277, 339, 338, 277, 276, 340, 339, 276, 275, 341, 340, 275, 274, 342, 341, 274, 273, 335, 342, 273, 272, 344, 343, 351, 352, 345, 344, 352, 353, 346, 345, 353, 354, 347, 346, 354, 355, 348, 347, 355, 356, 349, 348, 356, 357, 350, 349, 357, 358, 343, 350, 358, 351, 352, 351, 280, 279, 353, 352, 279, 278, 354, 353, 278, 285, 355, 354, 285, 284, 356, 355, 284, 283, 357, 356, 283, 282, 358, 357, 282, 281, 351, 358, 281, 280, 360, 359, 367, 368, 361, 360, 368, 369, 362, 361, 369, 370, 363, 362, 370, 371, 364, 363, 371, 372, 365, 364, 372, 373, 366, 365, 373, 374, 359, 366, 374, 367, 368, 367, 288, 287, 369, 368, 287, 286, 370, 369, 286, 293, 371, 370, 293, 292, 372, 371, 292, 291, 373, 372, 291, 290, 374, 373, 290, 289, 367, 374, 289, 288, 376, 375, 383, 384, 377, 376, 384, 385, 378, 377, 385, 386, 379, 378, 386, 387, 380, 379, 387, 388, 381, 380, 388, 389, 382, 381, 389, 390, 375, 382, 390, 383, 384, 383, 296, 295, 385, 384, 295, 294, 386, 385, 294, 301, 387, 386, 301, 300, 388, 387, 300, 299, 389, 388, 299, 298, 390, 389, 298, 297, 383, 390, 297, 296, 392, 391, 145, 146, 393, 392, 146, 147, 394, 393, 147, 148, 395, 394, 148, 149, 396, 395, 149, 150, 397, 396, 150, 227, 398, 397, 227, 151, 237, 399, 398, 151, 400, 399, 237, 152, 401, 400, 152, 153, 402, 401, 153, 154, 403, 402, 154, 155, 404, 403, 155, 156, 405, 404, 156, 157, 406, 405, 157, 158, 407, 406, 158, 242, 408, 407, 242, 159, 409, 408, 159, 214, 410, 409, 214, 160, 411, 410, 160, 129, 412, 411, 129, 130, 413, 412, 130, 131, 414, 413, 131, 132, 415, 414, 132, 133, 416, 415, 133, 134, 209, 417, 416, 134, 418, 417, 209, 135, 419, 418, 135, 203, 420, 419, 203, 136, 421, 420, 136, 137, 422, 421, 137, 138, 423, 422, 138, 139, 424, 423, 139, 140, 425, 424, 140, 141, 426, 425, 141, 142, 198, 427, 426, 142, 428, 427, 198, 143, 222, 429, 428, 143, 430, 429, 222, 144, 391, 430, 144, 145, 432, 431, 391, 392, 433, 432, 392, 393, 434, 433, 393, 394, 435, 434, 394, 395, 436, 435, 395, 396, 437, 436, 396, 397, 438, 437, 397, 398, 399, 439, 438, 398, 440, 439, 399, 400, 441, 440, 400, 401, 442, 441, 401, 402, 443, 442, 402, 403, 444, 443, 403, 404, 445, 444, 404, 405, 446, 445, 405, 406, 447, 446, 406, 407, 448, 447, 407, 408, 449, 448, 408, 409, 450, 449, 409, 410, 451, 450, 410, 411, 452, 451, 411, 412, 453, 452, 412, 413, 454, 453, 413, 414, 455, 454, 414, 415, 456, 455, 415, 416, 417, 457, 456, 416, 458, 457, 417, 418, 459, 458, 418, 419, 460, 459, 419, 420, 461, 460, 420, 421, 462, 461, 421, 422, 463, 462, 422, 423, 464, 463, 423, 424, 465, 464, 424, 425, 466, 465, 425, 426, 427, 467, 466, 426, 468, 467, 427, 428, 429, 469, 468, 428, 470, 469, 429, 430, 431, 470, 430, 391, 472, 471, 431, 432, 473, 472, 432, 433, 474, 473, 433, 434, 475, 474, 434, 435, 476, 475, 435, 436, 477, 476, 436, 437, 478, 477, 437, 438, 439, 479, 478, 438, 480, 479, 439, 440, 481, 480, 440, 441, 482, 481, 441, 442, 483, 482, 442, 443, 484, 483, 443, 444, 485, 484, 444, 445, 486, 485, 445, 446, 487, 486, 446, 447, 488, 487, 447, 448, 489, 488, 448, 449, 490, 489, 449, 450, 491, 490, 450, 451, 492, 491, 451, 452, 493, 492, 452, 453, 494, 493, 453, 454, 495, 494, 454, 455, 496, 495, 455, 456, 457, 497, 496, 456, 498, 497, 457, 458, 499, 498, 458, 459, 500, 499, 459, 460, 501, 500, 460, 461, 502, 501, 461, 462, 503, 502, 462, 463, 504, 503, 463, 464, 505, 504, 464, 465, 506, 505, 465, 466, 467, 507, 506, 466, 508, 507, 467, 468, 469, 509, 508, 468, 510, 509, 469, 470, 471, 510, 470, 431, 512, 511, 471, 472, 513, 512, 472, 473, 514, 513, 473, 474, 515, 514, 474, 475, 516, 515, 475, 476, 517, 516, 476, 477, 518, 517, 477, 478, 479, 519, 518, 478, 520, 519, 479, 480, 521, 520, 480, 481, 522, 521, 481, 482, 523, 522, 482, 483, 524, 523, 483, 484, 525, 524, 484, 485, 526, 525, 485, 486, 527, 526, 486, 487, 528, 527, 487, 488, 529, 528, 488, 489, 530, 529, 489, 490, 531, 530, 490, 491, 532, 531, 491, 492, 533, 532, 492, 493, 534, 533, 493, 494, 535, 534, 494, 495, 536, 535, 495, 496, 497, 537, 536, 496, 538, 537, 497, 498, 539, 538, 498, 499, 540, 539, 499, 500, 541, 540, 500, 501, 542, 541, 501, 502, 543, 542, 502, 503, 544, 543, 503, 504, 545, 544, 504, 505, 546, 545, 505, 506, 507, 547, 546, 506, 548, 547, 507, 508, 509, 549, 548, 508, 550, 549, 509, 510, 511, 550, 510, 471, 552, 551, 511, 512, 553, 552, 512, 513, 554, 553, 513, 514, 555, 554, 514, 515, 556, 555, 515, 516, 557, 556, 516, 517, 558, 557, 517, 518, 519, 559, 558, 518, 560, 559, 519, 520, 561, 560, 520, 521, 562, 561, 521, 522, 563, 562, 522, 523, 564, 563, 523, 524, 565, 564, 524, 525, 566, 565, 525, 526, 567, 566, 526, 527, 568, 567, 527, 528, 569, 568, 528, 529, 570, 569, 529, 530, 571, 570, 530, 531, 572, 571, 531, 532, 573, 572, 532, 533, 574, 573, 533, 534, 575, 574, 534, 535, 576, 575, 535, 536, 537, 577, 576, 536, 578, 577, 537, 538, 579, 578, 538, 539, 580, 579, 539, 540, 581, 580, 540, 541, 582, 581, 541, 542, 583, 582, 542, 543, 584, 583, 543, 544, 585, 584, 544, 545, 586, 585, 545, 546, 547, 587, 586, 546, 588, 587, 547, 548, 549, 589, 588, 548, 590, 589, 549, 550, 551, 590, 550, 511]
                                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_beige_sg>
                                            point3f[] points = [(-7.1949387, 9.487616, 0.08353624), (-7.1949387, 9.038579, 0.08353624), (-7.1949387, 9.487616, -0.076654166), (-7.1949387, 9.038579, -0.076654166), (-7.1949387, 9.1830015, 0.22795936), (-7.1949387, 9.1830015, 0.08353624), (-7.1949387, 9.1830015, -0.076654166), (-7.1949387, 9.1830015, -0.22107726), (-7.1949387, 9.343192, 0.22795936), (-7.1949387, 9.343192, 0.08353624), (-7.1949387, 9.343192, -0.076654166), (-7.1949387, 9.343192, -0.22107726), (-7.1949387, 9.263097, 0.24372666), (-7.1949387, 9.263097, 0.08353624), (-7.1949387, 9.263097, -0.076654166), (-7.1949387, 9.263097, -0.23684454), (-7.1949387, 9.503383, 0.0034410655), (-7.1949387, 9.343192, 0.0034410655), (-7.1949387, 9.263097, 0.0034410655), (-7.1949387, 9.1830015, 0.0034410655), (-7.1949387, 9.022812, 0.0034410655), (-7.1949387, 9.489969, 0.0715799), (-7.1949387, 9.343192, 0.0715799), (-7.1949387, 9.263097, 0.0715799), (-7.1949387, 9.1830015, 0.0715799), (-7.1949387, 9.036225, 0.0715799), (-7.1949387, 9.330702, 0.08353624), (-7.1949387, 9.330702, 0.0715799), (-7.1949387, 9.330702, 0.0034410655), (-7.1949387, 9.330702, -0.076654166), (-7.1949387, 9.330702, -0.22353607), (-7.1949387, 9.330702, 0.23041818), (-7.1949387, 9.343192, -0.06414953), (-7.1949387, 9.490077, -0.06414953), (-7.1949387, 9.036118, -0.06414953), (-7.1949387, 9.1830015, -0.06414953), (-7.1949387, 9.263097, -0.06414953), (-7.1949387, 9.330702, -0.06414953), (-7.1949387, 9.195452, -0.076654166), (-7.1949387, 9.195452, -0.22352803), (-7.1949387, 9.195452, 0.23041013), (-7.1949387, 9.195452, 0.08353624), (-7.1949387, 9.195452, 0.0715799), (-7.1949387, 9.195452, 0.0034410655), (-7.1949387, 9.195452, -0.06414953), (-7.1949387, 9.263097, 0.22993286), (-7.1949387, 9.330702, 0.21777034), (-7.1949387, 9.343192, 0.21552324), (-7.1949387, 9.1830015, 0.21552324), (-7.1949387, 9.195452, 0.21776298), (-7.1949387, 9.038778, 0.0034410655), (-7.1949387, 9.050757, -0.06414953), (-7.1949387, 9.052974, -0.076654166), (-7.1949387, 9.052974, 0.08353624), (-7.1949387, 9.050855, 0.0715799), (-7.1949387, 9.263097, -0.22296947), (-7.1949387, 9.330702, -0.21081376), (-7.1949387, 9.343192, -0.20856786), (-7.1949387, 9.1830015, -0.20856786), (-7.1949387, 9.195452, -0.21080637), (-7.1949387, 9.490392, 0.0034410655), (-7.1949387, 9.478165, -0.06414953), (-7.1949387, 9.475903, -0.076654166), (-7.1949387, 9.475903, 0.08353624), (-7.1949387, 9.4780655, 0.0715799), (-12.799817, 9.1830015, -0.22107726), (-12.799817, 9.195452, -0.22352803), (-12.799817, 9.263097, -0.23684454), (-12.799817, 9.330702, -0.22353607), (-12.799817, 9.343192, -0.22107726), (-12.799817, 9.343192, -0.20856786), (-12.799817, 9.343192, -0.076654166), (-12.799817, 9.475903, -0.076654166), (-12.799817, 9.487616, -0.076654166), (-12.799817, 9.490077, -0.06414953), (-12.799817, 9.503383, 0.0034410655), (-12.799817, 9.489969, 0.0715799), (-12.799817, 9.487616, 0.08353624), (-12.799817, 9.475903, 0.08353624), (-12.799817, 9.343192, 0.08353624), (-12.799817, 9.343192, 0.21552324), (-12.799817, 9.343192, 0.22795936), (-12.799818, 9.330702, 0.23041818), (-12.799817, 9.263097, 0.24372666), (-12.799817, 9.195452, 0.23041013), (-12.799817, 9.1830015, 0.22795936), (-12.799817, 9.1830015, 0.21552324), (-12.799817, 9.1830015, 0.08353624), (-12.799817, 9.052974, 0.08353624), (-12.799817, 9.038579, 0.08353624), (-12.799817, 9.036225, 0.0715799), (-12.799817, 9.022812, 0.0034410655), (-12.799817, 9.036118, -0.06414953), (-12.799817, 9.038579, -0.076654166), (-12.799817, 9.052974, -0.076654166), (-12.799817, 9.1830015, -0.076654166), (-12.799817, 9.1830015, -0.20856786), (-12.0779, 9.1830015, -0.2210772), (-12.0779, 9.195452, -0.22352803), (-12.0779, 9.263097, -0.23684454), (-12.0779, 9.330702, -0.22353607), (-12.0779, 9.343192, -0.2210772), (-12.0779, 9.343192, -0.20856786), (-12.0779, 9.343192, -0.076654166), (-12.0779, 9.475903, -0.076654166), (-12.0779, 9.487616, -0.076654166), (-12.0779, 9.490077, -0.06414953), (-12.0779, 9.503383, 0.0034410655), (-12.0779, 9.489969, 0.0715799), (-12.0779, 9.487616, 0.08353624), (-12.0779, 9.475903, 0.08353624), (-12.0779, 9.343192, 0.08353624), (-12.0779, 9.343192, 0.21552324), (-12.0779, 9.343192, 0.22795936), (-12.077901, 9.330702, 0.23041818), (-12.0779, 9.263097, 0.24372666), (-12.0779, 9.195452, 0.23041013), (-12.0779, 9.1830015, 0.22795936), (-12.0779, 9.1830015, 0.21552324), (-12.0779, 9.1830015, 0.08353624), (-12.0779, 9.052974, 0.08353624), (-12.0779, 9.038579, 0.08353624), (-12.0779, 9.036225, 0.0715799), (-12.0779, 9.022812, 0.0034410655), (-12.0779, 9.036118, -0.06414953), (-12.0779, 9.038579, -0.076654166), (-12.0779, 9.052974, -0.076654166), (-12.0779, 9.1830015, -0.076654166), (-12.0779, 9.1830015, -0.20856786), (-11.277902, 9.1830015, -0.2210772), (-11.277902, 9.195452, -0.22352803), (-11.277902, 9.263097, -0.23684454), (-11.277902, 9.330702, -0.22353607), (-11.277902, 9.343192, -0.2210772), (-11.277902, 9.343192, -0.20856786), (-11.277902, 9.343192, -0.076654166), (-11.277902, 9.475903, -0.076654166), (-11.277902, 9.487616, -0.076654166), (-11.277902, 9.490077, -0.06414953), (-11.277902, 9.503383, 0.0034410655), (-11.277902, 9.489969, 0.0715799), (-11.277902, 9.487616, 0.08353624), (-11.277902, 9.475903, 0.08353624), (-11.277902, 9.343192, 0.08353624), (-11.277902, 9.343192, 0.21552324), (-11.277902, 9.343192, 0.22795936), (-11.277902, 9.330702, 0.23041818), (-11.277902, 9.263097, 0.24372666), (-11.277902, 9.195452, 0.23041013), (-11.277902, 9.1830015, 0.22795936), (-11.277902, 9.1830015, 0.21552324), (-11.277902, 9.1830015, 0.08353624), (-11.277902, 9.052974, 0.08353624), (-11.277902, 9.038579, 0.08353624), (-11.277902, 9.036225, 0.0715799), (-11.277902, 9.022812, 0.0034410655), (-11.277902, 9.036118, -0.06414953), (-11.277902, 9.038579, -0.076654166), (-11.277902, 9.052974, -0.076654166), (-11.277902, 9.1830015, -0.076654166), (-11.277902, 9.1830015, -0.20856786), (-7.2052097, 9.487616, -0.076654166), (-7.2052097, 9.490077, -0.06414953), (-7.2052097, 9.503383, 0.0034410655), (-7.2052097, 9.489969, 0.0715799), (-7.2052097, 9.487616, 0.08353624), (-7.2052097, 9.475903, 0.08353624), (-7.2052097, 9.343192, 0.08353624), (-7.2052097, 9.343192, 0.21552324), (-7.2052097, 9.343192, 0.22795936), (-7.2052097, 9.330702, 0.23041818), (-7.2052097, 9.263097, 0.24372666), (-7.2052097, 9.195452, 0.23041013), (-7.2052097, 9.1830015, 0.22795936), (-7.2052097, 9.1830015, 0.21552324), (-7.2052097, 9.1830015, 0.08353624), (-7.2052097, 9.052974, 0.08353624), (-7.2052097, 9.038579, 0.08353624), (-7.2052097, 9.036225, 0.0715799), (-7.2052097, 9.022812, 0.0034410655), (-7.2052097, 9.036118, -0.06414953), (-7.2052097, 9.038579, -0.076654166), (-7.2052097, 9.052974, -0.076654166), (-7.2052097, 9.1830015, -0.076654166), (-7.2052097, 9.1830015, -0.20856786), (-7.2052097, 9.1830015, -0.22107726), (-7.2052097, 9.195452, -0.22352803), (-7.2052097, 9.263097, -0.23684454), (-7.2052097, 9.330702, -0.22353607), (-7.2052097, 9.343192, -0.22107726), (-7.2052097, 9.343192, -0.20856786), (-7.2052097, 9.343192, -0.076654166), (-7.2052097, 9.475903, -0.076654166), (-7.1949387, 9.355084, -0.06414953), (-7.1949387, 9.356161, 0.0034410655), (-7.1949387, 9.355076, 0.0715799), (-7.1949387, 9.354885, 0.08353624), (-7.2052097, 9.354885, 0.08353624), (-11.277902, 9.354885, 0.08353624), (-12.0779, 9.354885, 0.08353624), (-12.799817, 9.354885, 0.08353624), (-12.799817, 9.354885, -0.076654166), (-12.0779, 9.354885, -0.076654226), (-11.277902, 9.354885, -0.076654226), (-7.2052097, 9.354885, -0.076654166), (-7.1949387, 9.354885, -0.076654166), (-7.1949387, 9.330702, -0.08804366), (-7.1949387, 9.343192, -0.087853044), (-7.2052097, 9.343192, -0.087853044), (-11.277902, 9.343192, -0.087853044), (-12.0779, 9.343192, -0.087853044), (-12.799817, 9.343192, -0.087853044), (-12.799817, 9.1830015, -0.087853044), (-12.0779, 9.1830015, -0.087853044), (-11.277902, 9.1830015, -0.087853044), (-7.2052097, 9.1830015, -0.087853044), (-7.1949387, 9.1830015, -0.087853044), (-7.1949387, 9.195452, -0.088043064), (-7.1949387, 9.263097, -0.089075685), (-7.1949387, 9.330702, 0.09450255), (-7.1949387, 9.343192, 0.09431897), (-7.2052097, 9.343192, 0.09431897), (-11.277902, 9.343192, 0.09431897), (-12.0779, 9.343192, 0.09431897), (-12.799817, 9.343192, 0.09431897), (-12.799817, 9.1830015, 0.09431897), (-12.0779, 9.1830015, 0.09431897), (-11.277902, 9.1830015, 0.09431897), (-7.2052097, 9.1830015, 0.09431897), (-7.1949387, 9.1830015, 0.09431897), (-7.1949387, 9.195452, 0.09450194), (-7.1949387, 9.263097, 0.09549616), (-7.1949387, 9.171177, -0.06414953), (-7.1949387, 9.170106, 0.0034410655), (-7.1949387, 9.1711855, 0.0715799), (-7.1949387, 9.171375, 0.08353624), (-7.2052097, 9.171375, 0.08353624), (-11.277902, 9.171375, 0.08353624), (-12.0779, 9.171375, 0.08353624), (-12.799817, 9.171375, 0.08353624), (-12.799817, 9.171375, -0.076654166), (-12.0779, 9.171375, -0.076654166), (-11.277902, 9.171375, -0.076654166), (-7.2052097, 9.171375, -0.076654166), (-7.1949387, 9.171375, -0.076654166), (-12.799817, 9.011131, 0.2554065), (-12.799817, 9.263097, 0.359774), (-12.799817, 9.515062, 0.2554065), (-12.799817, 9.619431, 0.0034410655), (-12.799817, 9.515062, -0.24852443), (-12.799817, 9.263097, -0.35289192), (-12.799817, 9.011131, -0.24852443), (-12.799817, 8.906764, 0.0034410655), (-12.877903, 9.011131, 0.2554065), (-12.877903, 9.263097, 0.359774), (-12.877903, 9.515062, 0.2554065), (-12.877903, 9.619431, 0.0034410655), (-12.877903, 9.515062, -0.24852443), (-12.877903, 9.263097, -0.35289192), (-12.877903, 9.011131, -0.24852443), (-12.877903, 8.906764, 0.0034410655), (-12.799817, 9.0228195, 0.2437188), (-12.799817, 9.263097, 0.3432451), (-12.799817, 9.503375, 0.2437188), (-12.799817, 9.602901, 0.0034410655), (-12.799817, 9.503375, -0.23683673), (-12.799817, 9.263097, -0.33636302), (-12.799817, 9.0228195, -0.23683673), (-12.799817, 8.923293, 0.0034410655), (-12.799817, 9.263097, 0.0034410655), (-12.877903, 9.075162, 0.191376), (-12.877903, 9.263097, 0.2692212), (-12.877903, 9.451032, 0.191376), (-12.877903, 9.528877, 0.0034410655), (-12.877903, 9.451032, -0.1844939), (-12.877903, 9.263097, -0.26233912), (-12.877903, 9.075162, -0.1844939), (-12.877903, 8.997317, 0.0034410655), (-13.038353, 9.075162, 0.191376), (-13.038353, 9.263097, 0.2692212), (-13.038353, 9.451032, 0.191376), (-13.038353, 9.528877, 0.0034410655), (-13.038353, 9.451032, -0.1844939), (-13.038353, 9.263097, -0.26233912), (-13.038353, 9.075162, -0.1844939), (-13.038353, 8.997317, 0.0034410655), (-13.038353, 9.1379, 0.1286375), (-13.038353, 9.263097, 0.18049553), (-13.038353, 9.388293, 0.1286375), (-13.038353, 9.440151, 0.0034410655), (-13.038353, 9.388293, -0.12175539), (-13.038353, 9.263097, -0.17361349), (-13.038353, 9.1379, -0.12175539), (-13.038353, 9.086042, 0.0034410655), (-12.877903, 9.1379, 0.1286375), (-12.877903, 9.263097, 0.18049553), (-12.877903, 9.388293, 0.1286375), (-12.877903, 9.440151, 0.0034410655), (-12.877903, 9.388293, -0.12175539), (-12.877903, 9.263097, -0.17361349), (-12.877903, 9.1379, -0.12175539), (-12.877903, 9.086042, 0.0034410655), (-12.877903, 9.14423, 0.122308604), (-12.877903, 9.263097, 0.17154518), (-12.877903, 9.381965, 0.122308604), (-12.877903, 9.431201, 0.0034410655), (-12.877903, 9.381965, -0.11542654), (-12.877903, 9.263097, -0.16466314), (-12.877903, 9.14423, -0.11542654), (-12.877903, 9.094993, 0.0034410655), (-12.877903, 9.263097, 0.0034410357), (-12.809578, 9.515062, 0.2554065), (-12.809578, 9.263097, 0.359774), (-12.809578, 9.011131, 0.2554065), (-12.809578, 8.906764, 0.0034410655), (-12.809578, 9.011131, -0.24852443), (-12.809578, 9.263097, -0.35289192), (-12.809578, 9.515062, -0.24852443), (-12.809578, 9.619431, 0.0034410655), (-12.866897, 9.515062, 0.2554065), (-12.866897, 9.263097, 0.359774), (-12.866897, 9.011131, 0.2554065), (-12.866897, 8.906764, 0.0034410655), (-12.866897, 9.011131, -0.24852443), (-12.866897, 9.263097, -0.35289192), (-12.866897, 9.515062, -0.24852443), (-12.866897, 9.619431, 0.0034410655), (-12.877903, 9.50629, 0.24663481), (-12.877903, 9.263097, 0.34736896), (-12.877903, 9.019903, 0.24663481), (-12.877903, 8.919169, 0.0034410655), (-12.877903, 9.019903, -0.23975277), (-12.877903, 9.263097, -0.34048688), (-12.877903, 9.50629, -0.23975277), (-12.877903, 9.607025, 0.0034410655), (-12.877903, 9.457529, 0.19787309), (-12.877903, 9.263097, 0.27840948), (-12.877903, 9.0686655, 0.19787309), (-12.877903, 8.988129, 0.0034410655), (-12.877903, 9.0686655, -0.19099098), (-12.877903, 9.263097, -0.2715274), (-12.877903, 9.457529, -0.19099098), (-12.877903, 9.538066, 0.0034410655), (-12.887391, 9.451032, 0.191376), (-12.887391, 9.263097, 0.2692212), (-12.887391, 9.075162, 0.191376), (-12.887391, 8.997317, 0.0034410655), (-12.887391, 9.075162, -0.1844939), (-12.887391, 9.263097, -0.26233912), (-12.887391, 9.451032, -0.1844939), (-12.887391, 9.528877, 0.0034410655), (-13.028319, 9.451032, 0.191376), (-13.028319, 9.263097, 0.2692212), (-13.028319, 9.075162, 0.191376), (-13.028319, 8.997317, 0.0034410655), (-13.028319, 9.075162, -0.1844939), (-13.028319, 9.263097, -0.26233912), (-13.028319, 9.451032, -0.1844939), (-13.028319, 9.528877, 0.0034410655), (-13.038353, 9.445253, 0.18559712), (-13.038353, 9.263097, 0.26104864), (-13.038353, 9.080941, 0.18559712), (-13.038353, 9.005489, 0.0034410655), (-13.038353, 9.080941, -0.17871505), (-13.038353, 9.263097, -0.2541666), (-13.038353, 9.445253, -0.17871505), (-13.038353, 9.520704, 0.0034410655), (-13.038353, 9.3952265, 0.1355707), (-13.038353, 9.263097, 0.19030058), (-13.038353, 9.130967, 0.1355707), (-13.038353, 9.076238, 0.0034410655), (-13.038353, 9.130967, -0.1286886), (-13.038353, 9.263097, -0.18341851), (-13.038353, 9.3952265, -0.1286886), (-13.038353, 9.449957, 0.0034410655), (-13.027636, 9.388293, 0.1286375), (-13.027636, 9.263097, 0.18049556), (-13.027636, 9.1379, 0.1286375), (-13.027636, 9.086042, 0.0034410655), (-13.027636, 9.1379, -0.12175539), (-13.027636, 9.263097, -0.17361349), (-13.027636, 9.388293, -0.12175539), (-13.027636, 9.440151, 0.0034410655), (-12.889145, 9.388293, 0.1286375), (-12.889145, 9.263097, 0.18049553), (-12.889145, 9.1379, 0.1286375), (-12.889145, 9.086042, 0.0034410655), (-12.889145, 9.1379, -0.12175539), (-12.889145, 9.263097, -0.17361349), (-12.889145, 9.388293, -0.12175539), (-12.889145, 9.440151, 0.0034410655), (-10.599119, 9.343192, 0.22795936), (-10.59912, 9.330702, 0.23041818), (-10.599119, 9.263097, 0.24372666), (-10.599119, 9.195452, 0.23041013), (-10.599119, 9.1830015, 0.22795936), (-10.599119, 9.1830015, 0.21552324), (-10.599119, 9.1830015, 0.094318956), (-10.599119, 9.1830015, 0.08353624), (-10.599119, 9.171375, 0.08353624), (-10.599119, 9.052974, 0.08353624), (-10.599119, 9.038579, 0.08353624), (-10.599119, 9.036225, 0.0715799), (-10.599119, 9.022812, 0.0034410655), (-10.599119, 9.036118, -0.06414953), (-10.599119, 9.038579, -0.076654166), (-10.599119, 9.052974, -0.076654166), (-10.599119, 9.171375, -0.076654166), (-10.599119, 9.1830015, -0.076654166), (-10.599119, 9.1830015, -0.087853044), (-10.599119, 9.1830015, -0.20856786), (-10.599119, 9.1830015, -0.2210772), (-10.599119, 9.195452, -0.22352803), (-10.599119, 9.263097, -0.23684454), (-10.599119, 9.330702, -0.22353607), (-10.599119, 9.343192, -0.2210772), (-10.599119, 9.343192, -0.20856786), (-10.599119, 9.343192, -0.087853044), (-10.599119, 9.343192, -0.076654166), (-10.599119, 9.354885, -0.076654226), (-10.599119, 9.475903, -0.076654166), (-10.599119, 9.487616, -0.076654166), (-10.599119, 9.490077, -0.06414953), (-10.599119, 9.503383, 0.0034410655), (-10.599119, 9.489969, 0.0715799), (-10.599119, 9.487616, 0.08353624), (-10.599119, 9.475903, 0.08353624), (-10.599119, 9.354885, 0.08353624), (-10.599119, 9.343192, 0.08353624), (-10.599119, 9.343192, 0.094318956), (-10.599119, 9.343192, 0.21552324), (-9.920338, 9.343192, 0.22795936), (-9.920338, 9.330702, 0.23041818), (-9.920338, 9.263097, 0.24372666), (-9.920338, 9.195452, 0.23041013), (-9.920338, 9.1830015, 0.22795936), (-9.920338, 9.1830015, 0.21552324), (-9.920338, 9.1830015, 0.094318956), (-9.920338, 9.1830015, 0.08353624), (-9.920338, 9.171375, 0.08353624), (-9.920338, 9.052974, 0.08353624), (-9.920338, 9.038579, 0.08353624), (-9.920338, 9.036225, 0.0715799), (-9.920338, 9.022812, 0.0034410655), (-9.920338, 9.036118, -0.06414953), (-9.920338, 9.038579, -0.076654166), (-9.920338, 9.052974, -0.076654166), (-9.920338, 9.171375, -0.076654166), (-9.920338, 9.1830015, -0.076654166), (-9.920338, 9.1830015, -0.087853044), (-9.920338, 9.1830015, -0.20856786), (-9.920338, 9.1830015, -0.2210772), (-9.920338, 9.195452, -0.22352803), (-9.920338, 9.263097, -0.23684454), (-9.920338, 9.330702, -0.22353607), (-9.920338, 9.343192, -0.2210772), (-9.920338, 9.343192, -0.20856786), (-9.920338, 9.343192, -0.087853044), (-9.920338, 9.343192, -0.076654166), (-9.920338, 9.354885, -0.076654226), (-9.920338, 9.475903, -0.076654166), (-9.920338, 9.487616, -0.076654166), (-9.920338, 9.490077, -0.06414953), (-9.920338, 9.503383, 0.0034410655), (-9.920338, 9.489969, 0.0715799), (-9.920338, 9.487616, 0.08353624), (-9.920338, 9.475903, 0.08353624), (-9.920338, 9.354885, 0.08353624), (-9.920338, 9.343192, 0.08353624), (-9.920338, 9.343192, 0.094318956), (-9.920338, 9.343192, 0.21552324), (-9.241556, 9.343192, 0.22795936), (-9.241556, 9.330702, 0.23041818), (-9.241556, 9.263097, 0.24372666), (-9.241556, 9.195452, 0.23041013), (-9.241556, 9.1830015, 0.22795936), (-9.241556, 9.1830015, 0.21552324), (-9.241556, 9.1830015, 0.094318956), (-9.241556, 9.1830015, 0.08353624), (-9.241556, 9.171375, 0.08353624), (-9.241556, 9.052974, 0.08353624), (-9.241556, 9.038579, 0.08353624), (-9.241556, 9.036225, 0.0715799), (-9.241556, 9.022812, 0.0034410655), (-9.241556, 9.036118, -0.06414953), (-9.241556, 9.038579, -0.076654166), (-9.241556, 9.052974, -0.076654166), (-9.241556, 9.171375, -0.076654166), (-9.241556, 9.1830015, -0.076654166), (-9.241556, 9.1830015, -0.087853044), (-9.241556, 9.1830015, -0.20856786), (-9.241556, 9.1830015, -0.2210772), (-9.241556, 9.195452, -0.22352803), (-9.241556, 9.263097, -0.23684454), (-9.241556, 9.330702, -0.22353607), (-9.241556, 9.343192, -0.2210772), (-9.241556, 9.343192, -0.20856786), (-9.241556, 9.343192, -0.087853044), (-9.241556, 9.343192, -0.076654166), (-9.241556, 9.354885, -0.076654226), (-9.241556, 9.475903, -0.076654166), (-9.241556, 9.487616, -0.076654166), (-9.241556, 9.490077, -0.06414953), (-9.241556, 9.503383, 0.0034410655), (-9.241556, 9.489969, 0.0715799), (-9.241556, 9.487616, 0.08353624), (-9.241556, 9.475903, 0.08353624), (-9.241556, 9.354885, 0.08353624), (-9.241556, 9.343192, 0.08353624), (-9.241556, 9.343192, 0.094318956), (-9.241556, 9.343192, 0.21552324), (-8.562774, 9.343192, 0.22795936), (-8.562774, 9.330702, 0.23041818), (-8.562774, 9.263097, 0.24372666), (-8.562774, 9.195452, 0.23041013), (-8.562774, 9.1830015, 0.22795936), (-8.562774, 9.1830015, 0.21552324), (-8.562774, 9.1830015, 0.094318956), (-8.562774, 9.1830015, 0.08353624), (-8.562774, 9.171375, 0.08353624), (-8.562774, 9.052974, 0.08353624), (-8.562774, 9.038579, 0.08353624), (-8.562774, 9.036225, 0.0715799), (-8.562774, 9.022812, 0.0034410655), (-8.562774, 9.036118, -0.06414953), (-8.562774, 9.038579, -0.076654166), (-8.562774, 9.052974, -0.076654166), (-8.562774, 9.171375, -0.076654166), (-8.562774, 9.1830015, -0.076654166), (-8.562774, 9.1830015, -0.087853044), (-8.562774, 9.1830015, -0.20856786), (-8.562774, 9.1830015, -0.2210772), (-8.562774, 9.195452, -0.22352803), (-8.562774, 9.263097, -0.23684454), (-8.562774, 9.330702, -0.22353607), (-8.562774, 9.343192, -0.2210772), (-8.562774, 9.343192, -0.20856786), (-8.562774, 9.343192, -0.087853044), (-8.562774, 9.343192, -0.076654166), (-8.562774, 9.354885, -0.076654196), (-8.562774, 9.475903, -0.076654166), (-8.562774, 9.487616, -0.076654166), (-8.562774, 9.490077, -0.06414953), (-8.562774, 9.503383, 0.0034410655), (-8.562774, 9.489969, 0.0715799), (-8.562774, 9.487616, 0.08353624), (-8.562774, 9.475903, 0.08353624), (-8.562774, 9.354885, 0.08353624), (-8.562774, 9.343192, 0.08353624), (-8.562774, 9.343192, 0.094318956), (-8.562774, 9.343192, 0.21552324), (-7.8839917, 9.343192, 0.22795936), (-7.8839917, 9.330702, 0.23041818), (-7.8839917, 9.263097, 0.24372666), (-7.8839917, 9.195452, 0.23041013), (-7.8839917, 9.1830015, 0.22795936), (-7.8839917, 9.1830015, 0.21552324), (-7.8839917, 9.1830015, 0.094318956), (-7.8839917, 9.1830015, 0.08353624), (-7.8839917, 9.171375, 0.08353624), (-7.8839917, 9.052974, 0.08353624), (-7.8839917, 9.038579, 0.08353624), (-7.8839917, 9.036225, 0.0715799), (-7.8839917, 9.022812, 0.0034410655), (-7.8839917, 9.036118, -0.06414953), (-7.8839917, 9.038579, -0.076654166), (-7.8839917, 9.052974, -0.076654166), (-7.8839917, 9.171375, -0.076654166), (-7.8839917, 9.1830015, -0.076654166), (-7.8839917, 9.1830015, -0.087853044), (-7.8839917, 9.1830015, -0.20856786), (-7.8839917, 9.1830015, -0.2210772), (-7.8839917, 9.195452, -0.22352803), (-7.8839917, 9.263097, -0.23684454), (-7.8839917, 9.330702, -0.22353607), (-7.8839917, 9.343192, -0.2210772), (-7.8839917, 9.343192, -0.20856786), (-7.8839917, 9.343192, -0.087853044), (-7.8839917, 9.343192, -0.076654166), (-7.8839917, 9.354885, -0.076654166), (-7.8839917, 9.475903, -0.076654166), (-7.8839917, 9.487616, -0.076654166), (-7.8839917, 9.490077, -0.06414953), (-7.8839917, 9.503383, 0.0034410655), (-7.8839917, 9.489969, 0.0715799), (-7.8839917, 9.487616, 0.08353624), (-7.8839917, 9.475903, 0.08353624), (-7.8839917, 9.354885, 0.08353624), (-7.8839917, 9.343192, 0.08353624), (-7.8839917, 9.343192, 0.094318956), (-7.8839917, 9.343192, 0.21552324)]
                                            float3 xformOp:translate:pivot = (-11.758127, 9.263098, 0.003441049)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, -1.7763568394002505e-15, 0),
                                        }
                                        float3 xformOp:translate:pivot = (-12.400088, 10.063103, 0.8838179)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                        def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_001_grp_"
                                        {
                                            float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_008_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (90, -0, 180)
                                                double3 xformOp:translate = (-12.000088691711424, 9.663102945804596, 0.6534753835932389)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_017_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (-13.600079536437987, 9.82309897851944, 1.6840435900800457)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_008_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (-13.600094795227045, 9.82309897851944, 0.08404511595895187)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_round_rounded_bottom_005_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (0, 180, 0)
                                                double3 xformOp:translate = (-12.800091293437484, 9.503098985671997, 1.68403599817971)
                                                float3 xformOp:translate:rotatePivot = (0.8, 0.23805894, 0.8)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                                                float3 xformOp:translate:scalePivot = (0.8, 0.23805894, 0.8)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_clip_l_thick_004_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (-13.600079536437987, 9.822, 0.8840329089277028)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_021_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (-14.400088310241697, 10.143098971366882, 1.6840397753827805)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_002_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (0, 0, 1.1102230246251565e-16),
                                            }
                                            float3 xformOp:translate:pivot = (-14.800085, 10.0631075, 0.88879806)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_006_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, -90)
                                                double3 xformOp:translate = (-16.80009174346924, 10.30309868466854, 1.6887981151141194)
                                                float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                float3 xformOp:translate:rotatePivotTranslate = (0.8404796, -1.0399498, -1.8804294)
                                                float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_002_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_002_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_001_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_r_upper_finger_001_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_001_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (0, -1.7763568394002505e-15, 0),
                                        }
                                        float3 xformOp:translate:pivot = (-12.400077, 10.063103, -0.88025284)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                        def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_001_grp_"
                                        {
                                            float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_009_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, 0)
                                                double3 xformOp:translate = (-12.800076484680176, 9.663102945804596, -0.6432728608079706)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_009_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (-13.600094795227049, 9.82309897851944, -1.6800883735308918)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_018_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (-12.800091743469238, 9.82309897851944, -1.6800960029254237)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_022_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                double3 xformOp:translate = (-12.800091743469238, 10.143098971366882, -1.6800883735308925)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_round_rounded_bottom_006_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (0, 180, 0)
                                                double3 xformOp:translate = (-12.800091743469237, 9.503098985671997, -0.08009766989969991)
                                                float3 xformOp:translate:rotatePivot = (0.8, 0.23805894, 0.8)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                                                float3 xformOp:translate:scalePivot = (0.8, 0.23805894, 0.8)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_plate_1x1_clip_l_thick_005_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                double3 xformOp:translate = (-13.600079536437988, 9.822, -0.08009752880432845)
                                                float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_002_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, 0, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (-3.552713678800501e-15, 0, -1.1102230246251565e-16),
                                            }
                                            float3 xformOp:translate:pivot = (-14.800086, 10.0631075, -0.87532777)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_007_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -0, -90)
                                                double3 xformOp:translate = (-16.80009174346924, 10.30309868466854, -0.0753277684651348)
                                                float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                float3 xformOp:translate:rotatePivotTranslate = (0.8404796, -1.0399498, -1.8804294)
                                                float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_002_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_002_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_001_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_l_upper_finger_001_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_r_arm_lower_finger_base_grp"
                                    {
                                        float3 xformOp:rotateXYZ.timeSamples = {
                                            1: (0, 0, 0),
                                        }
                                        float3 xformOp:scale.timeSamples = {
                                            1: (1, 1, 1),
                                        }
                                        double3 xformOp:translate.timeSamples = {
                                            1: (8.881784197001252e-16, 0, 2.7105054312088307e-20),
                                        }
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                                        def Xform "Wall_e_RIG_v001_r_arm_lower_finger_base_grp_"
                                        {
                                            def Xform "Wall_e_RIG_v001_lightGray_axle_connector_double_flexible_thin_005_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -3.1805547e-15, -90)
                                                double3 xformOp:translate = (-11.600000000000001, 9.623106768846508, 0.36345028281212177)
                                                float3 xformOp:translate:rotatePivot = (0.7603195, 0.36073425, 0.40000007)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.36031944, -1.1210537, -0.7607343)
                                                float3 xformOp:translate:scalePivot = (0.7603195, 0.36073422, 0.40000007)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_lightGray_axle_connector_double_flexible_thin_004_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (-90, -3.1805547e-15, -90)
                                                double3 xformOp:translate = (-12.00008335709572, 9.62310676884651, 0.36345028281212166)
                                                float3 xformOp:translate:rotatePivot = (0.7603195, 0.36073422, 0.40000007)
                                                float3 xformOp:translate:rotatePivotTranslate = (-0.36031944, -1.1210537, -0.7607343)
                                                float3 xformOp:translate:scalePivot = (0.7603195, 0.36073422, 0.40000007)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }

                                            def Xform "Wall_e_RIG_v001_darkGrey_bar_1l_clip_mecha_003_mesh"
                                            {
                                                float3 xformOp:rotateXYZ = (180, -0, -90)
                                                double3 xformOp:translate = (-11.163397270560377, 8.903095447677195, 0.16344105601311076)
                                                float3 xformOp:translate:rotatePivot = (0.43438256, 0.7635159, 0.160202)
                                                float3 xformOp:translate:rotatePivotTranslate = (-1.1978984, -1.1978984, -0.320404)
                                                float3 xformOp:translate:scalePivot = (0.43438256, 0.7635159, 0.160202)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_lower_finger_001_grp"
                                        {
                                            float3 xformOp:rotateXYZ.timeSamples = {
                                                1: (0, -1.4033418e-14, 0),
                                            }
                                            float3 xformOp:scale.timeSamples = {
                                                1: (1, 1, 1),
                                            }
                                            double3 xformOp:translate.timeSamples = {
                                                1: (-3.552713678800501e-15, 0, -2.710505431213761e-20),
                                            }
                                            float3 xformOp:translate:pivot = (-12.403403, 8.463104, -0.00018177033)
                                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                            def Xform "Wall_e_RIG_v001_r_arm_lower_finger_001_grp_"
                                            {
                                                float3 xformOp:translate:pivot = (0, 0, -0.00018177033)
                                                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                                                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_007_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                                                    double3 xformOp:translate = (-12.803400631692865, 8.54309567179066, -0.7965535879135089)
                                                    float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    float3 xformOp:translate:rotatePivotTranslate = (-1.5708992, 0, 0.028469458)
                                                    float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }

                                                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_handle_side_006_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                                                    double3 xformOp:translate = (-13.603394146707519, 8.223095678943217, 0.8034410715103203)
                                                    float3 xformOp:translate:rotatePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    float3 xformOp:translate:rotatePivotTranslate = (-0.028469458, 0, -1.5708992)
                                                    float3 xformOp:translate:scalePivot = (0.79968435, 0.20901364, 0.77121484)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_lower_finger_002_grp"
                                            {
                                                float3 xformOp:rotateXYZ.timeSamples = {
                                                    1: (0, -1.4033418e-14, 0),
                                                }
                                                float3 xformOp:scale.timeSamples = {
                                                    1: (1, 1, 1),
                                                }
                                                double3 xformOp:translate.timeSamples = {
                                                    1: (0, 0, 0),
                                                }
                                                float3 xformOp:translate:pivot = (-14.003391, 8.783104, -0.00018177033)
                                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                                                def Xform "Wall_e_RIG_v001_lightGray_flag_2x2_square_005_mesh"
                                                {
                                                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                                                    double3 xformOp:translate = (-16.00339698791504, 9.02309370648861, 0.7875960026778248)
                                                    float3 xformOp:translate:rotatePivot = (0.23994982, 0.8, 1.0804294)
                                                    float3 xformOp:translate:rotatePivotTranslate = (0.8404796, -1.0399498, -1.8804294)
                                                    float3 xformOp:translate:scalePivot = (0.23994982, 0.8, 1.0804294)
                                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                                                }

                                                def Xform "Wall_e_RIG_v001_r_arm_lower_finger_002_grp_pac"
                                                {
                                                }

                                                def Xform "Wall_e_RIG_v001_r_arm_lower_finger_002_grp_scc"
                                                {
                                                }
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_lower_finger_001_grp_pac"
                                            {
                                            }

                                            def Xform "Wall_e_RIG_v001_r_arm_lower_finger_001_grp_scc"
                                            {
                                            }
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_lower_finger_base_grp_pac"
                                        {
                                        }

                                        def Xform "Wall_e_RIG_v001_r_arm_lower_finger_base_grp_scc"
                                        {
                                        }
                                    }

                                    def Xform "Wall_e_RIG_v001_r_arm_extend_grp_pac"
                                    {
                                    }

                                    def Xform "Wall_e_RIG_v001_r_arm_extend_grp_scc"
                                    {
                                    }
                                }

                                def Xform "Wall_e_RIG_v001_r_arm_twist_grp_pac"
                                {
                                }

                                def Xform "Wall_e_RIG_v001_r_arm_twist_grp_scc"
                                {
                                }
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_body_grp_pac"
                            {
                            }

                            def Xform "Wall_e_RIG_v001_r_arm_body_grp_scc"
                            {
                            }
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_shift_extend_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_arm_shift_extend_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_shift_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_arm_shift_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_exhaust_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (-4.440892098500626e-16, 0, 0),
                }
                float3 xformOp:translate:pivot = (2.0000074, 6.062256, -4.4000106)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_lightGray_axle_connector_2l_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.393798917531967, 5.652025094747544, -5.600016778707505)
                    float3 xformOp:translate:rotatePivot = (0.3937913, 0.4, 0.4)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7875826, 0, -0.8)
                    float3 xformOp:translate:scalePivot = (0.3937913, 0.4, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_1_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-180, -0, 0)
                    double3 xformOp:translate = (1.6002739071918763, 6.42202510547638, -4.040010070800783)
                    float3 xformOp:translate:rotatePivot = (0.3997633, 0.35976946, 0.76028866)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.7195389, -1.5205773)
                    float3 xformOp:translate:scalePivot = (0.3997633, 0.35976946, 0.76028866)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_blue_axle_pin_friction_r_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (2.3200371563434596, 5.742025098323823, -6.400010681152344)
                    float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.1199986, 0, 0.4799985)
                    float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_l_exhaust_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_l_exhaust_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_r_exhaust_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:translate:pivot = (-1.9999962, 6.062256, -4.4000106)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_lightGray_axle_connector_2l_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-1.6062048971652994, 5.652025094747544, -5.600016778707505)
                    float3 xformOp:translate:rotatePivot = (0.3937913, 0.4, 0.4)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7875826, 0, -0.8)
                    float3 xformOp:translate:scalePivot = (0.3937913, 0.4, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_1_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-180, -0, 0)
                    double3 xformOp:translate = (-2.399729907505389, 6.42202510547638, -4.040010070800783)
                    float3 xformOp:translate:rotatePivot = (0.3997633, 0.35976946, 0.76028866)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.7195389, -1.5205773)
                    float3 xformOp:translate:scalePivot = (0.3997633, 0.35976946, 0.76028866)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_blue_axle_pin_friction_r_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-1.6799666583538067, 5.742025098323823, -6.400010681152345)
                    float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.1199986, 0, 0.4799985)
                    float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_r_exhaust_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_r_exhaust_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_c_neck_001_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (-32.985546, -7.844782e-7, 5.0909426e-7),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (-3.89151019824485e-16, 1.2980162722442401e-8, -3.843118934199197e-9),
                }
                float3 xformOp:translate:pivot = (0, 7.981225, -1.2000289)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_c_neck_001_grp_"
                {
                    float3 xformOp:translate:pivot = (0, 0, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_lightGray_hinge_brick_1x4_l_1fve_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-0.000008404254912497411, 7.74199433904921, -1.7600074768066407)
                        float3 xformOp:translate:rotatePivot = (2.2106109, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.8106108, 1.6501958, 0.1604149)
                        float3 xformOp:translate:scalePivot = (2.2106109, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x4_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-0.8000091612339019, 8.382001182556152, -0.8000074386596671)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_hinge_brick_1x4_l_1fve_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-0.8000152707099903, 7.74199433904921, -1.7600074768066407)
                        float3 xformOp:translate:rotatePivot = (2.2106109, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.8106108, 1.6501958, 0.1604149)
                        float3 xformOp:translate:scalePivot = (2.2106109, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-0.8000091612339018, 9.181992790222168, -2.0800076484680172)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (0.000042557716, 0.5595639, -0.55960643)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_round_rounded_bottom_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-0.8000091612339019, 9.182000419616699, -2.4000077071128767)
                        float3 xformOp:translate:rotatePivot = (0.8, 0.23805894, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (2.4437904e-8, 0.5619411, -0.5619411)
                        float3 xformOp:translate:scalePivot = (0.8, 0.23805894, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }
                }

                def Xform "Wall_e_RIG_v001_c_neck_002_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (3.5167918e-7, -9.351914e-7, -8.345425e-10),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (5.826258400154055e-11, 5.684341886080802e-14, -8.881784197001252e-16),
                    }
                    float3 xformOp:translate:pivot = (0, 11.981976, -1.2000268)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_c_neck_002_grp_"
                    {
                        float3 xformOp:translate:pivot = (0, 0, 0.4)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                        def Xform "Wall_e_RIG_v001_lightGray_tile_1x4_007_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (0.33999603986740057, 15.582000991821289, -0.15837418756583144)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x2_007_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, 90)
                            double3 xformOp:translate = (0.000003814697265180911, 12.382008811950683, -2.080004131793976)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x2_006_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (-0.000015258789063166134, 13.981999656677246, -2.080004131793976)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_010_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (0.7999916076660146, 15.582001945495605, -2.0800053238868714)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_hinge_brick_1x2_looking_2fve_003_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (0.7999916076660147, 13.981999656677242, -1.7600053310394288)
                            float3 xformOp:translate:rotatePivot = (1.1330266, 0.56041497, 0.40000007)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.5330267, -1.6934415, 0.1604149)
                            float3 xformOp:translate:scalePivot = (1.1330266, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_hinge_brick_1x2_looking_2fve_002_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -90)
                            double3 xformOp:translate = (-0.000015258789063776756, 13.981999656677244, -1.7600053310394288)
                            float3 xformOp:translate:rotatePivot = (1.1330266, 0.56041497, 0.40000007)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.5330267, -1.6934415, 0.1604149)
                            float3 xformOp:translate:scalePivot = (1.1330266, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_009_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -180)
                            double3 xformOp:translate = (0.8000053465366361, 13.98200633239746, -0.800005352497101)
                            float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0.55960643, -0.55960643)
                            float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_005_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-180, -0, 90)
                            double3 xformOp:translate = (-1.1178181625839938, 13.981998703002933, -0.8608221927172656)
                            float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                            float3 xformOp:translate:rotatePivotTranslate = (-0.5595639, 0.5595639, -0.80000013)
                            float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_004_mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            double3 xformOp:translate = (1.1166453513728263, 13.98199870300293, -1.6608099856860163)
                            float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.0403938, 0.5595639, 0)
                            float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_013_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -180)
                            double3 xformOp:translate = (0.7999977171421048, 14.782013198852539, -0.48000541925430296)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_004_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -90, 0)
                            double3 xformOp:translate = (-0.9600143432617194, 13.981999656677246, -2.0799965023994442)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_005_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-90, -90, 0)
                            double3 xformOp:translate = (0.9600028991699221, 12.382008811950683, -2.0799965023994447)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_003_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -180)
                            double3 xformOp:translate = (0.7999916076660156, 13.182011863708496, -0.48000410795211823)
                            float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                            float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0.6400214, -0.6400214)
                            float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_012_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, -180)
                            double3 xformOp:translate = (0.7999916076660158, 12.382008811950683, -0.4800041079521179)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_brick_2x2_ball_recept_004_mesh"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, 90)
                            double3 xformOp:translate = (-0.8000022610438893, 13.982001473679677, -1.7602576226286137)
                            float3 xformOp:translate:rotatePivot = (1.1999997, 1.1210822, 1.1999999)
                            float3 xformOp:translate:rotatePivotTranslate = (3.0221128e-7, 0.07891744, -0.078917734)
                            float3 xformOp:translate:scalePivot = (1.1999997, 1.1210822, 1.1999999)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_003_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (30.023361, -0.000040361818, 0.000070641734),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (0.0000232155638641334, 1.5925453860735121, -8.338628711234955),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Mesh "Wall_e_RIG_v001_darkGrey_c_special_neck_rotate_001_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(-0.3277169, 17.134748, -1.5272037), (0.3266796, 17.953802, -0.87280715)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [9, 8, 16, 17, 10, 9, 17, 18, 19, 11, 10, 18, 20, 12, 11, 19, 13, 12, 20, 21, 14, 13, 21, 22, 23, 15, 14, 22, 16, 8, 15, 23, 97, 96, 129, 130, 100, 97, 130, 131, 132, 102, 100, 131, 133, 104, 102, 132, 106, 104, 133, 134, 108, 106, 134, 135, 128, 110, 108, 135, 129, 96, 110, 128, 17, 16, 33, 34, 18, 17, 34, 35, 19, 18, 35, 36, 20, 19, 36, 37, 21, 20, 37, 38, 22, 21, 38, 39, 32, 23, 22, 39, 16, 23, 32, 33, 43, 41, 40, 42, 44, 41, 43, 45, 46, 44, 45, 47, 49, 48, 46, 47, 51, 50, 48, 49, 52, 50, 51, 53, 54, 52, 53, 55, 42, 40, 54, 55, 25, 33, 32, 24, 34, 33, 25, 26, 35, 34, 26, 27, 28, 36, 35, 27, 29, 37, 36, 28, 38, 37, 29, 30, 39, 38, 30, 31, 24, 32, 39, 31, 25, 24, 56, 57, 77, 5, 4, 76, 26, 25, 57, 58, 4, 3, 75, 76, 27, 26, 58, 59, 3, 2, 74, 75, 28, 27, 59, 60, 74, 2, 1, 73, 29, 28, 60, 61, 73, 1, 0, 72, 30, 29, 61, 62, 0, 7, 79, 72, 31, 30, 62, 63, 7, 6, 78, 79, 56, 24, 31, 63, 78, 6, 5, 77, 40, 41, 57, 56, 58, 57, 41, 44, 59, 58, 44, 46, 46, 48, 60, 59, 48, 50, 61, 60, 62, 61, 50, 52, 63, 62, 52, 54, 54, 40, 56, 63, 42, 55, 65, 64, 66, 65, 55, 53, 67, 66, 53, 51, 51, 49, 68, 67, 49, 47, 69, 68, 70, 69, 47, 45, 71, 70, 45, 43, 43, 42, 64, 71, 81, 0, 1, 80, 80, 1, 2, 87, 2, 3, 86, 87, 3, 4, 85, 86, 85, 4, 5, 84, 84, 5, 6, 83, 6, 7, 82, 83, 7, 0, 81, 82, 67, 68, 73, 72, 68, 69, 74, 73, 75, 74, 69, 70, 76, 75, 70, 71, 71, 64, 77, 76, 64, 65, 78, 77, 79, 78, 65, 66, 72, 79, 66, 67, 8, 9, 89, 88, 9, 10, 90, 89, 90, 10, 11, 91, 91, 11, 12, 92, 12, 13, 93, 92, 13, 14, 94, 93, 94, 14, 15, 95, 95, 15, 8, 88, 88, 89, 118, 119, 89, 90, 117, 118, 117, 90, 91, 116, 116, 91, 92, 115, 92, 93, 114, 115, 93, 94, 113, 114, 113, 94, 95, 112, 112, 95, 88, 119, 109, 113, 112, 111, 114, 113, 109, 107, 115, 114, 107, 105, 103, 116, 115, 105, 101, 117, 116, 103, 118, 117, 101, 99, 119, 118, 99, 98, 111, 112, 119, 98, 111, 98, 121, 120, 122, 121, 98, 99, 123, 122, 99, 101, 101, 103, 124, 123, 103, 105, 125, 124, 126, 125, 105, 107, 127, 126, 107, 109, 109, 111, 120, 127, 120, 121, 129, 128, 130, 129, 121, 122, 131, 130, 122, 123, 123, 124, 132, 131, 124, 125, 133, 132, 134, 133, 125, 126, 135, 134, 126, 127, 127, 120, 128, 135, 81, 80, 149, 150, 82, 81, 150, 151, 83, 82, 151, 144, 84, 83, 144, 145, 85, 84, 145, 146, 86, 85, 146, 147, 148, 87, 86, 147, 80, 87, 148, 149, 145, 144, 141, 142, 146, 145, 142, 143, 147, 146, 143, 136, 137, 148, 147, 136, 149, 148, 137, 138, 150, 149, 138, 139, 151, 150, 139, 140, 144, 151, 140, 141, 137, 136, 152, 153, 138, 137, 153, 154, 139, 138, 154, 155, 140, 139, 155, 156, 141, 140, 156, 157, 142, 141, 157, 158, 143, 142, 158, 159, 136, 143, 159, 152, 153, 152, 164, 165, 154, 153, 165, 166, 155, 154, 166, 167, 156, 155, 167, 160, 157, 156, 160, 161, 158, 157, 161, 162, 159, 158, 162, 163, 152, 159, 163, 164, 161, 160, 106, 108, 162, 161, 108, 110, 163, 162, 110, 96, 164, 163, 96, 97, 165, 164, 97, 100, 166, 165, 100, 102, 167, 166, 102, 104, 160, 167, 104, 106]
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                            point3f[] points = [(0.12551373, 17.953802, -1.3260379), (-0.0005186796, 17.953802, -1.3782421), (-0.12655106, 17.953802, -1.3260379), (-0.17875539, 17.953802, -1.2000054), (-0.12655106, 17.953802, -1.0739731), (-0.0005186796, 17.953802, -1.0217687), (0.12551373, 17.953802, -1.0739731), (0.17771804, 17.953802, -1.2000054), (-0.19336334, 17.234093, -1.0071608), (-0.2732422, 17.234093, -1.2000054), (-0.19336334, 17.234093, -1.3928502), (-0.0005186796, 17.234093, -1.472729), (0.19232601, 17.234093, -1.3928502), (0.27220488, 17.234093, -1.2000054), (0.19232601, 17.234093, -1.0071608), (-0.0005186796, 17.234093, -0.927282), (-0.19336334, 17.241446, -1.0071608), (-0.2732422, 17.241446, -1.2000054), (-0.19336334, 17.241446, -1.3928502), (-0.0005186796, 17.241446, -1.472729), (0.19232601, 17.241446, -1.3928502), (0.27220488, 17.241446, -1.2000054), (0.19232601, 17.241446, -1.0071608), (-0.0005186796, 17.241446, -0.927282), (-0.0005186796, 17.873894, -0.927282), (-0.19336334, 17.873894, -1.0071608), (-0.2732422, 17.873894, -1.2000054), (-0.19336334, 17.873894, -1.3928502), (-0.0005186796, 17.873894, -1.472729), (0.19232601, 17.873894, -1.3928502), (0.27220488, 17.873894, -1.2000054), (0.19232601, 17.873894, -1.0071608), (-0.0005186796, 17.865044, -0.927282), (-0.19336334, 17.865044, -1.0071608), (-0.2732422, 17.865044, -1.2000054), (-0.19336334, 17.865044, -1.3928502), (-0.0005186796, 17.865044, -1.472729), (0.19232601, 17.865044, -1.3928502), (0.27220488, 17.865044, -1.2000054), (0.19232601, 17.865044, -1.0071608), (-0.0005186796, 17.873894, -0.9085554), (-0.20660496, 17.873894, -0.99391925), (-0.0005186796, 17.953802, -0.9085554), (-0.20660496, 17.953802, -0.99391925), (-0.29196867, 17.873894, -1.2000054), (-0.29196867, 17.953802, -1.2000054), (-0.20660496, 17.873894, -1.4060918), (-0.20660496, 17.953802, -1.4060918), (-0.0005186796, 17.873894, -1.4914554), (-0.0005186796, 17.953802, -1.4914554), (0.2055676, 17.873894, -1.4060918), (0.2055676, 17.953802, -1.4060918), (0.29093134, 17.873894, -1.2000054), (0.29093134, 17.953802, -1.2000054), (0.2055676, 17.873894, -0.99391925), (0.2055676, 17.953802, -0.99391925), (-0.0005186796, 17.873894, -0.9166926), (-0.20085104, 17.873894, -0.9996731), (-0.28383142, 17.873894, -1.2000054), (-0.20085104, 17.873894, -1.4003378), (-0.0005186796, 17.873894, -1.4833182), (0.19981366, 17.873894, -1.4003378), (0.28279412, 17.873894, -1.2000054), (0.19981366, 17.873894, -0.9996731), (-0.0005186796, 17.953802, -0.91813076), (0.19879681, 17.953802, -1.00069), (0.28135598, 17.953802, -1.2000054), (0.19879681, 17.953802, -1.399321), (-0.0005186796, 17.953802, -1.4818802), (-0.19983417, 17.953802, -1.399321), (-0.28239334, 17.953802, -1.2000054), (-0.19983417, 17.953802, -1.00069), (0.13298914, 17.953802, -1.3335133), (-0.0005186796, 17.953802, -1.388814), (-0.13402648, 17.953802, -1.3335133), (-0.18932721, 17.953802, -1.2000054), (-0.13402648, 17.953802, -1.0664977), (-0.0005186796, 17.953802, -1.011197), (0.13298914, 17.953802, -1.0664977), (0.18828985, 17.953802, -1.2000054), (-0.0005186796, 17.945253, -1.3782421), (0.12551373, 17.945253, -1.3260379), (0.17771804, 17.945253, -1.2000054), (0.12551373, 17.945253, -1.0739731), (-0.0005186796, 17.945253, -1.0217687), (-0.12655106, 17.945253, -1.0739731), (-0.17875539, 17.945253, -1.2000054), (-0.12655106, 17.945253, -1.3260379), (-0.20298451, 17.234093, -0.99753964), (-0.28684857, 17.234093, -1.2000054), (-0.20298451, 17.234093, -1.4024713), (-0.0005186796, 17.234093, -1.4863354), (0.20194715, 17.234093, -1.4024713), (0.2858113, 17.234093, -1.2000054), (0.20194715, 17.234093, -0.99753964), (-0.0005186796, 17.234093, -0.9136754), (-0.23188275, 17.146395, -0.9686414), (-0.3277169, 17.146395, -1.2000054), (-0.23188275, 17.234093, -0.9686414), (-0.3277169, 17.234093, -1.2000054), (-0.23188275, 17.146395, -1.4313695), (-0.23188275, 17.234093, -1.4313695), (-0.00051867985, 17.146395, -1.5272037), (-0.0005186796, 17.234093, -1.5272037), (0.23084539, 17.146395, -1.4313695), (0.23084539, 17.234093, -1.4313695), (0.3266796, 17.146395, -1.2000054), (0.3266796, 17.234093, -1.2000054), (0.23084539, 17.146395, -0.9686414), (0.23084539, 17.234093, -0.9686414), (-0.0005186796, 17.146395, -0.87280715), (-0.0005186796, 17.234093, -0.87280715), (-0.0005186796, 17.234093, -0.88483405), (0.22234118, 17.234093, -0.97714555), (0.31465274, 17.234093, -1.2000054), (0.22234118, 17.234093, -1.4228653), (-0.0005186796, 17.234093, -1.5151769), (-0.22337851, 17.234093, -1.4228653), (-0.31569007, 17.234093, -1.2000054), (-0.22337851, 17.234093, -0.97714555), (-0.0005186796, 17.21564, -0.87280715), (-0.23188275, 17.21564, -0.9686414), (-0.3277169, 17.21564, -1.2000054), (-0.23188275, 17.21564, -1.4313695), (-0.0005186796, 17.21564, -1.5272037), (0.23084539, 17.21564, -1.4313695), (0.3266796, 17.21564, -1.2000054), (0.23084539, 17.21564, -0.9686414), (-0.0005186796, 17.163696, -0.87280715), (-0.23188275, 17.163696, -0.9686414), (-0.3277169, 17.163696, -1.2000054), (-0.23188275, 17.163696, -1.4313695), (-0.0005186796, 17.163696, -1.5272037), (0.23084539, 17.163696, -1.4313695), (0.3266796, 17.163696, -1.2000054), (0.23084539, 17.163696, -0.9686414), (-0.17875539, 17.134748, -1.2000054), (-0.12655106, 17.134748, -1.3260379), (-0.0005186796, 17.134748, -1.3782421), (0.12551373, 17.134748, -1.3260379), (0.17771804, 17.134748, -1.2000054), (0.12551373, 17.134748, -1.0739731), (-0.0005186796, 17.134748, -1.0217687), (-0.12655106, 17.134748, -1.0739731), (0.12551373, 17.141613, -1.0739731), (-0.0005186796, 17.141613, -1.0217687), (-0.12655106, 17.141613, -1.0739731), (-0.17875539, 17.141613, -1.2000054), (-0.12655106, 17.141613, -1.3260379), (-0.0005186796, 17.141613, -1.3782421), (0.12551373, 17.141613, -1.3260379), (0.17771804, 17.141613, -1.2000054), (-0.188924, 17.134748, -1.2000054), (-0.13374136, 17.134748, -1.3332282), (-0.00051868, 17.134748, -1.3884108), (0.13270403, 17.134748, -1.3332282), (0.18788666, 17.134748, -1.2000054), (0.13270403, 17.134748, -1.0667827), (-0.00051868, 17.134748, -1.0116), (-0.13374136, 17.134748, -1.0667827), (0.31324852, 17.145267, -1.2000054), (0.2213482, 17.145267, -0.97813857), (-0.0005186797, 17.145267, -0.8862382), (-0.22238556, 17.145267, -0.97813857), (-0.3142858, 17.145267, -1.2000054), (-0.22238556, 17.145267, -1.4218724), (-0.00051867985, 17.145267, -1.5137726), (0.2213482, 17.145267, -1.4218724)]
                            texCoord2f[] primvars:st = [(0, 0), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295), (1, 0.9032295), (0, 0.9032295)] (
                                customData = {
                                    dictionary Maya = {
                                        token name = "map1"
                                    }
                                }
                                interpolation = "faceVarying"
                                unauthoredValuesIndex = 0
                            )
                            int[] primvars:st:indices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 73, 76, 37, 38, 75, 78, 41, 42, 77, 80, 45, 46, 79, 66, 49, 50, 65, 68, 53, 54, 67, 70, 57, 58, 69, 72, 61, 62, 71, 74, 68, 65, 51, 52, 70, 67, 55, 56, 72, 69, 59, 60, 74, 71, 63, 64, 76, 73, 35, 36, 78, 75, 39, 40, 80, 77, 43, 44, 66, 79, 47, 48]
                            float3 xformOp:translate:pivot = (-0.0005186577, 16.47633, -1.2000053)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_ball_003_mesh"
                        {
                            double3 xformOp:translate = (-0.5125857293605804, 15.828026533126831, -3.966998815536499)
                            float3 xformOp:translate:pivot = (0.51258576, 0.5156605, 2.7600727)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Mesh "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x2_with_ball_joint_straight_003_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(-0.29378986, 15.907411, -1.5004431), (0.29379034, 17.155155, -0.8995677)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [62, 3, 32, 61, 52, 160, 161, 51, 31, 11, 45, 46, 28, 0, 33, 34, 27, 1, 140, 141, 44, 8, 47, 48, 41, 12, 35, 40, 39, 13, 142, 143, 63, 25, 3, 62, 29, 24, 0, 28, 42, 23, 12, 41, 53, 159, 160, 52, 54, 158, 159, 53, 43, 9, 23, 42, 30, 10, 24, 29, 64, 19, 25, 63, 13, 27, 141, 142, 12, 28, 34, 35, 23, 29, 28, 12, 9, 30, 29, 23, 8, 31, 46, 47, 61, 32, 2, 60, 34, 33, 1, 27, 35, 34, 27, 13, 40, 35, 13, 39, 51, 161, 162, 50, 6, 39, 143, 144, 36, 40, 39, 6, 7, 41, 40, 36, 22, 42, 41, 7, 17, 43, 42, 22, 16, 44, 48, 49, 46, 45, 149, 150, 47, 46, 150, 151, 48, 47, 151, 152, 49, 48, 152, 153, 37, 51, 50, 5, 4, 52, 51, 37, 21, 53, 52, 4, 20, 54, 53, 21, 56, 55, 15, 26, 57, 56, 26, 14, 58, 57, 14, 38, 59, 58, 38, 18, 33, 134, 135, 1, 0, 133, 134, 33, 24, 132, 133, 0, 10, 131, 132, 24, 220, 330, 331, 219, 218, 219, 331, 332, 217, 218, 332, 333, 216, 217, 333, 334, 215, 216, 334, 335, 213, 214, 336, 337, 212, 213, 337, 338, 210, 211, 339, 340, 209, 210, 340, 341, 208, 209, 341, 342, 207, 208, 342, 343, 206, 207, 343, 344, 205, 206, 344, 345, 243, 244, 346, 347, 241, 242, 348, 349, 240, 241, 349, 350, 239, 240, 350, 351, 238, 239, 351, 352, 237, 238, 352, 353, 236, 237, 353, 354, 235, 236, 354, 355, 234, 235, 355, 356, 231, 232, 358, 359, 230, 231, 359, 360, 229, 230, 360, 361, 228, 229, 361, 362, 227, 228, 362, 363, 226, 227, 363, 364, 225, 226, 364, 325, 224, 225, 325, 326, 222, 223, 327, 328, 220, 221, 329, 330, 74, 73, 2, 32, 75, 74, 32, 3, 76, 75, 3, 25, 77, 76, 25, 19, 78, 77, 19, 64, 79, 130, 131, 10, 80, 148, 149, 45, 81, 80, 45, 11, 82, 81, 11, 31, 83, 82, 31, 8, 84, 83, 8, 44, 85, 84, 44, 16, 86, 85, 16, 49, 154, 86, 49, 153, 88, 157, 158, 54, 89, 88, 54, 20, 90, 89, 20, 21, 91, 90, 21, 4, 92, 91, 4, 37, 93, 92, 37, 5, 94, 93, 5, 50, 163, 94, 50, 162, 145, 95, 6, 144, 65, 96, 59, 18, 66, 65, 18, 38, 67, 66, 38, 14, 68, 67, 14, 26, 69, 68, 26, 15, 70, 69, 15, 55, 71, 139, 140, 1, 136, 71, 1, 135, 73, 72, 60, 2, 346, 244, 205, 345, 131, 130, 78, 64, 132, 131, 64, 63, 133, 132, 63, 62, 134, 133, 62, 61, 135, 134, 61, 60, 72, 136, 135, 60, 211, 212, 338, 339, 336, 214, 215, 335, 140, 139, 70, 55, 141, 140, 55, 56, 142, 141, 56, 57, 143, 142, 57, 58, 144, 143, 58, 59, 96, 145, 144, 59, 221, 222, 328, 329, 348, 242, 243, 347, 149, 148, 79, 10, 150, 149, 10, 30, 151, 150, 30, 9, 152, 151, 9, 43, 153, 152, 43, 17, 87, 154, 153, 17, 233, 234, 356, 357, 358, 232, 233, 357, 158, 157, 87, 17, 159, 158, 17, 22, 160, 159, 22, 7, 161, 160, 7, 36, 162, 161, 36, 6, 95, 163, 162, 6, 223, 224, 326, 327, 166, 165, 264, 265, 266, 167, 166, 265, 168, 167, 266, 267, 268, 169, 168, 267, 170, 169, 268, 269, 171, 170, 269, 270, 172, 171, 270, 271, 173, 172, 271, 272, 174, 173, 272, 273, 175, 174, 273, 274, 176, 175, 274, 275, 177, 176, 275, 276, 178, 177, 276, 277, 278, 179, 178, 277, 180, 179, 278, 279, 181, 180, 279, 280, 182, 181, 280, 281, 183, 182, 281, 282, 184, 183, 282, 283, 185, 184, 283, 284, 186, 185, 284, 245, 187, 186, 245, 246, 188, 187, 246, 247, 189, 188, 247, 248, 190, 189, 248, 249, 191, 190, 249, 250, 192, 191, 250, 251, 193, 192, 251, 252, 194, 193, 252, 253, 195, 194, 253, 254, 196, 195, 254, 255, 256, 197, 196, 255, 198, 197, 256, 257, 199, 198, 257, 258, 200, 199, 258, 259, 201, 200, 259, 260, 202, 201, 260, 261, 203, 202, 261, 262, 204, 203, 262, 263, 165, 204, 263, 264, 110, 109, 384, 385, 109, 108, 383, 384, 108, 107, 382, 383, 107, 106, 381, 382, 106, 105, 380, 381, 105, 104, 379, 380, 104, 137, 378, 379, 137, 103, 377, 378, 103, 138, 376, 377, 375, 376, 138, 102, 102, 101, 374, 375, 101, 100, 373, 374, 100, 99, 372, 373, 99, 98, 371, 372, 97, 370, 371, 98, 97, 128, 369, 370, 128, 146, 368, 369, 146, 127, 367, 368, 127, 164, 366, 367, 164, 126, 365, 366, 126, 125, 404, 365, 125, 124, 403, 404, 124, 123, 402, 403, 123, 122, 401, 402, 122, 121, 400, 401, 121, 120, 399, 400, 120, 156, 398, 399, 397, 398, 156, 119, 119, 155, 396, 397, 155, 118, 395, 396, 118, 117, 394, 395, 117, 116, 393, 394, 116, 115, 392, 393, 115, 114, 391, 392, 114, 113, 390, 391, 113, 112, 389, 390, 112, 147, 388, 389, 387, 388, 147, 111, 111, 129, 386, 387, 385, 386, 129, 110, 246, 245, 94, 163, 247, 246, 163, 95, 248, 247, 95, 145, 249, 248, 145, 96, 250, 249, 96, 65, 251, 250, 65, 66, 252, 251, 66, 67, 253, 252, 67, 68, 254, 253, 68, 69, 255, 254, 69, 70, 139, 256, 255, 70, 257, 256, 139, 71, 258, 257, 71, 136, 259, 258, 136, 72, 260, 259, 72, 73, 261, 260, 73, 74, 262, 261, 74, 75, 263, 262, 75, 76, 264, 263, 76, 77, 265, 264, 77, 78, 130, 266, 265, 78, 267, 266, 130, 79, 148, 268, 267, 79, 269, 268, 148, 80, 270, 269, 80, 81, 271, 270, 81, 82, 272, 271, 82, 83, 273, 272, 83, 84, 274, 273, 84, 85, 275, 274, 85, 86, 276, 275, 86, 154, 277, 276, 154, 87, 157, 278, 277, 87, 279, 278, 157, 88, 280, 279, 88, 89, 281, 280, 89, 90, 282, 281, 90, 91, 283, 282, 91, 92, 284, 283, 92, 93, 245, 284, 93, 94, 286, 285, 186, 187, 287, 286, 187, 188, 288, 287, 188, 189, 289, 288, 189, 190, 290, 289, 190, 191, 291, 290, 191, 192, 292, 291, 192, 193, 293, 292, 193, 194, 294, 293, 194, 195, 295, 294, 195, 196, 197, 296, 295, 196, 297, 296, 197, 198, 298, 297, 198, 199, 299, 298, 199, 200, 300, 299, 200, 201, 301, 300, 201, 202, 302, 301, 202, 203, 303, 302, 203, 204, 304, 303, 204, 165, 305, 304, 165, 166, 167, 306, 305, 166, 307, 306, 167, 168, 169, 308, 307, 168, 309, 308, 169, 170, 310, 309, 170, 171, 311, 310, 171, 172, 312, 311, 172, 173, 313, 312, 173, 174, 314, 313, 174, 175, 315, 314, 175, 176, 316, 315, 176, 177, 317, 316, 177, 178, 179, 318, 317, 178, 319, 318, 179, 180, 320, 319, 180, 181, 321, 320, 181, 182, 322, 321, 182, 183, 323, 322, 183, 184, 324, 323, 184, 185, 285, 324, 185, 186, 326, 325, 285, 286, 327, 326, 286, 287, 328, 327, 287, 288, 329, 328, 288, 289, 330, 329, 289, 290, 331, 330, 290, 291, 332, 331, 291, 292, 333, 332, 292, 293, 334, 333, 293, 294, 335, 334, 294, 295, 296, 336, 335, 295, 337, 336, 296, 297, 338, 337, 297, 298, 339, 338, 298, 299, 340, 339, 299, 300, 341, 340, 300, 301, 342, 341, 301, 302, 343, 342, 302, 303, 344, 343, 303, 304, 345, 344, 304, 305, 306, 346, 345, 305, 347, 346, 306, 307, 308, 348, 347, 307, 349, 348, 308, 309, 350, 349, 309, 310, 351, 350, 310, 311, 352, 351, 311, 312, 353, 352, 312, 313, 354, 353, 313, 314, 355, 354, 314, 315, 356, 355, 315, 316, 357, 356, 316, 317, 318, 358, 357, 317, 359, 358, 318, 319, 360, 359, 319, 320, 361, 360, 320, 321, 362, 361, 321, 322, 363, 362, 322, 323, 364, 363, 323, 324, 325, 364, 324, 285, 366, 365, 225, 224, 367, 366, 224, 223, 368, 367, 223, 222, 369, 368, 222, 221, 370, 369, 221, 220, 371, 370, 220, 219, 372, 371, 219, 218, 373, 372, 218, 217, 374, 373, 217, 216, 375, 374, 216, 215, 215, 214, 376, 375, 377, 376, 214, 213, 378, 377, 213, 212, 379, 378, 212, 211, 380, 379, 211, 210, 381, 380, 210, 209, 382, 381, 209, 208, 383, 382, 208, 207, 384, 383, 207, 206, 385, 384, 206, 205, 205, 244, 386, 385, 387, 386, 244, 243, 243, 242, 388, 387, 389, 388, 242, 241, 390, 389, 241, 240, 391, 390, 240, 239, 392, 391, 239, 238, 393, 392, 238, 237, 394, 393, 237, 236, 395, 394, 236, 235, 396, 395, 235, 234, 397, 396, 234, 233, 233, 232, 398, 397, 399, 398, 232, 231, 400, 399, 231, 230, 401, 400, 230, 229, 402, 401, 229, 228, 403, 402, 228, 227, 404, 403, 227, 226, 365, 404, 226, 225]
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                            point3f[] points = [(0, 15.907412, -1.133012), (-0.06699371, 15.907412, -1.133012), (-0.06699371, 15.907412, -1.0122136), (4.7683716e-7, 15.907412, -0.99902534), (0, 15.907412, -1.4009855), (-0.06699371, 15.907412, -1.3877972), (-0.06699371, 15.907412, -1.2669988), (0, 15.907412, -1.2669988), (0.20098019, 15.907412, -1.2000053), (0.06699324, 15.907412, -1.2000053), (0.06699324, 15.907412, -1.133012), (0.1877923, 15.907412, -1.133012), (0, 15.907412, -1.2000053), (-0.06699371, 15.907412, -1.2000053), (-0.20097971, 15.907412, -1.2000053), (-0.18779182, 15.907412, -1.133012), (0.1877923, 15.907412, -1.2669988), (0.06699324, 15.907412, -1.2669988), (-0.18779182, 15.907412, -1.2669988), (0.06699324, 15.907412, -1.0122136), (0.06699324, 15.907412, -1.3877972), (0.056993008, 15.907412, -1.3897661), (0.056993008, 15.907412, -1.2669988), (0.056993008, 15.907412, -1.2000053), (0.056993008, 15.907412, -1.133012), (0.056993008, 15.907412, -1.0102447), (-0.18984795, 15.907412, -1.1434592), (-0.06699276, 15.907411, -1.1434592), (4.7683716e-7, 15.907411, -1.1434592), (0.056993008, 15.907412, -1.1434592), (0.06699324, 15.907412, -1.1434592), (0.18984842, 15.907412, -1.1434592), (-0.056533813, 15.907412, -1.0101545), (-0.05653429, 15.907412, -1.133012), (-0.056533813, 15.907411, -1.1434592), (-0.05653429, 15.907412, -1.2000053), (-0.05653429, 15.907412, -1.2669988), (-0.05653429, 15.907412, -1.3898563), (-0.18984175, 15.907412, -1.2565857), (-0.06699371, 15.907412, -1.2565857), (-0.05653429, 15.907412, -1.2565857), (0, 15.907412, -1.2565857), (0.056993008, 15.907412, -1.2565857), (0.06699324, 15.907412, -1.2565857), (0.18984127, 15.907412, -1.2565857), (0.17739058, 15.907412, -1.133012), (0.17926979, 15.907411, -1.1434592), (0.18944263, 15.907412, -1.2000053), (0.17926359, 15.907412, -1.2565857), (0.17738962, 15.907412, -1.2669988), (-0.06699276, 15.907412, -1.3757572), (-0.056533813, 15.907412, -1.377611), (0, 15.907412, -1.3876308), (0.056993008, 15.907412, -1.3775296), (0.06699419, 15.907412, -1.3757572), (-0.17732859, 15.907412, -1.133012), (-0.17920732, 15.907411, -1.1434592), (-0.18937445, 15.907412, -1.2000053), (-0.1792016, 15.907412, -1.2565857), (-0.17732859, 15.907412, -1.2669988), (-0.06699371, 15.907412, -1.02201), (-0.05653429, 15.907412, -1.0201181), (0, 15.907412, -1.0098915), (0.056993008, 15.907412, -1.0202011), (0.06699324, 15.907412, -1.02201), (-0.18779182, 15.914999, -1.2669988), (-0.18984175, 15.914999, -1.2565857), (-0.20097971, 15.914999, -1.2000053), (-0.18984795, 15.914999, -1.1434592), (-0.18779182, 15.914999, -1.133012), (-0.17732859, 15.914999, -1.133012), (-0.06699371, 15.914999, -1.133012), (-0.06699371, 15.914999, -1.02201), (-0.06699371, 15.914999, -1.0122136), (-0.056533813, 15.914999, -1.0101545), (4.7683716e-7, 15.914999, -0.99902534), (0.056993008, 15.914999, -1.0102447), (0.06699324, 15.914999, -1.0122136), (0.06699324, 15.914999, -1.02201), (0.06699324, 15.914999, -1.133012), (0.17739058, 15.914999, -1.133012), (0.1877923, 15.914999, -1.133012), (0.18984842, 15.914999, -1.1434592), (0.20098019, 15.914999, -1.2000053), (0.18984127, 15.914999, -1.2565857), (0.1877923, 15.914999, -1.2669988), (0.17738962, 15.914999, -1.2669988), (0.06699324, 15.914999, -1.2669988), (0.06699419, 15.914999, -1.3757572), (0.06699324, 15.914999, -1.3877972), (0.056993008, 15.914999, -1.3897661), (0, 15.914999, -1.4009855), (-0.05653429, 15.914999, -1.3898563), (-0.06699371, 15.914999, -1.3877972), (-0.06699276, 15.914999, -1.3757572), (-0.06699371, 15.914999, -1.2669988), (-0.17732859, 15.914999, -1.2669988), (-0.27451158, 17.155155, -1.2669988), (-0.2775085, 17.155155, -1.2565857), (-0.29378963, 17.155155, -1.2000054), (-0.27751803, 17.155155, -1.1434593), (-0.27451158, 17.155155, -1.1330119), (-0.25921702, 17.155155, -1.1330119), (-0.06699371, 17.155155, -1.1330119), (-0.06699371, 17.155155, -0.9339266), (-0.06699371, 17.155155, -0.9192821), (-0.056533813, 17.155155, -0.91620433), (-2.3841858e-7, 17.155155, -0.8995677), (0.05699277, 17.155155, -0.91633916), (0.06699324, 17.155155, -0.9192821), (0.06699324, 17.155155, -0.9339266), (0.06699324, 17.155155, -1.1330119), (0.2593069, 17.155155, -1.1330119), (0.27451205, 17.155155, -1.1330119), (0.2775185, 17.155155, -1.1434593), (0.29379034, 17.155155, -1.2000054), (0.27750826, 17.155155, -1.2565857), (0.27451205, 17.155155, -1.2669988), (0.2593069, 17.155155, -1.2669988), (0.06699324, 17.155155, -1.2669988), (0.06699324, 17.155155, -1.4627302), (0.06699395, 17.155155, -1.4807287), (0.05699277, 17.155155, -1.4836717), (7.1525574e-7, 17.155155, -1.5004431), (-0.05653453, 17.155155, -1.4838065), (-0.06699276, 17.155155, -1.4807287), (-0.06699371, 17.155155, -1.4627302), (-0.06699371, 17.155155, -1.2669988), (-0.25921702, 17.155155, -1.2669988), (0.06699395, 17.155155, -1.123232), (0.06699419, 15.914999, -1.123232), (0.06699419, 15.907412, -1.123232), (0.056993008, 15.907412, -1.1230726), (0, 15.907412, -1.1221642), (-0.05653429, 15.907412, -1.1230652), (-0.06699276, 15.907412, -1.123232), (-0.06699276, 15.914999, -1.123232), (-0.06699276, 17.155155, -1.123232), (-0.07635999, 17.155155, -1.1330119), (-0.07635975, 15.914999, -1.133012), (-0.07635975, 15.907412, -1.133012), (-0.07651949, 15.907412, -1.1434592), (-0.07738352, 15.907412, -1.2000053), (-0.07651949, 15.907412, -1.2565857), (-0.0763607, 15.907412, -1.2669988), (-0.0763607, 15.914999, -1.2669988), (-0.0763607, 17.155155, -1.2669988), (0.07601261, 17.155155, -1.1330119), (0.07601261, 15.914999, -1.133012), (0.07601261, 15.907412, -1.133012), (0.076165676, 15.907412, -1.1434592), (0.0769968, 15.907412, -1.2000053), (0.07616472, 15.907412, -1.2565857), (0.07601261, 15.907412, -1.2669988), (0.07601261, 15.914999, -1.2669988), (0.07601261, 17.155155, -1.2669988), (0.06699324, 17.155155, -1.2767239), (0.06699324, 15.914999, -1.2767237), (0.06699324, 15.907412, -1.2767237), (0.056993008, 15.907412, -1.2768823), (0, 15.907412, -1.2777855), (-0.05653429, 15.907412, -1.2768897), (-0.06699371, 15.907412, -1.2767237), (-0.06699371, 15.914999, -1.2767237), (-0.06699371, 17.155155, -1.2767239), (0.06699324, 16.93602, -1.0122135), (0.06699324, 16.93602, -1.02201), (0.06699395, 16.93602, -1.123232), (0.06699324, 16.93602, -1.1330119), (0.07601261, 16.93602, -1.1330119), (0.17739058, 16.93602, -1.1330119), (0.1877923, 16.93602, -1.1330119), (0.18984866, 16.93602, -1.1434593), (0.20098019, 16.93602, -1.2000054), (0.18984151, 16.93602, -1.2565858), (0.1877923, 16.93602, -1.2669986), (0.17738986, 16.93602, -1.2669986), (0.07601261, 16.93602, -1.2669986), (0.06699324, 16.93602, -1.2669986), (0.06699324, 16.93602, -1.2767239), (0.06699395, 16.93602, -1.3757573), (0.06699324, 16.93602, -1.3877974), (0.05699277, 16.93602, -1.3897661), (-2.3841858e-7, 16.93602, -1.4009855), (-0.05653453, 16.93602, -1.3898563), (-0.066993475, 16.93602, -1.3877974), (-0.066993, 16.93602, -1.3757573), (-0.066993475, 16.93602, -1.2767239), (-0.066993475, 16.93602, -1.2669986), (-0.0763607, 16.93602, -1.2669986), (-0.17732882, 16.93602, -1.2669986), (-0.18779159, 16.93602, -1.2669986), (-0.18984175, 16.93602, -1.2565858), (-0.20097947, 16.93602, -1.2000054), (-0.18984818, 16.93602, -1.1434593), (-0.18779159, 16.93602, -1.1330119), (-0.17732882, 16.93602, -1.1330119), (-0.07635975, 16.93602, -1.1330119), (-0.066993475, 16.93602, -1.1330119), (-0.066993, 16.93602, -1.123232), (-0.066993475, 16.93602, -1.02201), (-0.066993475, 16.93602, -1.0122135), (-0.056533575, 16.93602, -1.0101545), (7.1525574e-7, 16.93602, -0.99902534), (0.05699277, 16.93602, -1.0102447), (0.06699324, 17.036436, -0.9339266), (0.06699324, 17.036436, -0.9192821), (0.05699277, 17.036436, -0.91633916), (-2.3841858e-7, 17.036436, -0.8995677), (-0.056533813, 17.036436, -0.91620433), (-0.06699371, 17.036436, -0.9192821), (-0.06699371, 17.036436, -0.9339266), (-0.06699276, 17.036436, -1.123232), (-0.06699371, 17.036436, -1.1330119), (-0.07635999, 17.036434, -1.1330119), (-0.25921726, 17.036434, -1.1330119), (-0.2745118, 17.036434, -1.1330119), (-0.27751827, 17.036434, -1.1434593), (-0.29378986, 17.036434, -1.2000054), (-0.27750874, 17.036434, -1.2565857), (-0.2745118, 17.036434, -1.2669988), (-0.25921726, 17.036434, -1.2669988), (-0.0763607, 17.036434, -1.2669988), (-0.06699371, 17.036436, -1.2669988), (-0.06699371, 17.036436, -1.2767239), (-0.06699371, 17.036436, -1.4627303), (-0.06699276, 17.036436, -1.4807286), (-0.05653453, 17.036436, -1.4838064), (7.1525574e-7, 17.036436, -1.5004431), (0.05699277, 17.036436, -1.4836717), (0.06699395, 17.036436, -1.4807286), (0.06699324, 17.036436, -1.4627303), (0.06699324, 17.036436, -1.2767239), (0.06699324, 17.036436, -1.2669988), (0.07601261, 17.036436, -1.2669988), (0.2593069, 17.036436, -1.2669988), (0.27451205, 17.036436, -1.2669988), (0.27750826, 17.036436, -1.2565857), (0.29379034, 17.036434, -1.2000054), (0.2775185, 17.036434, -1.1434593), (0.27451205, 17.036436, -1.1330119), (0.2593069, 17.036436, -1.1330119), (0.07601261, 17.036436, -1.1330119), (0.06699324, 17.036436, -1.1330119), (0.06699395, 17.036436, -1.123232), (-0.06699276, 16.927628, -1.3757573), (-0.06699371, 16.927628, -1.2767237), (-0.06699371, 16.927628, -1.2669989), (-0.0763607, 16.927628, -1.2669988), (-0.17732859, 16.927628, -1.2669988), (-0.18779182, 16.927628, -1.2669989), (-0.18984175, 16.927628, -1.2565858), (-0.20097971, 16.927628, -1.2000054), (-0.18984795, 16.927628, -1.1434593), (-0.18779182, 16.927628, -1.1330119), (-0.17732859, 16.927628, -1.1330119), (-0.07635975, 16.927628, -1.1330119), (-0.06699371, 16.927628, -1.1330119), (-0.06699276, 16.927628, -1.123232), (-0.06699371, 16.927628, -1.0220101), (-0.06699371, 16.927628, -1.0122135), (-0.056533813, 16.927628, -1.0101545), (4.7683716e-7, 16.927628, -0.99902534), (0.05699277, 16.927628, -1.0102447), (0.06699324, 16.927628, -1.0122135), (0.06699324, 16.927628, -1.02201), (0.06699395, 16.927628, -1.123232), (0.06699324, 16.927628, -1.1330119), (0.07601261, 16.927628, -1.1330119), (0.17739058, 16.927628, -1.1330119), (0.1877923, 16.927628, -1.1330119), (0.18984866, 16.927628, -1.1434593), (0.20098019, 16.927628, -1.2000054), (0.18984151, 16.927628, -1.2565857), (0.1877923, 16.927628, -1.2669989), (0.17738986, 16.927628, -1.2669988), (0.07601261, 16.927628, -1.2669988), (0.06699324, 16.927628, -1.2669989), (0.06699324, 16.927628, -1.2767239), (0.06699395, 16.927628, -1.3757572), (0.06699324, 16.927628, -1.3877974), (0.05699277, 16.927628, -1.3897661), (0, 16.927628, -1.4009855), (-0.05653429, 16.927628, -1.3898563), (-0.06699371, 16.927628, -1.3877974), (-0.066993, 16.944002, -1.3826705), (-0.066993475, 16.944002, -1.2767239), (-0.066993475, 16.944002, -1.2669986), (-0.0763607, 16.944002, -1.2669986), (-0.1838386, 16.944002, -1.2669986), (-0.19468522, 16.944002, -1.2669986), (-0.19681048, 16.944002, -1.2565858), (-0.20835733, 16.944002, -1.2000054), (-0.1968174, 16.944002, -1.1434593), (-0.19468522, 16.944002, -1.1330119), (-0.18383765, 16.944002, -1.1330119), (-0.07635975, 16.944002, -1.1330119), (-0.066993475, 16.944002, -1.1330119), (-0.066993, 16.944002, -1.123232), (-0.066993, 16.944002, -1.0150083), (-0.066993475, 16.944002, -1.0048264), (-0.05653453, 16.944002, -1.0026864), (7.1525574e-7, 16.944002, -0.9911195), (0.05699277, 16.944002, -1.0027802), (0.06699324, 16.944002, -1.0048264), (0.06699324, 16.944002, -1.0150083), (0.06699395, 16.944002, -1.123232), (0.06699324, 16.944002, -1.1330119), (0.07601261, 16.944002, -1.1330119), (0.18390203, 16.944002, -1.1330119), (0.1946857, 16.944002, -1.1330119), (0.19681787, 16.944002, -1.1434593), (0.20835781, 16.944002, -1.2000054), (0.19681, 16.944002, -1.2565858), (0.19468498, 16.944002, -1.2669986), (0.18390203, 16.944002, -1.2669986), (0.07601261, 16.944002, -1.2669986), (0.06699324, 16.944002, -1.2669986), (0.06699324, 16.944002, -1.2767239), (0.06699395, 16.944002, -1.3826705), (0.06699324, 16.944002, -1.3951844), (0.05699277, 16.944002, -1.3972305), (-2.3841858e-7, 16.944002, -1.4088913), (-0.05653453, 16.944002, -1.3973244), (-0.066993, 16.944002, -1.3951844), (-0.06699371, 17.02886, -1.4561687), (-0.06699371, 17.02886, -1.2767239), (-0.06699371, 17.02886, -1.2669988), (-0.0763607, 17.02886, -1.2669988), (-0.25303912, 17.02886, -1.2669988), (-0.26796913, 17.028858, -1.2669988), (-0.270895, 17.028858, -1.2565857), (-0.28678775, 17.02886, -1.2000054), (-0.2709036, 17.028858, -1.1434593), (-0.26796913, 17.028858, -1.1330119), (-0.25303912, 17.02886, -1.1330119), (-0.0763607, 17.02886, -1.1330119), (-0.06699371, 17.02886, -1.1330119), (-0.06699276, 17.02886, -1.123232), (-0.06699371, 17.02886, -0.9405719), (-0.06699371, 17.02886, -0.92629313), (-0.05653453, 17.02886, -0.92329216), (7.1525574e-7, 17.02886, -0.9070711), (0.05699277, 17.02886, -0.92342365), (0.06699324, 17.02886, -0.92629313), (0.06699324, 17.02886, -0.9405719), (0.06699395, 17.02886, -1.123232), (0.06699324, 17.02886, -1.1330119), (0.07601261, 17.02886, -1.1330119), (0.25312638, 17.02886, -1.1330119), (0.2679696, 17.02886, -1.1330119), (0.2709043, 17.02886, -1.1434593), (0.28678823, 17.02886, -1.2000054), (0.2708938, 17.02886, -1.2565857), (0.2679696, 17.02886, -1.2669988), (0.25312638, 17.02886, -1.2669988), (0.07601261, 17.02886, -1.2669988), (0.06699324, 17.02886, -1.2669988), (0.06699324, 17.02886, -1.2767239), (0.06699324, 17.02886, -1.4561688), (0.06699324, 17.02886, -1.4737177), (0.05699277, 17.02886, -1.476587), (-2.3841858e-7, 17.02886, -1.4929398), (-0.056533813, 17.02886, -1.4767185), (-0.06699371, 17.02886, -1.4737177), (-0.06699371, 17.04524, -1.4627303), (-0.06699371, 17.04524, -1.2767239), (-0.06699371, 17.04524, -1.2669988), (-0.0763607, 17.04524, -1.2669988), (-0.25921726, 17.04524, -1.2669988), (-0.2745118, 17.04524, -1.2669988), (-0.27750874, 17.04524, -1.2565857), (-0.29378986, 17.04524, -1.2000054), (-0.27751827, 17.04524, -1.1434593), (-0.2745118, 17.04524, -1.1330119), (-0.25921726, 17.04524, -1.1330119), (-0.07635999, 17.04524, -1.1330119), (-0.06699371, 17.04524, -1.1330119), (-0.06699276, 17.04524, -1.123232), (-0.06699371, 17.04524, -0.9339266), (-0.06699371, 17.04524, -0.9192821), (-0.056533813, 17.04524, -0.91620433), (-2.3841858e-7, 17.04524, -0.8995677), (0.05699277, 17.04524, -0.91633916), (0.06699324, 17.04524, -0.9192821), (0.06699324, 17.04524, -0.9339266), (0.06699395, 17.04524, -1.123232), (0.06699324, 17.04524, -1.1330119), (0.07601261, 17.04524, -1.1330119), (0.2593069, 17.04524, -1.1330119), (0.27451205, 17.04524, -1.1330119), (0.2775185, 17.04524, -1.1434593), (0.29379034, 17.04524, -1.2000054), (0.27750826, 17.04524, -1.2565857), (0.27451205, 17.04524, -1.2669988), (0.2593069, 17.04524, -1.2669988), (0.07601261, 17.04524, -1.2669988), (0.06699324, 17.04524, -1.2669988), (0.06699324, 17.04524, -1.2767239), (0.06699324, 17.04524, -1.4627303), (0.06699395, 17.04524, -1.4807286), (0.05699277, 17.04524, -1.4836717), (7.1525574e-7, 17.04524, -1.5004431), (-0.05653453, 17.04524, -1.4838064), (-0.06699276, 17.04524, -1.4807286)]
                            float3 xformOp:translate:pivot = (-5.9604645e-8, 17.606653, -1.2000054)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_003_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_c_neck_003_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_002_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_c_neck_002_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_c_neck_001_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_c_neck_001_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_c_head_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (-2.962187, 0.000004603486, 0.00008122893),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (-1.88227511220063e-7, -1.3481271825592547, -4.559612355736679),
                }
                float3 xformOp:translate:pivot = (0, 16.47633, -1.2000053)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_c_head_grp_"
                {
                    float3 xformOp:translate:pivot = (0, 0, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_cable_cap_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.08243250131607055, 18.104001693725586, -2.399731254577637)
                        float3 xformOp:translate:rotatePivot = (0, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0.32, 0, -0.32)
                        float3 xformOp:translate:scalePivot = (0, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_cable_cap_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-0.717567629814148, 18.104001693725586, -2.4016924858093263)
                        float3 xformOp:translate:rotatePivot = (0, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0.32, 0, -0.32)
                        float3 xformOp:translate:scalePivot = (0, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (0.8024325341178894, 18.824002011558534, -1.4416924025665292)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, -0.960415, -0.960415)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x3_thick_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (-0.3575676709220895, 18.02399907901001, -0.04190747996673583)
                        float3 xformOp:translate:rotatePivot = (0.35749993, 0.40031186, 1.1598299)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.8006237, -2.3196597)
                        float3 xformOp:translate:scalePivot = (0.35749993, 0.40031186, 1.1598299)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (1.2024293378819257, 17.308628143362455, 0.7181167977128684)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (1.2024293378819222, 17.308628143362455, 1.5181198494706807)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_pin_2l_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -3.1805547e-15, 90)
                        double3 xformOp:translate = (-0.31759718356590516, 17.224005087158204, -0.7140357699047083)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.88, 0.89, -0.01)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_perpendicular_3l_2_pin_holes_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (1.2024354011013032, 17.220705170839437, 1.558090934549714)
                        float3 xformOp:translate:rotatePivot = (0.39997885, 1.1542406, 0.39999387)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7999727, -0.7542618, -1.5542345)
                        float3 xformOp:translate:scalePivot = (0.39997885, 1.1542406, 0.39999387)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_perpendicular_3l_2_pin_holes_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (-0.3975668877170563, 17.220705170839437, 1.558090934549714)
                        float3 xformOp:translate:rotatePivot = (0.39997885, 1.1542406, 0.39999387)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7999727, -0.7542618, -1.5542345)
                        float3 xformOp:translate:scalePivot = (0.39997885, 1.1542406, 0.39999387)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_holes_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (0.4024262398674004, 17.060703803508886, -0.0019062664161685118)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_axle_pin_friction_r_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (0.3224618703319579, 17.224005036473216, -1.681693783010102)
                        float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.1199986, 0.4899985, -0.63000005)
                        float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_axle_3_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (1.0424527084243003, 17.24765102394463, -0.14956455528736112)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_axle_3_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (-0.5558143276680406, 17.24765102394463, -0.14956455528736115)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x3_thin_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, -90, 0)
                        double3 xformOp:translate = (-1.1575675040290834, 18.53654372689428, -0.9169081642280578)
                        float3 xformOp:translate:rotatePivot = (0.5124999, 0.5156669, 1.1598299)
                        float3 xformOp:translate:rotatePivotTranslate = (0.6473299, -1.0313338, -0.6473299)
                        float3 xformOp:translate:scalePivot = (0.5124999, 0.5156669, 1.1598299)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_013_mesh"
                    {
                        double3 xformOp:translate = (-1.197568419556427, 18.020703782051214, -0.0019066240440368531)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x3_thin_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, -90, 0)
                        double3 xformOp:translate = (-1.1575675040290834, 18.93502593240537, -0.9169081642280578)
                        float3 xformOp:translate:rotatePivot = (0.5124999, 0.5156669, 1.1598299)
                        float3 xformOp:translate:rotatePivotTranslate = (0.6473299, -1.0313338, -0.6473299)
                        float3 xformOp:translate:scalePivot = (0.5124999, 0.5156669, 1.1598299)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_029_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (0.8024401635124209, 18.824002011558534, -0.8016924168716429)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, -0.640415, -0.640415)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_bracket_1x2_2x2_inverted_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 0)
                        double3 xformOp:translate = (-0.7975506812141419, 18.024014218589784, -1.1216924097190852)
                        float3 xformOp:translate:rotatePivot = (0.7999789, 0.8003348, 0.56018215)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.24015266, -1.3605169)
                        float3 xformOp:translate:scalePivot = (0.7999789, 0.8003348, 0.56018215)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_h_clip_double_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.4024277597858428, 18.339166731219976, 1.5980956647743234)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24353656, 0.6797043)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.120274544, 0, -1.4796832)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24353656, 0.6797043)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_028_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (0.40242242517013477, 18.340703774898657, -0.001914253438568414)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_h_clip_double_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-0.3975668877170577, 18.339166731219976, -0.0019142534385687424)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24353656, 0.6797043)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.4796832, 0, 0.120274544)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24353656, 0.6797043)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_perpendicular_3l_2_pin_holes_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (-0.3975668877170563, 18.820711274355066, 1.558090934549714)
                        float3 xformOp:translate:rotatePivot = (0.39997885, 1.1542406, 0.39999387)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7999727, -0.7542618, -1.5542345)
                        float3 xformOp:translate:scalePivot = (0.39997885, 1.1542406, 0.39999387)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_axle_and_pin_connector_perpendicular_3l_2_pin_holes_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (1.2024354011013032, 18.820711274355066, 1.5580909345497143)
                        float3 xformOp:translate:rotatePivot = (0.39997885, 1.1542406, 0.39999387)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7999727, -0.7542618, -1.5542345)
                        float3 xformOp:translate:scalePivot = (0.39997885, 1.1542406, 0.39999387)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (1.2024293378819257, 18.908628047995023, 0.7181167977128684)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_holes_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (0.4024262398674004, 18.660703708141458, -0.0019062664161685118)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (1.2024293378819222, 18.908628047995023, 1.5181198494706807)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_026_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-0.3975615531013489, 19.62070374628843, 1.5980845783103943)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_006_mesh"
                    {
                        double3 xformOp:translate = (-0.7975506812141436, 18.98401330306244, -2.721683194841003)
                        float3 xformOp:translate:pivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }
                }

                def Xform "Wall_e_RIG_v001_l_eye_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (-4.152920229927304e-10, 0, -1.1102230246251565e-16),
                    }
                    float3 xformOp:translate:pivot = (1.6011622, 18.581842, 0.79810685)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Mesh "Wall_e_RIG_v001_darkGrey_l_special_eye_mesh_02" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(3.6118279, 17.221191, 3.9976559), (4.8578396, 20.420181, 4.388768)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 7, 3, 7, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3]
                        int[] faceVertexIndices = [8, 9, 11, 10, 9, 8, 28, 29, 10, 11, 13, 12, 12, 13, 15, 14, 14, 15, 18, 17, 16, 18, 101, 100, 17, 16, 40, 39, 19, 21, 105, 104, 20, 19, 23, 22, 21, 20, 41, 43, 22, 23, 25, 24, 24, 25, 27, 26, 26, 27, 29, 28, 30, 31, 51, 50, 31, 30, 32, 33, 33, 32, 34, 35, 35, 34, 36, 37, 37, 36, 39, 38, 38, 40, 61, 60, 42, 41, 44, 45, 43, 42, 65, 64, 45, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 52, 53, 73, 72, 53, 52, 54, 55, 55, 54, 56, 57, 57, 56, 58, 59, 59, 58, 63, 62, 60, 61, 130, 131, 62, 63, 127, 126, 64, 65, 135, 134, 66, 67, 121, 120, 67, 66, 68, 69, 69, 68, 70, 71, 71, 70, 72, 73, 74, 75, 91, 90, 75, 74, 76, 77, 77, 76, 78, 79, 79, 78, 80, 81, 81, 80, 83, 82, 82, 83, 129, 128, 84, 85, 125, 124, 85, 84, 86, 87, 87, 86, 88, 89, 89, 88, 90, 91, 92, 93, 95, 94, 93, 92, 112, 113, 94, 95, 97, 96, 96, 97, 99, 98, 98, 99, 102, 101, 100, 102, 115, 114, 103, 105, 117, 116, 104, 103, 107, 106, 106, 107, 109, 108, 108, 109, 111, 110, 110, 111, 113, 112, 114, 115, 119, 118, 116, 117, 123, 122, 118, 119, 132, 133, 120, 121, 138, 139, 122, 123, 137, 136, 124, 125, 140, 141, 126, 127, 131, 130, 128, 129, 133, 132, 134, 135, 139, 138, 136, 137, 141, 140, 32, 30, 8, 10, 34, 32, 10, 12, 36, 34, 12, 14, 14, 17, 39, 36, 20, 22, 44, 41, 46, 44, 22, 24, 48, 46, 24, 26, 50, 48, 26, 28, 30, 50, 28, 8, 144, 145, 31, 33, 143, 144, 33, 35, 142, 143, 35, 37, 148, 149, 45, 47, 147, 148, 47, 49, 146, 147, 49, 51, 145, 146, 51, 31, 76, 74, 53, 55, 78, 76, 55, 57, 80, 78, 57, 59, 59, 62, 83, 80, 124, 121, 67, 84, 86, 84, 67, 69, 88, 86, 69, 71, 90, 88, 71, 73, 74, 90, 73, 53, 3, 75, 77, 2, 2, 77, 79, 1, 1, 79, 81, 0, 7, 85, 87, 6, 6, 87, 89, 5, 5, 89, 91, 4, 4, 91, 75, 3, 11, 9, 92, 94, 13, 11, 94, 96, 15, 13, 96, 98, 98, 101, 18, 15, 104, 106, 23, 19, 25, 23, 106, 108, 27, 25, 108, 110, 29, 27, 110, 112, 9, 29, 112, 92, 40, 16, 100, 114, 43, 64, 123, 117, 0, 115, 102, 99, 1, 0, 99, 97, 2, 1, 97, 95, 3, 2, 95, 93, 4, 3, 93, 113, 5, 4, 113, 111, 6, 5, 111, 109, 7, 6, 109, 107, 116, 7, 107, 103, 40, 114, 118, 61, 43, 117, 105, 21, 62, 126, 129, 83, 126, 130, 133, 129, 130, 61, 118, 133, 64, 134, 137, 123, 134, 138, 141, 137, 138, 121, 124, 141, 131, 142, 60, 119, 115, 0, 81, 82, 128, 132, 135, 149, 139, 85, 7, 116, 122, 136, 140, 125, 16, 17, 18, 19, 20, 21, 38, 39, 40, 41, 42, 43, 100, 101, 102, 103, 104, 105, 58, 56, 143, 142, 56, 54, 144, 143, 54, 52, 145, 144, 52, 72, 146, 145, 72, 70, 147, 146, 70, 68, 148, 147, 68, 66, 149, 148, 45, 149, 65, 42, 60, 142, 37, 38, 142, 63, 58, 131, 127, 142, 142, 127, 63, 65, 149, 135, 120, 149, 66, 139, 149, 120]
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                        point3f[] points = [(3.7792387, 19.927101, 4.100505), (4.103814, 19.758663, 4.100504), (4.3528023, 19.447426, 4.100504), (4.4875526, 19.04078, 4.100504), (4.4875536, 18.600628, 4.100504), (4.3528023, 18.193981, 4.100504), (4.103814, 17.882744, 4.100504), (3.7792377, 17.714306, 4.100505), (4.8578377, 19.132847, 4.0014954), (4.8540354, 19.13224, 3.9976568), (4.6667147, 19.709614, 4.0014954), (4.6633186, 19.707794, 3.9976568), (4.3135643, 20.151054, 4.0014954), (4.311096, 20.148087, 3.9976559), (3.85215, 20.389957, 4.0014954), (3.8512135, 20.386208, 3.9976568), (3.6118279, 20.416862, 4.0014954), (3.615903, 20.420181, 4.0017643), (3.6156673, 20.41634, 3.9976566), (3.6156673, 17.225067, 3.9976566), (3.6156359, 17.221191, 4.0014954), (3.6118279, 17.224545, 4.0014954), (3.85215, 17.25145, 4.0014963), (3.8512125, 17.2552, 3.9976566), (4.3135633, 17.490353, 4.0014954), (4.311096, 17.49332, 3.9976568), (4.6667147, 17.931793, 4.0014954), (4.6633186, 17.933615, 3.9976559), (4.8578396, 18.50856, 4.0014954), (4.8540363, 18.509167, 3.9976559), (4.8578377, 19.132847, 4.0975266), (4.8556843, 19.132313, 4.1024876), (4.6667147, 19.709614, 4.0975), (4.664937, 19.70813, 4.102436), (4.3135643, 20.151054, 4.0974665), (4.3124237, 20.148922, 4.102358), (3.85215, 20.389957, 4.097452), (3.8517628, 20.38752, 4.1023006), (3.6158848, 20.417656, 4.102332), (3.6160173, 20.420166, 4.097374), (3.6118279, 20.416851, 4.0985346), (3.6159449, 17.221231, 4.0974274), (3.6159315, 17.22379, 4.102353), (3.6118279, 17.224564, 4.098531), (3.85215, 17.25145, 4.097452), (3.8517618, 17.253887, 4.1023006), (4.3135643, 17.490353, 4.0974674), (4.3124237, 17.492485, 4.102358), (4.6667147, 17.931793, 4.0975), (4.664937, 17.933277, 4.102436), (4.8578396, 18.50856, 4.0975266), (4.855685, 18.509094, 4.1024885), (4.546913, 19.055538, 4.3868265), (4.541912, 19.054554, 4.3887672), (4.40306, 19.489403, 4.386898), (4.3987465, 19.486576, 4.3887672), (4.137331, 19.821365, 4.387003), (4.134371, 19.817078, 4.3887672), (3.790248, 20.000957, 4.387081), (3.7891874, 19.995853, 4.3887672), (3.616375, 20.219086, 4.245758), (3.6118279, 20.214394, 4.246172), (3.7451944, 20.001225, 4.388768), (3.7461214, 20.006542, 4.386984), (3.6118279, 17.427013, 4.246172), (3.616375, 17.422321, 4.245758), (3.790248, 17.64045, 4.38708), (3.7891922, 17.64553, 4.3887672), (4.13733, 17.820045, 4.387003), (4.1344013, 17.824291, 4.3887672), (4.40306, 18.152004, 4.386898), (4.3987827, 18.154812, 4.3887672), (4.546914, 18.585869, 4.3868265), (4.5419273, 18.586853, 4.3887672), (4.491356, 19.041386, 4.3887672), (4.4875526, 19.04078, 4.3849277), (4.3561983, 19.44925, 4.3887672), (4.3528023, 19.447426, 4.3849287), (4.106282, 19.761631, 4.3887672), (4.103814, 19.758663, 4.3849277), (3.7794256, 19.930859, 4.3887672), (3.7785063, 19.927101, 4.3849277), (3.7456398, 19.93116, 4.3849764), (3.7451334, 19.935043, 4.3887672), (3.7794247, 17.710552, 4.3887672), (3.7785053, 17.714306, 4.3849277), (4.1062813, 17.879776, 4.3887672), (4.103814, 17.882744, 4.3849287), (4.3561983, 18.192158, 4.3887672), (4.3528023, 18.193981, 4.3849277), (4.491357, 18.600021, 4.3887672), (4.4875536, 18.600628, 4.3849277), (4.491356, 19.041386, 3.9976559), (4.4875526, 19.04078, 4.0014954), (4.3561983, 19.44925, 3.9976559), (4.3528023, 19.447426, 4.0014954), (4.106282, 19.761631, 3.9976559), (4.103814, 19.758663, 4.0014954), (3.780181, 19.930851, 3.9976559), (3.7792377, 19.927101, 4.0014954), (3.6118279, 19.952393, 4.0012703), (3.6156673, 19.952152, 3.9976566), (3.6154118, 19.948315, 4.0012703), (3.6154118, 17.693094, 4.0012703), (3.6156673, 17.689255, 3.9976566), (3.6118279, 17.689016, 4.0012703), (3.78018, 17.710556, 3.9976559), (3.7792377, 17.714306, 4.0014954), (4.1062813, 17.879776, 3.9976559), (4.103814, 17.882744, 4.0014954), (4.3561983, 18.192158, 3.9976559), (4.3528023, 18.193981, 4.0014954), (4.491357, 18.600021, 3.9976559), (4.4875536, 18.600628, 4.0014954), (3.6118279, 19.952393, 4.100504), (3.6154118, 19.948315, 4.100504), (3.6154118, 17.693094, 4.100504), (3.6118279, 17.689016, 4.100504), (3.6118279, 19.952393, 4.246172), (3.6154184, 19.94831, 4.2457514), (3.7461214, 17.634865, 4.386984), (3.7451944, 17.640182, 4.388768), (3.6154184, 17.693096, 4.2457514), (3.6118279, 17.689013, 4.246172), (3.7451334, 17.706364, 4.3887672), (3.7456398, 17.710247, 4.3849764), (3.6756954, 20.03535, 4.3702164), (3.678855, 20.039913, 4.369129), (3.6784325, 19.939754, 4.3664103), (3.6764402, 19.943722, 4.369685), (3.6246777, 20.112556, 4.3184395), (3.6290808, 20.117687, 4.317375), (3.63173, 19.94601, 4.315727), (3.6284046, 19.950043, 4.3174906), (3.6246777, 17.52885, 4.3184414), (3.6282082, 17.523903, 4.317587), (3.6317883, 17.695406, 4.315696), (3.6284046, 17.691366, 4.3174906), (3.6756964, 17.606136, 4.3702164), (3.6789293, 17.601469, 4.3691015), (3.6784945, 17.701662, 4.3663073), (3.6764402, 17.697687, 4.369685), (3.8210058, 20.19424, 4.24469), (4.2248774, 19.985142, 4.2446804), (4.5339985, 19.598766, 4.244667), (4.7012987, 19.093925, 4.2446575), (4.7012997, 18.547482, 4.2446575), (4.5339985, 18.04264, 4.244667), (4.2248764, 17.656265, 4.2446804), (3.8210049, 17.44717, 4.244691)]
                        float3 xformOp:translate:pivot = (4.2471313, 18.820686, 4.193212)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_darkGrey_l_special_eye_mesh_01" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(0.4024353, 17.066202, 2.0065439), (3.6024342, 18.343906, 4.388768)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 5, 5, 4, 3, 3, 4, 4, 5, 4, 4, 4, 5, 3, 4, 4, 5, 4, 5, 3, 4, 3, 4, 4, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 5, 3, 4, 4, 5, 4, 5, 3, 4, 3, 4, 4, 4, 4, 3, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 5, 5, 4, 4, 3, 5, 3, 5, 5, 5, 3, 3, 3, 3, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3]
                        int[] faceVertexIndices = [29, 30, 93, 92, 30, 29, 34, 33, 31, 34, 378, 377, 32, 31, 325, 324, 33, 32, 380, 379, 35, 36, 95, 94, 36, 35, 38, 37, 37, 39, 375, 378, 39, 38, 369, 368, 40, 42, 420, 419, 41, 40, 321, 320, 42, 41, 44, 43, 43, 46, 422, 421, 45, 44, 79, 78, 46, 45, 74, 75, 47, 48, 202, 201, 48, 47, 52, 51, 51, 50, 71, 70, 49, 52, 64, 63, 53, 54, 207, 206, 54, 53, 56, 55, 55, 59, 421, 422, 57, 56, 338, 337, 58, 57, 83, 82, 59, 58, 69, 68, 60, 61, 65, 64, 61, 60, 209, 208, 62, 65, 370, 369, 63, 62, 97, 96, 66, 69, 90, 91, 67, 66, 323, 322, 68, 67, 419, 420, 70, 73, 382, 381, 72, 71, 88, 87, 73, 72, 336, 339, 75, 74, 197, 196, 76, 80, 431, 430, 77, 76, 372, 371, 78, 77, 318, 317, 80, 79, 320, 319, 81, 83, 331, 330, 82, 81, 91, 90, 84, 85, 99, 98, 85, 84, 89, 88, 86, 89, 379, 380, 87, 86, 333, 332, 92, 93, 101, 100, 94, 95, 103, 102, 96, 97, 105, 104, 98, 99, 107, 106, 100, 101, 109, 108, 102, 103, 111, 110, 104, 105, 113, 112, 106, 107, 115, 114, 108, 109, 117, 116, 110, 111, 121, 120, 112, 113, 125, 124, 114, 115, 128, 127, 116, 117, 132, 131, 118, 121, 131, 130, 119, 118, 144, 143, 120, 119, 126, 125, 122, 126, 171, 170, 123, 122, 155, 154, 124, 123, 136, 135, 127, 128, 135, 134, 129, 132, 477, 476, 130, 129, 179, 178, 133, 137, 163, 162, 134, 133, 138, 140, 137, 136, 152, 153, 139, 138, 446, 450, 140, 139, 475, 477, 141, 144, 178, 181, 142, 141, 145, 147, 143, 142, 168, 171, 146, 145, 174, 173, 147, 146, 149, 148, 148, 151, 169, 168, 150, 149, 410, 409, 151, 150, 166, 167, 153, 152, 274, 273, 154, 155, 266, 265, 156, 157, 161, 160, 157, 156, 293, 292, 158, 161, 394, 393, 159, 158, 390, 389, 160, 159, 165, 164, 162, 165, 447, 446, 164, 163, 444, 445, 167, 166, 289, 288, 170, 169, 473, 474, 172, 174, 181, 180, 173, 172, 177, 176, 175, 177, 459, 458, 176, 175, 411, 410, 180, 179, 460, 459, 182, 183, 187, 186, 183, 182, 232, 233, 184, 187, 383, 384, 185, 184, 356, 355, 186, 185, 385, 388, 188, 189, 192, 191, 189, 188, 234, 235, 190, 192, 388, 387, 191, 190, 367, 366, 193, 195, 426, 425, 194, 193, 199, 198, 195, 194, 315, 314, 196, 199, 424, 423, 198, 197, 218, 217, 201, 200, 210, 209, 203, 202, 213, 212, 204, 207, 423, 424, 205, 204, 222, 221, 206, 205, 344, 343, 208, 211, 366, 365, 211, 210, 237, 236, 212, 215, 228, 227, 214, 213, 381, 382, 215, 214, 342, 345, 216, 220, 429, 428, 217, 216, 316, 315, 219, 218, 317, 318, 220, 219, 364, 363, 221, 223, 348, 347, 223, 222, 230, 231, 224, 225, 239, 238, 225, 224, 227, 226, 226, 229, 384, 383, 229, 228, 346, 349, 231, 230, 350, 352, 233, 232, 240, 241, 235, 234, 242, 243, 236, 237, 245, 244, 238, 239, 247, 246, 241, 240, 248, 249, 243, 242, 250, 251, 244, 245, 253, 252, 246, 247, 255, 254, 249, 248, 256, 257, 251, 250, 258, 261, 252, 253, 264, 263, 254, 255, 268, 267, 257, 256, 270, 269, 259, 258, 263, 262, 260, 259, 284, 283, 261, 260, 271, 270, 262, 266, 303, 302, 265, 264, 275, 274, 267, 268, 276, 275, 269, 272, 478, 480, 272, 271, 313, 312, 273, 277, 299, 298, 277, 276, 280, 279, 278, 280, 480, 479, 279, 278, 451, 455, 281, 284, 302, 301, 282, 281, 285, 287, 283, 282, 310, 313, 286, 285, 291, 290, 287, 286, 305, 304, 288, 291, 301, 300, 290, 289, 416, 415, 292, 295, 405, 404, 294, 293, 297, 296, 295, 294, 398, 397, 296, 299, 455, 454, 298, 297, 445, 444, 300, 303, 474, 473, 304, 306, 311, 310, 306, 305, 309, 308, 307, 309, 415, 414, 308, 307, 441, 440, 312, 311, 440, 439, 314, 316, 359, 362, 319, 321, 329, 328, 322, 325, 326, 329, 324, 323, 335, 334, 327, 326, 377, 376, 328, 327, 432, 431, 330, 333, 334, 335, 332, 331, 337, 336, 339, 338, 340, 341, 341, 340, 343, 342, 345, 344, 347, 346, 349, 348, 358, 357, 351, 350, 425, 426, 352, 351, 354, 353, 353, 356, 357, 358, 355, 354, 362, 361, 360, 359, 428, 427, 361, 360, 386, 385, 363, 367, 435, 434, 365, 364, 374, 373, 368, 372, 437, 436, 371, 370, 373, 374, 376, 375, 436, 438, 387, 386, 433, 435, 389, 391, 448, 447, 391, 390, 393, 392, 392, 396, 463, 462, 395, 394, 400, 401, 396, 395, 408, 407, 397, 399, 406, 405, 399, 398, 454, 453, 401, 400, 404, 403, 402, 406, 471, 470, 403, 402, 418, 417, 407, 411, 465, 464, 409, 408, 412, 413, 413, 412, 417, 416, 414, 418, 469, 468, 427, 429, 434, 433, 430, 432, 438, 437, 439, 443, 479, 478, 442, 441, 468, 467, 443, 442, 452, 451, 449, 448, 462, 461, 450, 449, 457, 456, 453, 452, 472, 471, 456, 460, 476, 475, 458, 457, 466, 465, 461, 463, 464, 466, 467, 469, 470, 472, 378, 8, 36, 37, 35, 62, 369, 38, 84, 23, 379, 89, 59, 68, 420, 421, 47, 60, 64, 52, 48, 51, 70, 381, 54, 55, 422, 13, 65, 61, 373, 370, 71, 50, 85, 88, 58, 82, 90, 69, 8, 9, 95, 36, 35, 94, 97, 62, 63, 96, 0, 49, 84, 98, 22, 23, 9, 10, 103, 95, 94, 102, 105, 97, 96, 104, 1, 0, 0, 1, 107, 99, 98, 106, 21, 22, 10, 11, 111, 103, 102, 110, 113, 105, 104, 112, 2, 1, 1, 2, 115, 107, 106, 114, 20, 21, 11, 12, 121, 111, 110, 120, 125, 113, 112, 124, 3, 2, 2, 3, 128, 115, 114, 127, 19, 20, 116, 131, 121, 12, 124, 135, 3, 3, 135, 128, 127, 134, 140, 19, 168, 142, 147, 148, 133, 162, 446, 138, 153, 444, 163, 137, 152, 136, 123, 154, 151, 167, 473, 169, 150, 409, 413, 166, 145, 141, 181, 174, 182, 186, 388, 14, 188, 191, 366, 211, 28, 383, 187, 183, 350, 204, 424, 425, 47, 201, 209, 60, 48, 381, 213, 202, 207, 54, 13, 423, 208, 365, 373, 61, 203, 212, 227, 224, 204, 350, 230, 222, 232, 182, 14, 15, 188, 211, 236, 234, 210, 200, 4, 237, 27, 28, 183, 233, 240, 232, 15, 16, 234, 236, 244, 242, 237, 4, 5, 245, 4, 238, 246, 5, 26, 27, 233, 241, 248, 240, 16, 17, 242, 244, 252, 250, 245, 5, 6, 253, 5, 246, 254, 6, 25, 26, 241, 249, 256, 248, 17, 18, 250, 252, 263, 258, 253, 6, 7, 264, 6, 254, 267, 7, 24, 25, 249, 257, 256, 18, 261, 270, 264, 7, 275, 7, 267, 275, 480, 24, 257, 269, 286, 290, 309, 305, 281, 301, 291, 285, 439, 478, 272, 312, 153, 273, 298, 444, 152, 154, 265, 274, 288, 300, 473, 167, 309, 290, 415, 310, 282, 287, 304, 315, 194, 198, 217, 317, 218, 197, 74, 78, 317, 74, 45, 320, 79, 44, 41, 67, 322, 329, 419, 330, 335, 91, 81, 337, 331, 83, 57, 340, 338, 56, 53, 343, 340, 53, 206, 347, 344, 205, 221, 353, 358, 231, 352, 362, 354, 351, 426, 318, 374, 364, 219, 77, 371, 374, 318, 325, 31, 377, 326, 333, 86, 380, 334, 336, 72, 87, 332, 341, 382, 73, 339, 342, 214, 382, 341, 346, 228, 215, 345, 356, 184, 384, 357, 361, 385, 185, 355, 161, 157, 400, 394, 295, 397, 405, 401, 412, 408, 395, 316, 216, 428, 359, 80, 319, 328, 431, 220, 363, 434, 429, 372, 76, 430, 437, 367, 190, 387, 435, 39, 368, 436, 375, 386, 360, 427, 433, 438, 432, 327, 376, 308, 440, 311, 306, 445, 297, 293, 156, 164, 445, 156, 160, 389, 447, 165, 159, 296, 454, 398, 294, 176, 149, 146, 173, 180, 459, 177, 172, 416, 289, 166, 413, 417, 412, 401, 403, 292, 404, 400, 157, 176, 410, 149, 158, 393, 390, 391, 392, 462, 448, 411, 175, 458, 465, 307, 414, 468, 441, 406, 399, 453, 471, 470, 469, 418, 402, 464, 463, 396, 407, 467, 472, 452, 442, 461, 466, 457, 449, 378, 34, 29, 8, 29, 92, 9, 8, 92, 100, 10, 9, 100, 108, 11, 10, 108, 116, 12, 11, 419, 329, 321, 40, 421, 420, 42, 43, 13, 422, 46, 75, 423, 13, 75, 196, 425, 424, 199, 193, 362, 426, 195, 314, 14, 388, 192, 189, 15, 14, 189, 235, 16, 15, 235, 243, 17, 16, 243, 251, 18, 17, 251, 261, 260, 283, 313, 271, 259, 262, 302, 284, 474, 303, 266, 155, 170, 474, 155, 122, 119, 143, 171, 126, 178, 144, 118, 130, 139, 450, 456, 475, 19, 140, 477, 20, 19, 117, 109, 21, 20, 109, 101, 22, 21, 101, 93, 23, 22, 93, 30, 379, 23, 30, 33, 334, 380, 32, 324, 91, 335, 323, 66, 277, 279, 455, 299, 268, 24, 280, 276, 255, 25, 24, 268, 247, 26, 25, 255, 239, 27, 26, 247, 225, 28, 27, 239, 225, 226, 383, 28, 357, 384, 229, 349, 231, 358, 348, 223, 451, 278, 479, 443, 280, 24, 480, 476, 460, 179, 129, 19, 477, 132, 117, 50, 49, 0, 99, 85, 200, 203, 224, 238, 4, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480]
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                        point3f[] points = [(2.3176432, 17.413057, 2.3976552), (1.8511543, 17.506287, 2.3976552), (1.42167, 17.646084, 2.3976552), (1.0265102, 17.828033, 2.3976562), (2.3176432, 17.413057, 3.9976556), (1.8511543, 17.506287, 3.9976556), (1.42167, 17.646084, 3.9976556), (1.0265102, 17.828033, 3.9976566), (2.802434, 17.540695, 2.0065439), (2.3393745, 17.564754, 2.0065439), (1.9027834, 17.650818, 2.0065439), (1.4994869, 17.790432, 2.0065448), (1.174161, 17.976727, 2.0065439), (3.6024342, 17.540695, 3.1976554), (2.802434, 17.540695, 4.3887672), (2.3393745, 17.564754, 4.3887672), (1.9027834, 17.650818, 4.3887672), (1.4994869, 17.790432, 4.3887672), (1.174161, 17.976727, 4.3887672), (1.0104284, 17.799591, 2.2020996), (1.385067, 17.57373, 2.2021005), (1.8306427, 17.390978, 2.2020996), (2.3090134, 17.268253, 2.2021005), (2.802434, 17.220695, 2.2020996), (1.0104284, 17.799591, 4.1932116), (1.385067, 17.57373, 4.1932125), (1.8306427, 17.390978, 4.1932116), (2.3090134, 17.268253, 4.1932125), (2.802434, 17.220695, 4.1932116), (2.80266, 17.385193, 2.0065448), (2.802434, 17.377846, 2.0100248), (3.0064917, 17.385185, 2.0065439), (3.0064917, 17.37785, 2.010019), (2.9983768, 17.37785, 2.01002), (2.9983768, 17.385185, 2.0065448), (2.802434, 17.700695, 2.012283), (2.802434, 17.694956, 2.0065439), (2.9966955, 17.694956, 2.0065439), (2.9966955, 17.700695, 2.0122821), (3.0024338, 17.694956, 2.012283), (3.596696, 17.694956, 2.0065439), (3.596696, 17.700695, 2.012283), (3.6024342, 17.694956, 2.012283), (3.6024342, 17.694956, 2.3935974), (3.596696, 17.700695, 2.3935983), (3.596696, 17.700695, 2.4017131), (3.6024342, 17.694956, 2.4017131), (2.802434, 17.386433, 3.1976554), (2.8081722, 17.380695, 3.1976554), (2.7967024, 17.381077, 2.3976562), (2.802434, 17.374956, 2.3976552), (2.8081722, 17.380695, 2.4033945), (2.802434, 17.386433, 2.4033935), (3.596696, 17.380695, 3.1976554), (3.6024342, 17.386433, 3.1976554), (3.6024342, 17.386486, 2.4017503), (3.5968018, 17.380695, 2.4032876), (3.5969086, 17.375168, 2.3976552), (3.6024342, 17.376772, 2.3921077), (3.6024342, 17.38506, 2.3932903), (2.802434, 17.694956, 3.1976554), (2.8081722, 17.700695, 3.1976554), (2.802434, 17.700695, 2.3926551), (2.7966957, 17.694956, 2.3976552), (2.802434, 17.695168, 2.4031808), (2.8082256, 17.700695, 2.4017503), (3.5967312, 17.377869, 2.009998), (3.5967479, 17.385143, 2.0065448), (3.6024342, 17.384758, 2.0122907), (3.6024342, 17.376598, 2.0206945), (2.9983768, 17.380695, 2.4033945), (2.9983768, 17.374956, 2.3976562), (3.0064917, 17.374956, 2.3976552), (3.0064917, 17.380695, 2.4033935), (3.596696, 17.700695, 3.1976554), (3.6024342, 17.694956, 3.1976554), (3.3969088, 17.695168, 2.3976552), (3.398512, 17.700695, 2.4032037), (3.4067993, 17.700695, 2.4020202), (3.408226, 17.700695, 2.3935602), (3.4024343, 17.695168, 2.3921297), (3.597167, 17.066202, 2.3909242), (3.6024342, 17.074083, 2.3913105), (3.597167, 17.069393, 2.3976552), (2.802434, 17.066687, 2.390332), (2.8028698, 17.070156, 2.3976552), (3.0064917, 17.066696, 2.3903215), (3.0064917, 17.070171, 2.3976552), (2.9983768, 17.070171, 2.3976562), (2.9983768, 17.066696, 2.3903224), (3.6024342, 17.225136, 2.205734), (3.596696, 17.220695, 2.2020996), (2.3253002, 17.433256, 2.0065439), (2.3242064, 17.425964, 2.0100152), (2.354269, 17.700695, 2.012283), (2.3539324, 17.694956, 2.0065439), (2.3539324, 17.694956, 2.3976552), (2.354269, 17.700695, 2.391917), (2.2941265, 17.113712, 2.3903224), (2.2951126, 17.117065, 2.3976552), (1.8732758, 17.555674, 2.0065439), (1.87111, 17.54861, 2.0099695), (1.9337358, 17.750214, 2.012283), (1.9326153, 17.744568, 2.0065448), (1.9326153, 17.744568, 2.3976562), (1.9337358, 17.750214, 2.391918), (1.7910042, 17.236572, 2.3902996), (1.7924309, 17.239708, 2.3976562), (1.4733877, 17.720085, 2.0065448), (1.4697886, 17.71363, 2.009959), (1.5276794, 17.86475, 2.012283), (1.5256224, 17.859367, 2.0065439), (1.5256224, 17.859367, 2.3976552), (1.5276794, 17.86475, 2.391917), (1.3020878, 17.43671, 2.3902872), (1.3030558, 17.440067, 2.3976552), (1.1487064, 17.932966, 2.0065448), (1.1436701, 17.927422, 2.0097454), (1.1964645, 18.028128, 2.0065439), (1.2024355, 18.028652, 2.0122383), (1.2068796, 18.021732, 2.0124805), (1.1979694, 18.020102, 2.0065448), (1.2024355, 18.02976, 2.4017951), (1.1968031, 18.023907, 2.4032876), (1.2011347, 18.018288, 2.3976552), (1.2065849, 18.021875, 2.3921125), (1.2024355, 18.028961, 2.3933666), (0.8801203, 17.674578, 2.3902204), (0.88060474, 17.67828, 2.3976562), (1.0504284, 18.028076, 2.0086896), (1.0582142, 18.028116, 2.0065439), (1.0636187, 18.019848, 2.0065439), (1.0531731, 18.020178, 2.0092227), (0.40681267, 18.02901, 2.3950279), (0.41869926, 18.020586, 2.3905504), (0.42506123, 18.01878, 2.3976552), (0.40826607, 18.023907, 2.403486), (0.4024353, 18.029692, 2.4023569), (0.5983696, 18.029348, 2.2800443), (0.6054363, 18.029404, 2.2758024), (0.6062727, 18.021496, 2.2771194), (1.1966972, 18.187963, 2.0065448), (1.2024355, 18.187963, 2.012283), (1.2024355, 18.179848, 2.012283), (1.1966972, 18.179848, 2.0065448), (1.1966972, 18.338165, 2.0065448), (1.1966972, 18.343906, 2.012283), (1.2024355, 18.338165, 2.012283), (1.2024355, 18.338165, 2.3935974), (1.1966972, 18.343906, 2.3935983), (1.1966972, 18.343906, 2.4017131), (1.2024355, 18.338165, 2.4017131), (0.40817356, 18.023907, 3.1976564), (0.4024353, 18.029644, 3.1976554), (1.1966972, 18.023907, 3.1976564), (1.2024355, 18.029644, 3.1976554), (0.4024353, 18.338165, 3.1976554), (0.40817356, 18.343906, 3.1976564), (0.4206581, 18.343906, 2.3935268), (0.40640068, 18.338215, 2.3952749), (0.4024353, 18.338242, 2.4022577), (0.4082365, 18.343906, 2.401757), (0.4064331, 18.179848, 2.3952558), (0.4024353, 18.179848, 2.4023178), (0.4024353, 18.187963, 2.4023178), (0.4064331, 18.187963, 2.3952558), (1.1966972, 18.343906, 3.1976564), (1.2024355, 18.338165, 3.1976554), (1.2024355, 18.187963, 2.3935974), (1.2024355, 18.187963, 2.4017131), (1.2024355, 18.179848, 2.4017131), (1.2024355, 18.179848, 2.3935974), (1.0502796, 18.337986, 2.0087802), (1.0555134, 18.343906, 2.0119922), (1.0583477, 18.337986, 2.0065448), (1.0024948, 18.338036, 2.0422313), (1.008029, 18.343906, 2.0405958), (1.0065842, 18.338036, 2.0350091), (1.0580616, 18.179848, 2.0065448), (1.050394, 18.179695, 2.0087116), (1.0505247, 18.187963, 2.0086324), (1.0580616, 18.187963, 2.0065448), (2.80266, 17.385185, 4.388768), (2.802434, 17.37785, 4.385292), (3.0064917, 17.37785, 4.385292), (3.0064917, 17.385185, 4.3887672), (2.9983768, 17.385185, 4.388768), (2.9983768, 17.37785, 4.385293), (2.802434, 17.700695, 4.383029), (2.802434, 17.694956, 4.3887672), (3.0024338, 17.694956, 4.38303), (2.9966955, 17.700695, 4.383029), (2.9966955, 17.694956, 4.3887672), (3.6024342, 17.694956, 4.383029), (3.596696, 17.700695, 4.383029), (3.596696, 17.694956, 4.3887672), (3.6024342, 17.694956, 3.9935977), (3.596696, 17.700695, 3.9935987), (3.596696, 17.700695, 4.0017138), (3.6024342, 17.694956, 4.0017138), (2.7966957, 17.381077, 3.9976556), (2.802434, 17.386433, 3.9919174), (2.8081722, 17.380695, 3.9919183), (2.802434, 17.374956, 3.9976556), (3.6024342, 17.380695, 4.002657), (3.596696, 17.374956, 3.9976556), (3.5969086, 17.380695, 3.99213), (3.6024342, 17.386486, 3.9935606), (2.8082256, 17.700695, 3.9935606), (2.802434, 17.69506, 3.9920232), (2.7966957, 17.694956, 3.9976556), (2.802434, 17.700695, 4.002657), (2.9983768, 17.374956, 3.9976566), (2.9983768, 17.380695, 3.9919174), (3.0064917, 17.380695, 3.9919174), (3.0064917, 17.374956, 3.9976556), (3.4024343, 17.695168, 4.0031815), (3.4079819, 17.700695, 4.0015783), (3.4067993, 17.700695, 3.9932907), (3.3983393, 17.700695, 3.991865), (3.3969088, 17.695168, 3.9976556), (3.597167, 17.069393, 3.9976556), (3.6024342, 17.074083, 4.0040007), (3.597167, 17.066202, 4.004388), (2.8028698, 17.070156, 3.9976556), (2.802434, 17.066687, 4.00498), (2.9983768, 17.066696, 4.0049906), (2.9983768, 17.070171, 3.9976566), (3.0064917, 17.070171, 3.9976556), (3.0064917, 17.066696, 4.0049896), (3.6024342, 17.225136, 4.189578), (3.596696, 17.220695, 4.1932116), (2.3252974, 17.433235, 4.388768), (2.3242064, 17.425964, 4.385297), (2.354269, 17.700695, 4.383029), (2.3539324, 17.694956, 4.3887672), (2.354269, 17.700695, 4.003394), (2.3539324, 17.694956, 3.9976556), (2.2951126, 17.117065, 3.9976556), (2.2941265, 17.113712, 4.0049887), (1.873271, 17.55566, 4.3887672), (1.8711109, 17.548615, 4.3853483), (1.9337368, 17.750214, 4.38303), (1.9326153, 17.744568, 4.388768), (1.9337358, 17.750214, 4.003395), (1.9326153, 17.744568, 3.9976566), (1.7924309, 17.239708, 3.9976566), (1.7910042, 17.236572, 4.0050125), (1.4733953, 17.7201, 4.388768), (1.4697886, 17.71363, 4.385354), (1.5276794, 17.86475, 4.383029), (1.5256224, 17.859367, 4.3887672), (1.5276794, 17.86475, 4.003395), (1.5256224, 17.859367, 3.9976556), (1.3030558, 17.440067, 3.9976556), (1.3020821, 17.436699, 4.0050106), (1.1487312, 17.932995, 4.388768), (1.1436701, 17.927422, 4.3855667), (1.2068052, 18.021767, 4.38293), (1.2024355, 18.028614, 4.3831177), (1.1963615, 18.0282, 4.3887672), (1.1980028, 18.02013, 4.388768), (1.2024355, 18.028961, 4.0019455), (1.2067232, 18.021809, 4.0033836), (1.2011204, 18.018227, 3.9976556), (1.1969099, 18.023907, 3.992131), (1.2024355, 18.02976, 3.9935157), (0.88060474, 17.67828, 3.9976566), (0.8800926, 17.674551, 4.0050516), (1.0531731, 18.020178, 4.3860903), (1.0642347, 18.019588, 4.388768), (1.0580616, 18.027964, 4.3887672), (1.0504284, 18.028076, 4.3866215), (0.4024353, 18.029692, 3.992955), (0.4085617, 18.023907, 3.9915302), (0.42596626, 18.018574, 3.9976566), (0.41733074, 18.020866, 4.0041637), (0.40681267, 18.02901, 4.000285), (0.60563374, 18.029346, 4.119629), (0.598567, 18.029404, 4.115387), (0.6065054, 18.021496, 4.118331), (1.2024355, 18.187963, 4.383029), (1.1966972, 18.187963, 4.388768), (1.1966972, 18.179848, 4.388768), (1.2024355, 18.179848, 4.383029), (1.2024355, 18.338165, 4.383029), (1.1966972, 18.343906, 4.383029), (1.1966972, 18.338165, 4.388768), (1.2024355, 18.338165, 3.9935987), (1.1966972, 18.343906, 3.9935987), (1.1966972, 18.343906, 4.0017147), (1.2024355, 18.338165, 4.0017138), (0.4082365, 18.343906, 3.9935548), (0.4024353, 18.338203, 3.9930236), (0.40636826, 18.33826, 4.000017), (0.4206581, 18.343906, 4.0017853), (0.4064331, 18.187963, 4.0000563), (0.4024353, 18.187963, 3.992993), (0.4024353, 18.179848, 3.992993), (0.4064331, 18.179848, 4.0000563), (1.2024355, 18.187963, 3.9935987), (1.2024355, 18.187963, 4.0017138), (1.2024355, 18.179848, 4.0017138), (1.2024355, 18.179848, 3.9935987), (1.0583477, 18.337986, 4.3887672), (1.0555134, 18.343906, 4.38332), (1.0502796, 18.337986, 4.386532), (1.0024233, 18.3381, 4.3530903), (1.0065117, 18.338036, 4.36026), (1.0079575, 18.343906, 4.3546734), (1.0580616, 18.187963, 4.3887672), (1.050394, 18.188116, 4.3866005), (1.0505247, 18.179848, 4.3866787), (1.0580616, 18.179848, 4.3887672), (3.4081726, 17.694956, 4.3887672), (3.4081726, 17.700695, 4.383029), (3.4024343, 17.694956, 4.383029), (3.4064922, 17.700695, 3.1976564), (3.3983765, 17.700695, 3.1976554), (3.4024343, 17.694956, 2.012283), (3.4081726, 17.700695, 2.012283), (3.4081726, 17.694956, 2.0065439), (3.4064922, 17.385185, 2.0065448), (3.4064922, 17.37785, 2.01002), (3.3983765, 17.37785, 2.010019), (3.3983765, 17.385185, 2.0065439), (3.3983393, 17.534903, 2.0065448), (3.396802, 17.540695, 2.0121763), (3.4024343, 17.546432, 2.012283), (3.4074345, 17.540695, 2.0065439), (3.4064922, 17.066696, 2.3903224), (3.4064922, 17.070171, 2.3976562), (3.3983765, 17.070171, 2.3976552), (3.3983765, 17.066696, 2.3903215), (3.3983765, 17.220695, 2.2020996), (3.4064922, 17.220695, 2.2021005), (3.3983765, 17.374956, 2.3976552), (3.4064922, 17.374956, 2.3976562), (3.4064922, 17.380695, 2.4033945), (3.3983765, 17.380695, 2.4033935), (3.4064922, 17.380695, 3.1976564), (3.3983765, 17.380695, 3.1976554), (3.3983765, 17.380695, 3.9919174), (3.4064922, 17.380695, 3.9919174), (3.4064922, 17.374956, 3.9976566), (3.3983765, 17.374956, 3.9976556), (3.3983765, 17.070171, 3.9976556), (3.4064922, 17.070171, 3.9976566), (3.4064922, 17.066696, 4.0049906), (3.3983765, 17.066696, 4.0049896), (3.6024342, 17.3833, 4.3832664), (3.5966206, 17.385242, 4.3887672), (3.5966206, 17.377813, 4.3852463), (3.4064922, 17.37785, 4.385293), (3.4064922, 17.385185, 4.388768), (3.3983765, 17.385185, 4.3887672), (3.3983765, 17.37785, 4.385292), (3.3983765, 17.220695, 4.1932116), (3.4064922, 17.220695, 4.1932125), (3.4024343, 17.546432, 4.383029), (3.3969088, 17.540695, 4.3832417), (3.398512, 17.535147, 4.388768), (3.4075375, 17.540695, 4.3887672), (3.0079594, 17.695168, 3.9976556), (3.0063572, 17.700695, 3.992108), (2.9980688, 17.700695, 3.9932907), (2.996642, 17.700695, 4.001751), (3.0024338, 17.695168, 4.0031815), (3.0024338, 17.695168, 2.3921297), (2.9968863, 17.700695, 2.3937328), (2.9980688, 17.700695, 2.4020202), (3.0065298, 17.700695, 2.4034479), (3.0079594, 17.695168, 2.3976552), (2.998376, 17.700695, 3.1976564), (3.0064917, 17.700695, 3.1976554), (3.0024338, 17.546432, 2.012283), (3.0079594, 17.540695, 2.0120695), (3.0063572, 17.535147, 2.0065448), (2.9973307, 17.540695, 2.0065439), (2.9983768, 17.220695, 2.2021005), (3.0064917, 17.220695, 2.2020996), (2.998376, 17.380695, 3.1976564), (3.0064917, 17.380695, 3.1976554), (2.9983768, 17.220695, 4.1932125), (3.0064917, 17.220695, 4.1932116), (3.0065298, 17.534903, 4.388768), (3.0080662, 17.540695, 4.383135), (3.0024338, 17.546432, 4.38303), (2.9974337, 17.540695, 4.3887672), (0.59521675, 18.338486, 2.2819364), (0.5957241, 18.343906, 2.2888258), (0.6018896, 18.338486, 2.285711), (0.60195255, 18.338379, 2.3921297), (0.596406, 18.343906, 2.3937318), (0.5975933, 18.343906, 2.4020202), (0.60605526, 18.343906, 2.403447), (0.607481, 18.338379, 2.3976552), (0.5959549, 18.343906, 4.1066256), (0.59525394, 18.338326, 4.1133976), (0.60212135, 18.338326, 4.1095123), (0.5983782, 18.343906, 3.1976564), (0.606493, 18.343906, 3.1976554), (0.6076851, 18.338379, 3.9976566), (0.6060848, 18.343906, 3.992109), (0.59779644, 18.343906, 3.9932916), (0.5963669, 18.343906, 4.001752), (0.6021576, 18.338379, 4.0031815), (0.9969511, 18.338379, 2.3976552), (0.9985533, 18.343906, 2.4032028), (1.0068417, 18.343906, 2.4020202), (1.0082684, 18.343906, 2.3935592), (1.0024767, 18.338379, 2.3921297), (0.9983778, 18.343906, 3.1976554), (1.0064936, 18.343906, 3.1976564), (1.0024271, 18.338379, 4.0031815), (1.0079746, 18.343906, 4.0015783), (1.0067921, 18.343906, 3.9932897), (0.998332, 18.343906, 3.991864), (0.9969015, 18.338379, 3.9976556), (3.596696, 17.540695, 2.0065439), (3.6024342, 17.540695, 2.012283), (3.6024342, 17.540695, 2.3935974), (3.6024342, 17.540695, 2.4017131), (3.6024342, 17.540695, 3.9935977), (3.6024342, 17.540695, 4.0017138), (3.6024342, 17.540695, 4.383029), (3.596696, 17.540695, 4.388768), (3.396696, 17.540695, 4.003395), (3.4024343, 17.546432, 4.003395), (3.396696, 17.546432, 3.9976566), (3.396696, 17.546432, 2.3976562), (3.4024343, 17.546432, 2.391917), (3.396696, 17.540695, 2.391917), (3.008173, 17.540695, 4.003395), (3.008173, 17.546432, 3.9976566), (3.0024338, 17.546432, 4.003395), (3.0024338, 17.546432, 2.391918), (3.008173, 17.546432, 2.3976562), (3.008173, 17.540695, 2.391917), (1.0060549, 18.17967, 4.3599854), (1.0065603, 18.188103, 4.3602896), (1.0024233, 18.189644, 4.3531427), (0.99696636, 18.183907, 4.3481655), (0.99891186, 18.178114, 4.3556986), (0.4024353, 18.179848, 3.1976554), (0.4024353, 18.187963, 3.1976554), (0.5979166, 18.179277, 2.280316), (0.59508705, 18.187813, 2.2820146), (0.6018896, 18.189259, 2.2856138), (0.6075554, 18.183907, 2.281142), (0.6053963, 18.178114, 2.2758262), (0.6056299, 18.178114, 4.119626), (0.60803795, 18.183907, 4.114169), (0.60212135, 18.18935, 4.109708), (0.59579945, 18.187538, 4.1137257), (0.59815025, 18.179277, 4.115136), (0.99898434, 18.178114, 2.0395715), (0.9969988, 18.183907, 2.0471723), (1.0024948, 18.18945, 2.0419672), (1.0065069, 18.187977, 2.035055), (1.0061264, 18.17967, 2.0352838), (0.6076908, 18.183907, 2.391917), (0.60195255, 18.189644, 2.391916), (0.6076946, 18.189644, 2.3976543), (0.99673843, 18.189644, 2.3976552), (1.0024767, 18.189644, 2.391916), (0.99673843, 18.183907, 2.391917), (0.99668884, 18.183907, 4.003394), (1.0024271, 18.189644, 4.003394), (0.99668884, 18.189644, 3.9976556), (0.60789776, 18.189644, 3.9976566), (0.6021576, 18.189644, 4.003394), (0.60789585, 18.183907, 4.003395), (1.2024355, 18.187963, 3.1976554), (1.2024355, 18.179848, 3.1976554), (0.9987936, 18.028223, 2.039685), (1.0059748, 18.027964, 2.0353754), (1.0026188, 18.020428, 2.040017), (1.0061245, 18.028223, 4.3600283), (0.9989443, 18.027964, 4.3557177), (1.0025473, 18.020428, 4.355253)]
                        float3 xformOp:translate:pivot = (2.0024347, 17.705053, 3.197656)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_034_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.202669055361939, 19.300704284450532, -0.8019153978477477)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_slope_2x2_inverted_45_double_convex_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (2.8024323553039547, 18.66070435836029, -0.80189632436142)
                        float3 xformOp:translate:rotatePivot = (0.7999789, 0.56041497, 0.79994315)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999221, 0, 0.000035762787)
                        float3 xformOp:translate:scalePivot = (0.7999789, 0.56041497, 0.79994315)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (4.242432315221766, 17.22070537402344, 3.1981036160339364)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.08006108, 1.2800611, -1.2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (4.242432315221765, 17.22070537402344, 1.5981089566101074)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.08006108, 1.2800611, -1.2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (4.242432315221766, 17.22070537402344, 2.3981043789733887)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.08006108, 1.2800611, -1.2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_3x1_no_studs_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (2.8024322460806, 18.02069316699219, 3.9980914090026856)
                        float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.2, 9.797174e-17, -1.2)
                        float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_3x1_no_studs_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (2.8024322460806, 18.02069316699219, 3.198088357244873)
                        float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.2, 9.797174e-17, -1.2)
                        float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_curved_2x1_no_studs_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (2.8024186462356555, 19.140702708503724, -2.401915302480317)
                        float3 xformOp:translate:rotatePivot = (0.4, -1.3322676e-15, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.8, -0.8, -0.8)
                        float3 xformOp:translate:scalePivot = (0.4, -1.3322676e-15, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_30_1x2x2_3_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.7624390691711422, 18.820712312004094, -1.6019031908164978)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.47997004, 0.07999125, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_30_1x2x2_3_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (3.7624390691711422, 18.820700867912297, -0.0019123460899343626)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.47997004, -0.72000885, -1.199979)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_pin_2l_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.5224634081317894, 18.90857811166954, 0.7981059644569396)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.52, 0, 0.88)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x4_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (2.8024399846984855, 18.020705445549012, 1.5864883869415773)
                        float3 xformOp:translate:rotatePivot = (1.5997185, 0.8807498, 0.56018215)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.0395362, 0, -2.1599007)
                        float3 xformOp:translate:scalePivot = (1.5997185, 0.8807498, 0.56018215)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_033_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (2.8024399846984873, 19.940705521842958, 2.3980853650917053)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_2x3_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.602427777667236, 17.38070438697052, -0.8018961201303981)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (2.642432425860271, 18.820692761680604, 3.9980914686073303)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (2.6424324258602705, 18.820711835166932, 2.3981044385780335)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (1.2024219602539077, 18.340703471443177, 2.398100623880766)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, -0, 0)
                        double3 xformOp:translate = (2.002436932940674, 18.020693598895487, 3.9980914090026856)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.48082992, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (1.362432565423388, 18.020704968711854, 2.3981044385780335)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.23956388, -0.1604149, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (2.6424324258602705, 19.620699628135682, 1.5981090162147522)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.2395639, -1.3603938, 0)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (3.602432307620239, 19.620699678800158, 1.5981089566101074)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.5595639, -1.0403938, 0)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_with_groove_014_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (3.6024277776672364, 17.38069377734375, 3.9980914090026856)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x1_with_clip_highlight_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, -90)
                        double3 xformOp:translate = (1.6824330657913218, 19.62070535018158, 4.158098945413972)
                        float3 xformOp:translate:rotatePivot = (0.40000004, 0.56041497, 0.4000003)
                        float3 xformOp:translate:rotatePivotTranslate = (2.682209e-7, -0.960415, -0.96041524)
                        float3 xformOp:translate:scalePivot = (0.40000004, 0.56041497, 0.4000003)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x1_with_clip_highlight_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (2.802424725909424, 17.38070438697052, -0.8019153978477479)
                        float3 xformOp:translate:rotatePivot = (0.40000004, 0.56041497, 0.4000003)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.8000001, 0, -0.8000006)
                        float3 xformOp:translate:scalePivot = (0.40000004, 0.56041497, 0.4000003)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_4x6_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.602427777667236, 19.62070558860016, -0.8019077684532164)
                        float3 xformOp:translate:rotatePivot = (2.39992, 0.24041496, 1.6000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-3.9999413, 0, 0.7998985)
                        float3 xformOp:translate:scalePivot = (2.39992, 0.24041496, 1.6000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (2.322432433012828, 18.020704968711854, 1.598101386820221)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.922432300467682, 19.620714529296876, 1.598101327215578)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.6024323076202394, 19.620714529296876, 1.598101327215578)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.922432300467682, 17.22070537402344, 1.598101327215578)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.60243230762024, 17.22070537402344, 1.598101327215578)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.602427777667234, 18.340704364217274, 0.7980945203651426)
                        float3 xformOp:translate:rotatePivot = (1.1240871, 0.23999998, 0.4)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.2481742, 0, -0.8)
                        float3 xformOp:translate:scalePivot = (1.1240871, 0.23999998, 0.4)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.602427777667234, 18.340704364217274, 1.5980937574256893)
                        float3 xformOp:translate:rotatePivot = (1.1240871, 0.23999998, 0.4)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.2481742, 0, -0.8)
                        float3 xformOp:translate:scalePivot = (1.1240871, 0.23999998, 0.4)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_2x4_015_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.6024277776672364, 19.940705521842958, -0.0019199754844665406)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_2x4_013_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.602427777667237, 20.26070438697052, 2.7981822355140684)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_019_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.602427777667236, 18.66070435836029, -0.8019039537559508)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_2x4_012_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.6024277776672373, 20.26070438697052, 4.398182235514068)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x1_v_clip_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (2.8024186462356564, 17.54071186377716, -1.4419147874961855)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.24041493, 0.6797043)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.0797043, 0.15958507, -0.9201192)
                        float3 xformOp:translate:scalePivot = (0.4, 0.24041493, 0.6797043)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x1_round_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (2.482420858760072, 18.82071755721283, 4.798099288736725)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_004_mesh"
                    {
                        double3 xformOp:translate = (2.002436932940674, 18.66070435836029, 0.7981059644569397)
                        float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_012_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (2.802426275630187, 19.140702708503724, -2.401915302480316)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (3.602427777667237, 17.38070438697052, 1.5980937574256897)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (3.6024277776672364, 17.38070438697052, -0.0019085313926696656)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x2_026_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.602427777667236, 18.98070429160309, -0.8019039537559508)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (3.602432404402599, 19.620707257530213, 3.198107490335846)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.5595639, -1.0403938, 0)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_025_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.40243082942505015, 19.940705521842958, 3.9980876539100647)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_032_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.4024308294250497, 19.940705521842958, 2.3980853650917053)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_027_mesh"
                    {
                        double3 xformOp:translate = (1.2024338811828623, 19.940705521842958, 3.1980998609413147)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_plate_1x4_009_mesh"
                    {
                        double3 xformOp:translate = (0.4024232000305171, 19.62070558860016, -1.601903190816497)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_013_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.6024354070617677, 18.34070436551285, -0.0019085313926697767)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_cable_cap_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (1.3148520517349243, 17.61941879272461, -0.599889576224046)
                        float3 xformOp:translate:rotatePivot = (-3.330669e-16, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0.32, 0, -0.32)
                        float3 xformOp:translate:scalePivot = (-3.330669e-16, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (3.602427777667236, 17.38070438697052, -1.6019033471783537)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x3_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.802686364550781, 19.300704284450532, -0.8019153978477477)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.7624390691711427, 18.82071231200409, -0.0019009019981384156)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (1.3624333709671026, 19.620706899902345, 3.198103556429291)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_plate_2x3_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.2026766292782765, 18.98070429160309, -0.8019149894543965)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_028_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (2.8024399846984873, 19.940705521842958, 3.9980876539100647)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_017_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.6024277776672364, 18.66070435836029, -0.8019153978477477)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_2x2_016_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.2026690553619397, 19.300704284450532, -1.6019222643028264)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (0.40242272319336037, 18.500710948249818, 3.9980914686073312)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.9599789, 0.6400214, -1.6000003)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_black_l_cable_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(0.24913245, 16.316635, -8.887296), (1.794175, 17.147781, -6.065401)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 1, 7, 6, 1, 2, 8, 7, 2, 3, 9, 8, 3, 4, 10, 9, 4, 5, 11, 10, 5, 0, 6, 11, 6, 7, 13, 12, 7, 8, 14, 13, 8, 9, 15, 14, 9, 10, 16, 15, 10, 11, 17, 16, 11, 6, 12, 17, 12, 13, 19, 18, 13, 14, 20, 19, 14, 15, 21, 20, 15, 16, 22, 21, 16, 17, 23, 22, 17, 12, 18, 23, 18, 19, 25, 24, 19, 20, 26, 25, 20, 21, 27, 26, 21, 22, 28, 27, 22, 23, 29, 28, 23, 18, 24, 29, 24, 25, 31, 30, 25, 26, 32, 31, 26, 27, 33, 32, 27, 28, 34, 33, 28, 29, 35, 34, 29, 24, 30, 35, 30, 31, 37, 36, 31, 32, 38, 37, 32, 33, 39, 38, 33, 34, 40, 39, 34, 35, 41, 40, 35, 30, 36, 41, 36, 37, 43, 42, 37, 38, 44, 43, 38, 39, 45, 44, 39, 40, 46, 45, 40, 41, 47, 46, 41, 36, 42, 47, 42, 43, 49, 48, 43, 44, 50, 49, 44, 45, 51, 50, 45, 46, 52, 51, 46, 47, 53, 52, 47, 42, 48, 53, 48, 49, 55, 54, 49, 50, 56, 55, 50, 51, 57, 56, 51, 52, 58, 57, 52, 53, 59, 58, 53, 48, 54, 59, 54, 55, 61, 60, 55, 56, 62, 61, 56, 57, 63, 62, 57, 58, 64, 63, 58, 59, 65, 64, 59, 54, 60, 65, 60, 61, 67, 66, 61, 62, 68, 67, 62, 63, 69, 68, 63, 64, 70, 69, 64, 65, 71, 70, 65, 60, 66, 71, 66, 67, 73, 72, 67, 68, 74, 73, 68, 69, 75, 74, 69, 70, 76, 75, 70, 71, 77, 76, 71, 66, 72, 77, 72, 73, 79, 78, 73, 74, 80, 79, 74, 75, 81, 80, 75, 76, 82, 81, 76, 77, 83, 82, 77, 72, 78, 83, 78, 79, 85, 84, 79, 80, 86, 85, 80, 81, 87, 86, 81, 82, 88, 87, 82, 83, 89, 88, 83, 78, 84, 89, 84, 85, 91, 90, 85, 86, 92, 91, 86, 87, 93, 92, 87, 88, 94, 93, 88, 89, 95, 94, 89, 84, 90, 95, 90, 91, 97, 96, 91, 92, 98, 97, 92, 93, 99, 98, 93, 94, 100, 99, 94, 95, 101, 100, 95, 90, 96, 101, 96, 97, 103, 102, 97, 98, 104, 103, 98, 99, 105, 104, 99, 100, 106, 105, 100, 101, 107, 106, 101, 96, 102, 107, 102, 103, 109, 108, 103, 104, 110, 109, 104, 105, 111, 110, 105, 106, 112, 111, 106, 107, 113, 112, 107, 102, 108, 113, 108, 109, 115, 114, 109, 110, 116, 115, 110, 111, 117, 116, 111, 112, 118, 117, 112, 113, 119, 118, 113, 108, 114, 119],
                        }
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_black_sg>
                        point3f[] points.timeSamples = {
                            1: [(1.7772039, 16.4753, -6.069411), (1.6178784, 16.40302, -6.065401), (1.4755241, 16.504683, -6.070421), (1.4924952, 16.678623, -6.079451), (1.6518207, 16.750902, -6.083461), (1.794175, 16.64924, -6.0784407), (1.7767802, 16.462328, -6.320095), (1.6174549, 16.390049, -6.3160853), (1.4751005, 16.491709, -6.3211055), (1.4920716, 16.665651, -6.3301353), (1.651397, 16.73793, -6.334145), (1.7937514, 16.636269, -6.3291245), (1.7734915, 16.448296, -6.5827613), (1.6139535, 16.376587, -6.5772405), (1.4719228, 16.478758, -6.580916), (1.4894301, 16.652637, -6.590112), (1.6489681, 16.724346, -6.595633), (1.7909988, 16.622175, -6.5919576), (1.7647562, 16.433346, -6.8547435), (1.6048386, 16.362776, -6.8463144), (1.4634949, 16.465954, -6.847431), (1.4820688, 16.639702, -6.856977), (1.6419864, 16.710274, -6.865406), (1.7833301, 16.607096, -6.8642893), (1.7479475, 16.417604, -7.1334233), (1.5875612, 16.348757, -7.12072), (1.4473534, 16.453447, -7.118146), (1.4675316, 16.626986, -7.128276), (1.6279176, 16.695833, -7.14098), (1.7681257, 16.591143, -7.1435537), (1.7203891, 16.401194, -7.4162035), (1.5595603, 16.334703, -7.397815), (1.4210678, 16.441431, -7.390459), (1.4434043, 16.614649, -7.4014916), (1.6042331, 16.681139, -7.41988), (1.7427255, 16.574411, -7.427236), (1.6786674, 16.385576, -7.698711), (1.5175242, 16.322355, -7.6729984), (1.381776, 16.431894, -7.6588984), (1.4071707, 16.604652, -7.6705112), (1.5683138, 16.667871, -7.696224), (1.7040622, 16.558334, -7.7103243), (1.6176468, 16.374865, -7.972629), (1.4565195, 16.316635, -7.9369583), (1.3258982, 16.430393, -7.912013), (1.3564042, 16.60238, -7.922738), (1.5175315, 16.660608, -7.958409), (1.6481528, 16.546852, -7.983354), (1.5310619, 16.37372, -8.228155), (1.3711985, 16.32322, -8.177971), (1.2504778, 16.443047, -8.136825), (1.2896206, 16.613373, -8.145862), (1.449484, 16.663874, -8.196046), (1.5702047, 16.544046, -8.237192), (1.4101299, 16.38708, -8.455057), (1.2555978, 16.348576, -8.382516), (1.1544595, 16.476482, -8.318989), (1.2078532, 16.642895, -8.328003), (1.3623854, 16.681398, -8.400544), (1.4635237, 16.553492, -8.464071), (1.2434764, 16.421247, -8.639284), (1.106068, 16.399853, -8.533048), (1.0420943, 16.536352, -8.444165), (1.1155291, 16.694248, -8.461519), (1.2529374, 16.715645, -8.567756), (1.3169111, 16.579144, -8.656638), (1.0427544, 16.479198, -8.760573), (0.94028974, 16.473267, -8.618832), (0.9251598, 16.613949, -8.515852), (1.0124944, 16.760561, -8.554614), (1.114959, 16.76649, -8.696357), (1.130089, 16.62581, -8.799336), (0.839043, 16.55301, -8.813198), (0.78304106, 16.554136, -8.647405), (0.81232786, 16.693798, -8.546102), (0.8976166, 16.83233, -8.610593), (0.95361865, 16.831205, -8.776386), (0.92433184, 16.691545, -8.877688), (0.6506176, 16.631706, -8.801086), (0.6495819, 16.63056, -8.626094), (0.71595764, 16.765972, -8.53731), (0.783369, 16.902533, -8.623519), (0.78440464, 16.903679, -8.798512), (0.71802896, 16.768267, -8.887296), (0.49227196, 16.705688, -8.726736), (0.5539681, 16.69094, -8.563638), (0.6506851, 16.819473, -8.494717), (0.685706, 16.962753, -8.588893), (0.6240099, 16.9775, -8.751991), (0.5272929, 16.848969, -8.820913), (0.37656993, 16.768358, -8.594036), (0.49733257, 16.727438, -8.474174), (0.61874294, 16.844954, -8.428627), (0.6193907, 17.00339, -8.502942), (0.49862808, 17.04431, -8.622805), (0.37721768, 16.926792, -8.668351), (0.3043318, 16.81773, -8.418841), (0.45180997, 16.752306, -8.351056), (0.59021807, 16.856382, -8.325836), (0.581148, 17.025885, -8.368401), (0.43366984, 17.091309, -8.436186), (0.29526174, 16.987232, -8.461406), (0.26690918, 16.852133, -8.217656), (0.4190483, 16.772373, -8.184235), (0.56651235, 16.866028, -8.1738405), (0.56183726, 17.039444, -8.196867), (0.4096981, 17.119204, -8.2302885), (0.26223406, 17.025549, -8.240684), (0.25225276, 16.87432, -8.0045), (0.4032946, 16.787138, -7.9899817), (0.5549642, 16.874434, -7.9889827), (0.5555919, 17.048908, -8.0025015), (0.40455008, 17.13609, -8.01702), (0.25288048, 17.048796, -8.018019), (0.24913245, 16.888748, -7.792863), (0.39887404, 16.798386, -7.786778), (0.55217093, 16.88272, -7.7903438), (0.55572623, 17.057419, -7.7999945), (0.40598464, 17.147781, -7.8060794), (0.25268775, 17.063446, -7.8025136)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0, 0.2529878), (0.16666667, 0.2529878), (0.33333334, 0.2529878), (0.5, 0.2529878), (0.6666667, 0.2529878), (0.8333333, 0.2529878), (1, 0.2529878), (0, 0.6158734), (0.16666667, 0.6158734), (0.33333334, 0.6158734), (0.5, 0.6158734), (0.6666667, 0.6158734), (0.8333333, 0.6158734), (1, 0.6158734), (0, 0.99399924), (0.16666667, 0.99399924), (0.33333334, 0.99399924), (0.5, 0.99399924), (0.6666667, 0.99399924), (0.8333333, 0.99399924), (1, 0.99399924), (0, 1.383862), (0.16666667, 1.383862), (0.33333334, 1.383862), (0.5, 1.383862), (0.6666667, 1.383862), (0.8333333, 1.383862), (1, 1.383862), (0, 1.7821523), (0.16666667, 1.7821523), (0.33333334, 1.7821523), (0.5, 1.7821523), (0.6666667, 1.7821523), (0.8333333, 1.7821523), (1, 1.7821523), (0, 2.1858184), (0.16666667, 2.1858184), (0.33333334, 2.1858184), (0.5, 2.1858184), (0.6666667, 2.1858184), (0.8333333, 2.1858184), (1, 2.1858184), (0, 2.5883882), (0.16666667, 2.5883882), (0.33333334, 2.5883882), (0.5, 2.5883882), (0.6666667, 2.5883882), (0.8333333, 2.5883882), (1, 2.5883882), (0, 2.9769921), (0.16666667, 2.9769921), (0.33333334, 2.9769921), (0.5, 2.9769921), (0.6666667, 2.9769921), (0.8333333, 2.9769921), (1, 2.9769921), (0, 3.3403616), (0.16666667, 3.3403616), (0.33333334, 3.3403616), (0.5, 3.3403616), (0.6666667, 3.3403616), (0.8333333, 3.3403616), (1, 3.3403616), (0, 3.6721628), (0.16666667, 3.6721628), (0.33333334, 3.6721628), (0.5, 3.6721628), (0.6666667, 3.6721628), (0.8333333, 3.6721628), (1, 3.6721628), (0, 3.9755495), (0.16666667, 3.9755495), (0.33333334, 3.9755495), (0.5, 3.9755495), (0.6666667, 3.9755495), (0.8333333, 3.9755495), (1, 3.9755495), (0, 4.259841), (0.16666667, 4.259841), (0.33333334, 4.259841), (0.5, 4.259841), (0.6666667, 4.259841), (0.8333333, 4.259841), (1, 4.259841), (0, 4.5260735), (0.16666667, 4.5260735), (0.33333334, 4.5260735), (0.5, 4.5260735), (0.6666667, 4.5260735), (0.8333333, 4.5260735), (1, 4.5260735), (0, 4.771299), (0.16666667, 4.771299), (0.33333334, 4.771299), (0.5, 4.771299), (0.6666667, 4.771299), (0.8333333, 4.771299), (1, 4.771299), (0, 4.9962363), (0.16666667, 4.9962363), (0.33333334, 4.9962363), (0.5, 4.9962363), (0.6666667, 4.9962363), (0.8333333, 4.9962363), (1, 4.9962363), (0, 5.216717), (0.16666667, 5.216717), (0.33333334, 5.216717), (0.5, 5.216717), (0.6666667, 5.216717), (0.8333333, 5.216717), (1, 5.216717), (0, 5.461439), (0.16666667, 5.461439), (0.33333334, 5.461439), (0.5, 5.461439), (0.6666667, 5.461439), (0.8333333, 5.461439), (1, 5.461439), (0, 5.7371893), (0.16666667, 5.7371893), (0.33333334, 5.7371893), (0.5, 5.7371893), (0.6666667, 5.7371893), (0.8333333, 5.7371893), (1, 5.7371893), (0, 6.03382), (0.16666667, 6.03382), (0.33333334, 6.03382), (0.5, 6.03382), (0.6666667, 6.03382), (0.8333333, 6.03382), (1, 6.03382), (0, 6.3343844), (0.16666667, 6.3343844), (0.33333334, 6.3343844), (0.5, 6.3343844), (0.6666667, 6.3343844), (0.8333333, 6.3343844), (1, 6.3343844)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 1, 8, 7, 1, 2, 9, 8, 2, 3, 10, 9, 3, 4, 11, 10, 4, 5, 12, 11, 5, 6, 13, 12, 7, 8, 15, 14, 8, 9, 16, 15, 9, 10, 17, 16, 10, 11, 18, 17, 11, 12, 19, 18, 12, 13, 20, 19, 14, 15, 22, 21, 15, 16, 23, 22, 16, 17, 24, 23, 17, 18, 25, 24, 18, 19, 26, 25, 19, 20, 27, 26, 21, 22, 29, 28, 22, 23, 30, 29, 23, 24, 31, 30, 24, 25, 32, 31, 25, 26, 33, 32, 26, 27, 34, 33, 28, 29, 36, 35, 29, 30, 37, 36, 30, 31, 38, 37, 31, 32, 39, 38, 32, 33, 40, 39, 33, 34, 41, 40, 35, 36, 43, 42, 36, 37, 44, 43, 37, 38, 45, 44, 38, 39, 46, 45, 39, 40, 47, 46, 40, 41, 48, 47, 42, 43, 50, 49, 43, 44, 51, 50, 44, 45, 52, 51, 45, 46, 53, 52, 46, 47, 54, 53, 47, 48, 55, 54, 49, 50, 57, 56, 50, 51, 58, 57, 51, 52, 59, 58, 52, 53, 60, 59, 53, 54, 61, 60, 54, 55, 62, 61, 56, 57, 64, 63, 57, 58, 65, 64, 58, 59, 66, 65, 59, 60, 67, 66, 60, 61, 68, 67, 61, 62, 69, 68, 63, 64, 71, 70, 64, 65, 72, 71, 65, 66, 73, 72, 66, 67, 74, 73, 67, 68, 75, 74, 68, 69, 76, 75, 70, 71, 78, 77, 71, 72, 79, 78, 72, 73, 80, 79, 73, 74, 81, 80, 74, 75, 82, 81, 75, 76, 83, 82, 77, 78, 85, 84, 78, 79, 86, 85, 79, 80, 87, 86, 80, 81, 88, 87, 81, 82, 89, 88, 82, 83, 90, 89, 84, 85, 92, 91, 85, 86, 93, 92, 86, 87, 94, 93, 87, 88, 95, 94, 88, 89, 96, 95, 89, 90, 97, 96, 91, 92, 99, 98, 92, 93, 100, 99, 93, 94, 101, 100, 94, 95, 102, 101, 95, 96, 103, 102, 96, 97, 104, 103, 98, 99, 106, 105, 99, 100, 107, 106, 100, 101, 108, 107, 101, 102, 109, 108, 102, 103, 110, 109, 103, 104, 111, 110, 105, 106, 113, 112, 106, 107, 114, 113, 107, 108, 115, 114, 108, 109, 116, 115, 109, 110, 117, 116, 110, 111, 118, 117, 112, 113, 120, 119, 113, 114, 121, 120, 114, 115, 122, 121, 115, 116, 123, 122, 116, 117, 124, 123, 117, 118, 125, 124, 119, 120, 127, 126, 120, 121, 128, 127, 121, 122, 129, 128, 122, 123, 130, 129, 123, 124, 131, 130, 124, 125, 132, 131, 126, 127, 134, 133, 127, 128, 135, 134, 128, 129, 136, 135, 129, 130, 137, 136, 130, 131, 138, 137, 131, 132, 139, 138],
                        }
                        uniform token[] xformOpOrder = ["!resetXformStack!"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_2x2_015_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (2.802424725909425, 19.940705521842958, 2.3980853650917053)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x2_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (0.4024341525148273, 18.020704611083985, 3.998091468607332)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x4_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (3.6024277776672364, 19.940705521842958, 0.798083076273346)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (2.8024262756301876, 18.34069965674591, -2.081915130818939)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (2.8024262756301876, 18.34069965674591, -1.7619149591575622)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_015_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (3.9224323376453962, 19.620699628135682, 3.198107490335846)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_016_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (3.7624390691711427, 18.020713074943544, -0.0019009019981384156)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_l_iris_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (8.881784197001252e-16, 7.105427357601002e-15, 1.7763568394002505e-15),
                        }
                        float3 xformOp:translate:pivot = (2.082427, 19.22071, 5.042348)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                        def Mesh "Wall_e_RIG_v001_black_l_special_eye_mesh_03" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(1.2824278, 18.420712, 4.771265), (2.8824272, 20.02071, 5.042348)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [16, 0, 1, 17, 17, 1, 2, 18, 18, 2, 3, 19, 19, 3, 4, 20, 20, 4, 5, 21, 21, 5, 6, 22, 22, 6, 7, 23, 23, 7, 8, 24, 24, 8, 9, 25, 25, 9, 10, 26, 26, 10, 11, 27, 27, 11, 12, 28, 28, 12, 13, 29, 29, 13, 14, 30, 30, 14, 15, 31, 31, 15, 0, 16, 32, 16, 17, 33, 33, 17, 18, 34, 34, 18, 19, 35, 35, 19, 20, 36, 36, 20, 21, 37, 37, 21, 22, 38, 38, 22, 23, 39, 39, 23, 24, 40, 40, 24, 25, 41, 41, 25, 26, 42, 42, 26, 27, 43, 43, 27, 28, 44, 44, 28, 29, 45, 45, 29, 30, 46, 46, 30, 31, 47, 47, 31, 16, 32, 48, 32, 33, 49, 49, 33, 34, 50, 50, 34, 35, 51, 51, 35, 36, 52, 52, 36, 37, 53, 53, 37, 38, 54, 54, 38, 39, 55, 55, 39, 40, 56, 56, 40, 41, 57, 57, 41, 42, 58, 58, 42, 43, 59, 59, 43, 44, 60, 60, 44, 45, 61, 61, 45, 46, 62, 62, 46, 47, 63, 63, 47, 32, 48, 64, 48, 49, 65, 65, 49, 50, 66, 66, 50, 51, 67, 67, 51, 52, 68, 68, 52, 53, 69, 69, 53, 54, 70, 70, 54, 55, 71, 71, 55, 56, 72, 72, 56, 57, 73, 73, 57, 58, 74, 74, 58, 59, 75, 75, 59, 60, 76, 76, 60, 61, 77, 77, 61, 62, 78, 78, 62, 63, 79, 79, 63, 48, 64, 80, 65, 66, 67, 80, 67, 68, 69, 80, 69, 70, 71, 80, 71, 72, 73, 80, 73, 74, 75, 80, 75, 76, 77, 80, 77, 78, 79, 80, 79, 64, 65, 83, 82, 112, 113, 82, 83, 85, 84, 84, 85, 87, 86, 86, 87, 89, 88, 88, 89, 91, 90, 90, 91, 93, 92, 92, 93, 95, 94, 94, 95, 97, 96, 96, 97, 99, 98, 98, 99, 101, 100, 100, 101, 103, 102, 102, 103, 105, 104, 104, 105, 107, 106, 106, 107, 109, 108, 108, 109, 111, 110, 110, 111, 113, 112, 115, 114, 144, 145, 114, 115, 117, 116, 116, 117, 119, 118, 118, 119, 121, 120, 120, 121, 123, 122, 122, 123, 125, 124, 124, 125, 127, 126, 126, 127, 129, 128, 128, 129, 131, 130, 130, 131, 133, 132, 132, 133, 135, 134, 134, 135, 137, 136, 136, 137, 139, 138, 138, 139, 141, 140, 140, 141, 143, 142, 142, 143, 145, 144, 112, 82, 0, 15, 1, 0, 82, 84, 2, 1, 84, 86, 3, 2, 86, 88, 4, 3, 88, 90, 5, 4, 90, 92, 6, 5, 92, 94, 7, 6, 94, 96, 8, 7, 96, 98, 9, 8, 98, 100, 10, 9, 100, 102, 11, 10, 102, 104, 12, 11, 104, 106, 13, 12, 106, 108, 14, 13, 108, 110, 15, 14, 110, 112, 144, 114, 83, 113, 85, 83, 114, 116, 87, 85, 116, 118, 89, 87, 118, 120, 91, 89, 120, 122, 93, 91, 122, 124, 95, 93, 124, 126, 97, 95, 126, 128, 99, 97, 128, 130, 101, 99, 130, 132, 103, 101, 132, 134, 105, 103, 134, 136, 107, 105, 136, 138, 109, 107, 138, 140, 111, 109, 140, 142, 113, 111, 142, 144, 115, 145, 81, 117, 119, 117, 81, 121, 123, 121, 81, 125, 127, 125, 81, 129, 131, 129, 81, 133, 135, 133, 81, 137, 139, 137, 81, 141, 143, 141, 81, 145]
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_black_sg>
                            point3f[] points = [(2.7483358, 19.49654, 4.9040747), (2.5920916, 19.730377, 4.9040756), (2.3582563, 19.88662, 4.9040747), (2.082427, 19.941486, 4.9040756), (1.8065996, 19.88662, 4.9040756), (1.5727625, 19.730377, 4.9040756), (1.4165182, 19.49654, 4.9040747), (1.3616524, 19.22071, 4.9040747), (1.4165182, 18.944885, 4.9040747), (1.5727625, 18.711048, 4.9040747), (1.8065987, 18.554802, 4.9040756), (2.082427, 18.499935, 4.9040747), (2.3582563, 18.554802, 4.9040747), (2.5920916, 18.711048, 4.9040756), (2.7483368, 18.944881, 4.9040747), (2.8032026, 19.22071, 4.9040747), (2.6602812, 19.460068, 4.950386), (2.5246973, 19.662983, 4.950386), (2.321782, 19.798565, 4.950386), (2.082427, 19.846176, 4.950386), (1.8430729, 19.798565, 4.950387), (1.6401567, 19.662983, 4.950387), (1.5045729, 19.460068, 4.950387), (1.4569626, 19.22071, 4.950386), (1.5045729, 18.981358, 4.950386), (1.6401567, 18.778442, 4.950386), (1.8430719, 18.642857, 4.950386), (2.082427, 18.595245, 4.950386), (2.321782, 18.642857, 4.950386), (2.5246973, 18.778442, 4.950386), (2.6602812, 18.981358, 4.950386), (2.7078924, 19.22071, 4.950386), (2.54325, 19.41159, 4.9890604), (2.4351263, 19.57341, 4.9890604), (2.2733068, 19.681534, 4.9890604), (2.082427, 19.719501, 4.9890594), (1.8915482, 19.681534, 4.9890604), (1.7297287, 19.57341, 4.9890604), (1.621604, 19.41159, 4.9890604), (1.5836353, 19.22071, 4.9890604), (1.621604, 19.02983, 4.9890604), (1.7297277, 18.868011, 4.9890594), (1.8915482, 18.759888, 4.9890604), (2.082427, 18.72192, 4.9890604), (2.2733068, 18.759888, 4.9890604), (2.4351263, 18.868011, 4.9890604), (2.543251, 19.02983, 4.9890604), (2.5812197, 19.22071, 4.9890604), (2.4031115, 19.353542, 5.01816), (2.3278685, 19.466152, 5.01816), (2.2152596, 19.541397, 5.01816), (2.082427, 19.567818, 5.01816), (1.9495955, 19.541397, 5.01816), (1.8369856, 19.466152, 5.01816), (1.7617426, 19.353542, 5.018161), (1.7353201, 19.22071, 5.01816), (1.7617426, 19.08788, 5.018161), (1.8369856, 18.97527, 5.01816), (1.9495955, 18.900028, 5.018161), (2.082427, 18.873604, 5.01816), (2.2152596, 18.900028, 5.01816), (2.3278685, 18.97527, 5.01816), (2.4031124, 19.08788, 5.01816), (2.429534, 19.22071, 5.01816), (2.246893, 19.288837, 5.0362253), (2.2083044, 19.346588, 5.0362253), (2.1505518, 19.385178, 5.0362253), (2.082427, 19.398727, 5.0362253), (2.0143032, 19.385178, 5.0362253), (1.9565506, 19.346588, 5.0362253), (1.9179611, 19.288837, 5.0362253), (1.9044104, 19.22071, 5.0362253), (1.9179611, 19.152588, 5.0362253), (1.9565506, 19.094833, 5.0362253), (2.0143032, 19.056244, 5.0362253), (2.082427, 19.042694, 5.0362253), (2.1505518, 19.056244, 5.0362253), (2.2083044, 19.094833, 5.0362253), (2.246893, 19.152588, 5.0362253), (2.2604437, 19.22071, 5.0362253), (2.082427, 19.22071, 5.042348), (2.082427, 19.22071, 4.771265), (2.8197126, 19.526104, 4.838829), (2.8215303, 19.52686, 4.8346004), (2.646721, 19.785007, 4.838829), (2.6481123, 19.786396, 4.8346004), (2.3878212, 19.957996, 4.838829), (2.3885736, 19.959812, 4.8346004), (2.082427, 20.018745, 4.838829), (2.082427, 20.02071, 4.8346004), (1.7770338, 19.957996, 4.838829), (1.7762814, 19.959812, 4.8346014), (1.5181332, 19.785007, 4.838829), (1.5167427, 19.786396, 4.8346014), (1.3451414, 19.526104, 4.838829), (1.3433237, 19.52686, 4.8346014), (1.2843943, 19.22071, 4.838829), (1.2824278, 19.22071, 4.8346004), (1.3451414, 18.915318, 4.83883), (1.3433237, 18.914566, 4.8346004), (1.5181322, 18.656418, 4.83883), (1.5167418, 18.655025, 4.8346004), (1.7770329, 18.483425, 4.838829), (1.7762804, 18.48161, 4.8346004), (2.082427, 18.42268, 4.838829), (2.082427, 18.420712, 4.8346004), (2.3878212, 18.483425, 4.838829), (2.3885736, 18.48161, 4.8346004), (2.6467218, 18.656418, 4.83883), (2.6481123, 18.655025, 4.8346004), (2.8197136, 18.915318, 4.838829), (2.8215303, 18.914566, 4.8346004), (2.8804598, 19.22071, 4.838829), (2.8824272, 19.22071, 4.8346004), (2.8215303, 19.52686, 4.77456), (2.818472, 19.525593, 4.771265), (2.6481123, 19.786396, 4.77456), (2.645771, 19.784054, 4.771265), (2.3885736, 19.959812, 4.774559), (2.3873072, 19.956753, 4.771265), (2.082427, 20.02071, 4.774559), (2.082427, 20.017399, 4.771265), (1.7762814, 19.959812, 4.77456), (1.7775478, 19.956753, 4.771265), (1.5167427, 19.786396, 4.77456), (1.519083, 19.784054, 4.771265), (1.3433237, 19.52686, 4.77456), (1.3463831, 19.525593, 4.771265), (1.2824278, 19.22071, 4.77456), (1.285738, 19.22071, 4.771265), (1.3433237, 18.914566, 4.77456), (1.3463821, 18.915833, 4.771265), (1.5167418, 18.655025, 4.77456), (1.519083, 18.657364, 4.771265), (1.7762804, 18.48161, 4.77456), (1.7775478, 18.484669, 4.771265), (2.082427, 18.420712, 4.77456), (2.082427, 18.424023, 4.771265), (2.3885736, 18.48161, 4.77456), (2.3873072, 18.484669, 4.771265), (2.6481123, 18.655025, 4.77456), (2.645771, 18.657364, 4.771265), (2.8215303, 18.914566, 4.774559), (2.818472, 18.915833, 4.771265), (2.8824272, 19.22071, 4.77456), (2.879116, 19.22071, 4.771265)]
                            float3 xformOp:translate:pivot = (2.082427, 19.22071, 4.7980986)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_l_iris_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_iris_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_sclera_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (4.5804153655723545e-17, -2.220446049250313e-16, 1.7763568394002505e-15),
                        }
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        def Xform "Wall_e_RIG_v001_group3"
                        {
                            float3 xformOp:translate:pivot = (2.0824268, 19.22071, 4.318574)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                            def Xform "Wall_e_RIG_v001_darkGrey_dish_3x3_inverted_003_mesh"
                            {
                                float3 xformOp:rotateXYZ = (-90, -0, 90)
                                double3 xformOp:translate = (3.2824239105178825, 18.020714505455018, 4.798098931108856)
                                float3 xformOp:translate:rotatePivot = (1.199997, 0.64, 1.199997)
                                float3 xformOp:translate:rotatePivotTranslate = (-2.399994, 0.55999696, -1.8399969)
                                float3 xformOp:translate:scalePivot = (1.199997, 0.64, 1.199997)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                            }
                        }

                        def Xform "Wall_e_RIG_v001_l_sclera_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_l_sclera_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_eye_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_eye_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, -1.4033418e-14, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (-4.1529246708194023e-10, 0, -1.1102230246251565e-16),
                    }
                    float3 xformOp:translate:pivot = (-1.5962901, 18.581842, 0.79810685)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_brown_tile_2x2_017_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.1975763469741705, 19.940705521842958, 2.3980853650917267)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_darkGrey_r_special_eye_mesh_02" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(-4.8529778, 17.221191, 3.9976559), (-3.606965, 20.420181, 4.388768)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 7, 3, 7, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3]
                        int[] faceVertexIndices = [10, 11, 9, 8, 12, 13, 11, 10, 14, 15, 13, 12, 14, 17, 18, 15, 16, 100, 101, 18, 17, 39, 40, 16, 19, 104, 105, 21, 20, 22, 23, 19, 21, 43, 41, 20, 24, 25, 23, 22, 26, 27, 25, 24, 28, 29, 27, 26, 29, 28, 8, 9, 33, 32, 30, 31, 35, 34, 32, 33, 37, 36, 34, 35, 37, 38, 39, 36, 38, 60, 61, 40, 42, 45, 44, 41, 43, 64, 65, 42, 47, 46, 44, 45, 49, 48, 46, 47, 51, 50, 48, 49, 50, 51, 31, 30, 55, 54, 52, 53, 57, 56, 54, 55, 59, 58, 56, 57, 59, 62, 63, 58, 60, 131, 130, 61, 62, 126, 127, 63, 64, 134, 135, 65, 66, 120, 121, 67, 69, 68, 66, 67, 71, 70, 68, 69, 73, 72, 70, 71, 72, 73, 53, 52, 77, 76, 74, 75, 79, 78, 76, 77, 81, 80, 78, 79, 81, 82, 83, 80, 82, 128, 129, 83, 84, 124, 125, 85, 87, 86, 84, 85, 89, 88, 86, 87, 91, 90, 88, 89, 90, 91, 75, 74, 94, 95, 93, 92, 96, 97, 95, 94, 98, 99, 97, 96, 98, 101, 102, 99, 100, 114, 115, 102, 103, 116, 117, 105, 104, 106, 107, 103, 108, 109, 107, 106, 110, 111, 109, 108, 112, 113, 111, 110, 113, 112, 92, 93, 114, 118, 119, 115, 116, 122, 123, 117, 118, 133, 132, 119, 120, 139, 138, 121, 122, 136, 137, 123, 124, 141, 140, 125, 126, 130, 131, 127, 128, 132, 133, 129, 134, 138, 139, 135, 136, 140, 141, 137, 30, 32, 10, 8, 32, 34, 12, 10, 34, 36, 14, 12, 14, 36, 39, 17, 20, 41, 44, 22, 44, 46, 24, 22, 46, 48, 26, 24, 48, 50, 28, 26, 50, 30, 8, 28, 144, 33, 31, 145, 143, 35, 33, 144, 142, 37, 35, 143, 148, 47, 45, 149, 147, 49, 47, 148, 146, 51, 49, 147, 145, 31, 51, 146, 74, 76, 55, 53, 76, 78, 57, 55, 78, 80, 59, 57, 59, 80, 83, 62, 124, 84, 67, 121, 84, 86, 69, 67, 86, 88, 71, 69, 88, 90, 73, 71, 90, 74, 53, 73, 2, 77, 75, 3, 1, 79, 77, 2, 0, 81, 79, 1, 6, 87, 85, 7, 5, 89, 87, 6, 4, 91, 89, 5, 3, 75, 91, 4, 9, 11, 94, 92, 11, 13, 96, 94, 13, 15, 98, 96, 98, 15, 18, 101, 104, 19, 23, 106, 23, 25, 108, 106, 25, 27, 110, 108, 27, 29, 112, 110, 29, 9, 92, 112, 40, 114, 100, 16, 43, 117, 123, 64, 0, 99, 102, 115, 0, 1, 97, 99, 1, 2, 95, 97, 2, 3, 93, 95, 3, 4, 113, 93, 4, 5, 111, 113, 5, 6, 109, 111, 6, 7, 107, 109, 116, 103, 107, 7, 40, 61, 118, 114, 43, 21, 105, 117, 62, 83, 129, 126, 126, 129, 133, 130, 130, 133, 118, 61, 64, 123, 137, 134, 134, 137, 141, 138, 138, 141, 124, 121, 131, 60, 142, 119, 132, 128, 82, 81, 0, 115, 135, 139, 149, 85, 125, 140, 136, 122, 116, 7, 16, 18, 17, 19, 21, 20, 38, 40, 39, 41, 43, 42, 100, 102, 101, 103, 105, 104, 56, 58, 142, 143, 54, 56, 143, 144, 52, 54, 144, 145, 72, 52, 145, 146, 70, 72, 146, 147, 68, 70, 147, 148, 66, 68, 148, 149, 45, 42, 65, 149, 60, 38, 37, 142, 142, 58, 63, 131, 142, 127, 142, 63, 127, 65, 135, 149, 120, 66, 149, 139, 120, 149]
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                        point3f[] points = [(-3.774375, 19.927101, 4.100505), (-4.0989532, 19.758663, 4.100504), (-4.3479404, 19.447426, 4.100504), (-4.482691, 19.04078, 4.100504), (-4.4826927, 18.600628, 4.100504), (-4.3479404, 18.193981, 4.100504), (-4.0989513, 17.882744, 4.100504), (-3.774375, 17.714306, 4.100505), (-4.852976, 19.132847, 4.0014954), (-4.8491735, 19.13224, 3.9976568), (-4.661854, 19.709614, 4.0014954), (-4.658456, 19.707794, 3.9976568), (-4.3087025, 20.151054, 4.0014954), (-4.3062344, 20.148087, 3.9976559), (-3.8472881, 20.389957, 4.0014954), (-3.8463507, 20.386208, 3.9976568), (-3.606966, 20.416862, 4.0014954), (-3.611042, 20.420181, 4.0017643), (-3.6108046, 20.41634, 3.9976568), (-3.6108046, 17.225067, 3.9976568), (-3.610775, 17.221191, 4.0014954), (-3.606966, 17.224545, 4.0014954), (-3.8472872, 17.25145, 4.0014963), (-3.8463507, 17.2552, 3.9976568), (-4.3087025, 17.490353, 4.0014954), (-4.3062334, 17.49332, 3.9976568), (-4.661854, 17.931793, 4.0014954), (-4.658457, 17.933615, 3.9976559), (-4.8529778, 18.50856, 4.0014954), (-4.8491745, 18.509167, 3.9976559), (-4.852976, 19.132847, 4.0975266), (-4.8508224, 19.132313, 4.1024876), (-4.661854, 19.709614, 4.0975), (-4.660076, 19.70813, 4.102436), (-4.3087015, 20.151054, 4.0974665), (-4.307562, 20.148922, 4.102358), (-3.8472881, 20.389957, 4.097452), (-3.846901, 20.38752, 4.1023006), (-3.611022, 20.417656, 4.102332), (-3.6111546, 20.420166, 4.097374), (-3.606965, 20.416851, 4.0985346), (-3.611082, 17.221231, 4.0974274), (-3.6110697, 17.22379, 4.102353), (-3.606965, 17.224564, 4.098531), (-3.8472881, 17.25145, 4.097452), (-3.846899, 17.253887, 4.1023006), (-4.3087025, 17.490353, 4.0974674), (-4.307562, 17.492485, 4.102358), (-4.661854, 17.931793, 4.0975), (-4.660076, 17.933277, 4.102436), (-4.8529778, 18.50856, 4.0975266), (-4.8508234, 18.509094, 4.1024885), (-4.5420504, 19.055538, 4.3868265), (-4.5370502, 19.054554, 4.3887672), (-4.398199, 19.489403, 4.386898), (-4.3938847, 19.486576, 4.3887672), (-4.132469, 19.821365, 4.387003), (-4.129509, 19.817078, 4.3887672), (-3.785387, 20.000957, 4.387081), (-3.7843246, 19.995853, 4.3887672), (-3.6115131, 20.219086, 4.245758), (-3.606966, 20.214394, 4.246172), (-3.7403326, 20.001225, 4.388768), (-3.7412586, 20.006542, 4.386984), (-3.606966, 17.427013, 4.246172), (-3.6115131, 17.422321, 4.245758), (-3.785386, 17.64045, 4.38708), (-3.7843304, 17.64553, 4.3887672), (-4.132469, 17.820045, 4.387003), (-4.1295395, 17.824291, 4.3887672), (-4.398199, 18.152004, 4.386898), (-4.393921, 18.154812, 4.3887672), (-4.5420523, 18.585869, 4.3868265), (-4.5370655, 18.586853, 4.3887672), (-4.486494, 19.041386, 4.3887672), (-4.482691, 19.04078, 4.3849277), (-4.3513355, 19.44925, 4.3887672), (-4.3479395, 19.447426, 4.3849287), (-4.1014194, 19.761631, 4.3887672), (-4.0989532, 19.758663, 4.3849277), (-3.7745628, 19.930859, 4.3887672), (-3.7736435, 19.927101, 4.3849277), (-3.740777, 19.93116, 4.3849764), (-3.7402706, 19.935043, 4.3887672), (-3.7745628, 17.710552, 4.3887672), (-3.7736435, 17.714306, 4.3849277), (-4.1014194, 17.879776, 4.3887672), (-4.0989523, 17.882744, 4.3849287), (-4.3513374, 18.192158, 4.3887672), (-4.3479404, 18.193981, 4.3849277), (-4.486496, 18.600021, 4.3887672), (-4.4826927, 18.600628, 4.3849277), (-4.486494, 19.041386, 3.9976559), (-4.482691, 19.04078, 4.0014954), (-4.3513355, 19.44925, 3.9976559), (-4.3479404, 19.447426, 4.0014954), (-4.1014194, 19.761631, 3.9976559), (-4.0989532, 19.758663, 4.0014954), (-3.7753181, 19.930851, 3.9976559), (-3.774376, 19.927101, 4.0014954), (-3.606966, 19.952393, 4.0012703), (-3.6108046, 19.952152, 3.9976568), (-3.61055, 19.948315, 4.0012703), (-3.61055, 17.693094, 4.0012703), (-3.6108046, 17.689255, 3.9976568), (-3.606966, 17.689016, 4.0012703), (-3.7753181, 17.710556, 3.9976559), (-3.774376, 17.714306, 4.0014954), (-4.1014194, 17.879776, 3.9976559), (-4.0989513, 17.882744, 4.0014954), (-4.3513374, 18.192158, 3.9976559), (-4.3479404, 18.193981, 4.0014954), (-4.486496, 18.600021, 3.9976559), (-4.4826927, 18.600628, 4.0014954), (-3.606966, 19.952393, 4.100504), (-3.61055, 19.948315, 4.100504), (-3.61055, 17.693094, 4.100504), (-3.606966, 17.689016, 4.100504), (-3.606966, 19.952393, 4.246172), (-3.6105547, 19.94831, 4.2457514), (-3.7412586, 17.634865, 4.386984), (-3.7403326, 17.640182, 4.388768), (-3.6105547, 17.693096, 4.2457514), (-3.606966, 17.689013, 4.246172), (-3.7402706, 17.706364, 4.3887672), (-3.740777, 17.710247, 4.3849764), (-3.6708336, 20.03535, 4.3702164), (-3.673994, 20.039913, 4.369129), (-3.6735697, 19.939754, 4.3664103), (-3.6715765, 19.943722, 4.369685), (-3.6198158, 20.112556, 4.3184395), (-3.624218, 20.117687, 4.317375), (-3.6268692, 19.94601, 4.315727), (-3.6235418, 19.950043, 4.3174906), (-3.6198158, 17.52885, 4.3184414), (-3.6233463, 17.523903, 4.317587), (-3.6269255, 17.695406, 4.315696), (-3.6235418, 17.691366, 4.3174906), (-3.6708336, 17.606136, 4.3702164), (-3.6740675, 17.601469, 4.3691015), (-3.6736326, 17.701662, 4.3663073), (-3.6715765, 17.697687, 4.369685), (-3.816143, 20.19424, 4.24469), (-4.2200146, 19.985142, 4.2446804), (-4.5291367, 19.598766, 4.244667), (-4.696438, 19.093925, 4.2446575), (-4.696438, 18.547482, 4.2446575), (-4.5291367, 18.04264, 4.244667), (-4.2200146, 17.656265, 4.2446804), (-3.816142, 17.44717, 4.244691)]
                        float3 xformOp:translate:pivot = (-4.242269, 18.820686, 4.193212)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_darkGrey_r_special_eye_mesh_01" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent = [(-3.6773758, 17.066202, 2.006544), (-0.47737598, 18.343906, 4.388768)]
                        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 5, 5, 4, 3, 3, 4, 4, 5, 4, 4, 4, 5, 3, 4, 4, 5, 4, 5, 3, 4, 3, 4, 4, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 5, 3, 4, 4, 5, 4, 5, 3, 4, 3, 4, 4, 4, 4, 3, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 5, 5, 4, 4, 3, 5, 3, 5, 5, 5, 3, 3, 3, 3, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3]
                        int[] faceVertexIndices = [29, 92, 93, 30, 30, 33, 34, 29, 31, 377, 378, 34, 32, 324, 325, 31, 33, 379, 380, 32, 35, 94, 95, 36, 36, 37, 38, 35, 37, 378, 375, 39, 39, 368, 369, 38, 40, 419, 420, 42, 41, 320, 321, 40, 42, 43, 44, 41, 43, 421, 422, 46, 45, 78, 79, 44, 46, 75, 74, 45, 47, 201, 202, 48, 48, 51, 52, 47, 51, 70, 71, 50, 49, 63, 64, 52, 53, 206, 207, 54, 54, 55, 56, 53, 55, 422, 421, 59, 57, 337, 338, 56, 58, 82, 83, 57, 59, 68, 69, 58, 60, 64, 65, 61, 61, 208, 209, 60, 62, 369, 370, 65, 63, 96, 97, 62, 66, 91, 90, 69, 67, 322, 323, 66, 68, 420, 419, 67, 70, 381, 382, 73, 72, 87, 88, 71, 73, 339, 336, 72, 75, 196, 197, 74, 76, 430, 431, 80, 77, 371, 372, 76, 78, 317, 318, 77, 80, 319, 320, 79, 81, 330, 331, 83, 82, 90, 91, 81, 84, 98, 99, 85, 85, 88, 89, 84, 86, 380, 379, 89, 87, 332, 333, 86, 92, 100, 101, 93, 94, 102, 103, 95, 96, 104, 105, 97, 98, 106, 107, 99, 100, 108, 109, 101, 102, 110, 111, 103, 104, 112, 113, 105, 106, 114, 115, 107, 108, 116, 117, 109, 110, 120, 121, 111, 112, 124, 125, 113, 114, 127, 128, 115, 116, 131, 132, 117, 118, 130, 131, 121, 119, 143, 144, 118, 120, 125, 126, 119, 122, 170, 171, 126, 123, 154, 155, 122, 124, 135, 136, 123, 127, 134, 135, 128, 129, 476, 477, 132, 130, 178, 179, 129, 133, 162, 163, 137, 134, 140, 138, 133, 137, 153, 152, 136, 139, 450, 446, 138, 140, 477, 475, 139, 141, 181, 178, 144, 142, 147, 145, 141, 143, 171, 168, 142, 146, 173, 174, 145, 147, 148, 149, 146, 148, 168, 169, 151, 150, 409, 410, 149, 151, 167, 166, 150, 153, 273, 274, 152, 154, 265, 266, 155, 156, 160, 161, 157, 157, 292, 293, 156, 158, 393, 394, 161, 159, 389, 390, 158, 160, 164, 165, 159, 162, 446, 447, 165, 164, 445, 444, 163, 167, 288, 289, 166, 170, 474, 473, 169, 172, 180, 181, 174, 173, 176, 177, 172, 175, 458, 459, 177, 176, 410, 411, 175, 180, 459, 460, 179, 182, 186, 187, 183, 183, 233, 232, 182, 184, 384, 383, 187, 185, 355, 356, 184, 186, 388, 385, 185, 188, 191, 192, 189, 189, 235, 234, 188, 190, 387, 388, 192, 191, 366, 367, 190, 193, 425, 426, 195, 194, 198, 199, 193, 195, 314, 315, 194, 196, 423, 424, 199, 198, 217, 218, 197, 201, 209, 210, 200, 203, 212, 213, 202, 204, 424, 423, 207, 205, 221, 222, 204, 206, 343, 344, 205, 208, 365, 366, 211, 211, 236, 237, 210, 212, 227, 228, 215, 214, 382, 381, 213, 215, 345, 342, 214, 216, 428, 429, 220, 217, 315, 316, 216, 219, 318, 317, 218, 220, 363, 364, 219, 221, 347, 348, 223, 223, 231, 230, 222, 224, 238, 239, 225, 225, 226, 227, 224, 226, 383, 384, 229, 229, 349, 346, 228, 231, 352, 350, 230, 233, 241, 240, 232, 235, 243, 242, 234, 236, 244, 245, 237, 238, 246, 247, 239, 241, 249, 248, 240, 243, 251, 250, 242, 244, 252, 253, 245, 246, 254, 255, 247, 249, 257, 256, 248, 251, 261, 258, 250, 252, 263, 264, 253, 254, 267, 268, 255, 257, 269, 270, 256, 259, 262, 263, 258, 260, 283, 284, 259, 261, 270, 271, 260, 262, 302, 303, 266, 265, 274, 275, 264, 267, 275, 276, 268, 269, 480, 478, 272, 272, 312, 313, 271, 273, 298, 299, 277, 277, 279, 280, 276, 278, 479, 480, 280, 279, 455, 451, 278, 281, 301, 302, 284, 282, 287, 285, 281, 283, 313, 310, 282, 286, 290, 291, 285, 287, 304, 305, 286, 288, 300, 301, 291, 290, 415, 416, 289, 292, 404, 405, 295, 294, 296, 297, 293, 295, 397, 398, 294, 296, 454, 455, 299, 298, 444, 445, 297, 300, 473, 474, 303, 304, 310, 311, 306, 306, 308, 309, 305, 307, 414, 415, 309, 308, 440, 441, 307, 312, 439, 440, 311, 314, 362, 359, 316, 319, 328, 329, 321, 322, 329, 326, 325, 324, 334, 335, 323, 327, 376, 377, 326, 328, 431, 432, 327, 330, 335, 334, 333, 332, 336, 337, 331, 339, 341, 340, 338, 341, 342, 343, 340, 345, 346, 347, 344, 349, 357, 358, 348, 351, 426, 425, 350, 352, 353, 354, 351, 353, 358, 357, 356, 355, 361, 362, 354, 360, 427, 428, 359, 361, 385, 386, 360, 363, 434, 435, 367, 365, 373, 374, 364, 368, 436, 437, 372, 371, 374, 373, 370, 376, 438, 436, 375, 387, 435, 433, 386, 389, 447, 448, 391, 391, 392, 393, 390, 392, 462, 463, 396, 395, 401, 400, 394, 396, 407, 408, 395, 397, 405, 406, 399, 399, 453, 454, 398, 401, 403, 404, 400, 402, 470, 471, 406, 403, 417, 418, 402, 407, 464, 465, 411, 409, 413, 412, 408, 413, 416, 417, 412, 414, 468, 469, 418, 427, 433, 434, 429, 430, 437, 438, 432, 439, 478, 479, 443, 442, 467, 468, 441, 443, 451, 452, 442, 449, 461, 462, 448, 450, 456, 457, 449, 453, 471, 472, 452, 456, 475, 476, 460, 458, 465, 466, 457, 461, 466, 464, 463, 467, 472, 470, 469, 378, 37, 36, 8, 35, 38, 369, 62, 84, 89, 379, 23, 59, 421, 420, 68, 47, 52, 64, 60, 48, 381, 70, 51, 54, 13, 422, 55, 65, 370, 373, 61, 71, 88, 85, 50, 58, 69, 90, 82, 8, 36, 95, 9, 35, 62, 97, 94, 63, 49, 0, 96, 84, 23, 22, 98, 9, 95, 103, 10, 94, 97, 105, 102, 96, 0, 1, 104, 0, 99, 107, 1, 98, 22, 21, 106, 10, 103, 111, 11, 102, 105, 113, 110, 104, 1, 2, 112, 1, 107, 115, 2, 106, 21, 20, 114, 11, 111, 121, 12, 110, 113, 125, 120, 112, 2, 3, 124, 2, 115, 128, 3, 114, 20, 19, 127, 116, 12, 121, 131, 124, 3, 135, 3, 128, 135, 127, 19, 140, 134, 168, 148, 147, 142, 133, 138, 446, 162, 153, 137, 163, 444, 152, 154, 123, 136, 151, 169, 473, 167, 150, 166, 413, 409, 145, 174, 181, 141, 182, 14, 388, 186, 188, 211, 366, 191, 28, 183, 187, 383, 350, 425, 424, 204, 47, 60, 209, 201, 48, 202, 213, 381, 207, 423, 13, 54, 208, 61, 373, 365, 203, 224, 227, 212, 204, 222, 230, 350, 232, 15, 14, 182, 188, 234, 236, 211, 210, 237, 4, 200, 27, 233, 183, 28, 240, 16, 15, 232, 234, 242, 244, 236, 237, 245, 5, 4, 4, 5, 246, 238, 26, 241, 233, 27, 248, 17, 16, 240, 242, 250, 252, 244, 245, 253, 6, 5, 5, 6, 254, 246, 25, 249, 241, 26, 256, 18, 17, 248, 250, 258, 263, 252, 253, 264, 7, 6, 6, 7, 267, 254, 24, 257, 249, 25, 256, 270, 261, 18, 264, 275, 7, 7, 275, 267, 480, 269, 257, 24, 286, 305, 309, 290, 281, 285, 291, 301, 439, 312, 272, 478, 153, 444, 298, 273, 152, 274, 265, 154, 288, 167, 473, 300, 309, 415, 290, 310, 304, 287, 282, 315, 217, 198, 194, 317, 74, 197, 218, 78, 45, 74, 317, 320, 41, 44, 79, 67, 419, 329, 322, 330, 81, 91, 335, 337, 57, 83, 331, 340, 53, 56, 338, 343, 206, 53, 340, 347, 221, 205, 344, 353, 352, 231, 358, 362, 426, 351, 354, 318, 219, 364, 374, 77, 318, 374, 371, 325, 326, 377, 31, 333, 334, 380, 86, 336, 332, 87, 72, 341, 339, 73, 382, 342, 341, 382, 214, 346, 345, 215, 228, 356, 357, 384, 184, 361, 355, 185, 385, 161, 394, 400, 157, 295, 405, 397, 401, 395, 408, 412, 316, 359, 428, 216, 80, 431, 328, 319, 220, 429, 434, 363, 372, 437, 430, 76, 367, 435, 387, 190, 39, 375, 436, 368, 386, 433, 427, 360, 438, 376, 327, 432, 308, 306, 311, 440, 445, 156, 293, 297, 164, 160, 156, 445, 389, 159, 165, 447, 296, 294, 398, 454, 176, 173, 146, 149, 180, 172, 177, 459, 416, 413, 166, 289, 417, 403, 401, 412, 292, 157, 400, 404, 176, 149, 410, 158, 390, 393, 391, 448, 462, 392, 411, 465, 458, 175, 307, 441, 468, 414, 406, 471, 453, 399, 470, 402, 418, 469, 464, 407, 396, 463, 467, 442, 452, 472, 461, 449, 457, 466, 378, 8, 29, 34, 29, 8, 9, 92, 92, 9, 10, 100, 100, 10, 11, 108, 108, 11, 12, 116, 419, 40, 321, 329, 421, 43, 42, 420, 13, 75, 46, 422, 423, 196, 75, 13, 425, 193, 199, 424, 362, 314, 195, 426, 14, 189, 192, 388, 15, 235, 189, 14, 16, 243, 235, 15, 17, 251, 243, 16, 18, 261, 251, 17, 260, 271, 313, 283, 259, 284, 302, 262, 474, 155, 266, 303, 170, 122, 155, 474, 119, 126, 171, 143, 178, 130, 118, 144, 139, 475, 456, 450, 19, 477, 140, 20, 109, 117, 19, 21, 101, 109, 20, 22, 93, 101, 21, 23, 30, 93, 22, 379, 33, 30, 23, 334, 324, 32, 380, 91, 66, 323, 335, 277, 299, 455, 279, 268, 276, 280, 24, 255, 268, 24, 25, 247, 255, 25, 26, 239, 247, 26, 27, 225, 239, 27, 28, 225, 28, 383, 226, 357, 349, 229, 384, 231, 223, 348, 358, 451, 443, 479, 278, 280, 480, 24, 476, 129, 179, 460, 19, 117, 132, 477, 50, 85, 99, 0, 49, 200, 4, 238, 224, 203, 31, 34, 33, 32, 37, 39, 38, 40, 42, 41, 43, 46, 45, 44, 49, 52, 51, 50, 55, 59, 58, 57, 56, 62, 65, 64, 63, 66, 69, 68, 67, 70, 73, 72, 71, 76, 80, 79, 78, 77, 81, 83, 82, 86, 89, 88, 87, 118, 121, 120, 119, 122, 126, 125, 124, 123, 129, 132, 131, 130, 133, 137, 136, 135, 134, 138, 140, 139, 141, 144, 143, 142, 145, 147, 146, 148, 151, 150, 149, 158, 161, 160, 159, 162, 165, 164, 163, 168, 171, 170, 169, 172, 174, 173, 175, 177, 176, 178, 181, 180, 179, 184, 187, 186, 185, 190, 192, 191, 193, 195, 194, 196, 199, 198, 197, 200, 203, 202, 201, 204, 207, 206, 205, 208, 211, 210, 209, 212, 215, 214, 213, 216, 220, 219, 218, 217, 221, 223, 222, 226, 229, 228, 227, 258, 261, 260, 259, 262, 266, 265, 264, 263, 269, 272, 271, 270, 273, 277, 276, 275, 274, 278, 280, 279, 281, 284, 283, 282, 285, 287, 286, 288, 291, 290, 289, 292, 295, 294, 293, 296, 299, 298, 297, 300, 303, 302, 301, 304, 306, 305, 307, 309, 308, 310, 313, 312, 311, 314, 316, 315, 319, 321, 320, 322, 325, 324, 323, 326, 329, 328, 327, 330, 333, 332, 331, 336, 339, 338, 337, 342, 345, 344, 343, 346, 349, 348, 347, 350, 352, 351, 353, 356, 355, 354, 359, 362, 361, 360, 363, 367, 366, 365, 364, 368, 372, 371, 370, 369, 375, 378, 377, 376, 385, 388, 387, 386, 389, 391, 390, 392, 396, 395, 394, 393, 397, 399, 398, 402, 406, 405, 404, 403, 407, 411, 410, 409, 408, 414, 418, 417, 416, 415, 427, 429, 428, 430, 432, 431, 433, 435, 434, 436, 438, 437, 439, 443, 442, 441, 440, 446, 450, 449, 448, 447, 451, 455, 454, 453, 452, 456, 460, 459, 458, 457, 461, 463, 462, 464, 466, 465, 467, 469, 468, 470, 472, 471, 475, 477, 476, 478, 480, 479]
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg>
                        point3f[] points = [(-2.3925838, 17.413057, 2.3976555), (-1.926095, 17.506287, 2.3976555), (-1.4966116, 17.646084, 2.3976555), (-1.1014509, 17.828033, 2.3976564), (-2.3925838, 17.413057, 3.9976559), (-1.926095, 17.506287, 3.9976556), (-1.4966116, 17.646084, 3.9976556), (-1.1014509, 17.828033, 3.9976566), (-2.8773746, 17.540695, 2.006544), (-2.4143162, 17.564754, 2.006544), (-1.977725, 17.650818, 2.006544), (-1.5744276, 17.790432, 2.006545), (-1.2491026, 17.976727, 2.006544), (-3.6773748, 17.540695, 3.1976557), (-2.8773746, 17.540695, 4.3887672), (-2.4143162, 17.564754, 4.3887672), (-1.977725, 17.650818, 4.3887672), (-1.5744276, 17.790432, 4.3887672), (-1.2491026, 17.976727, 4.3887672), (-1.0853701, 17.799591, 2.2020998), (-1.4600077, 17.57373, 2.2021008), (-1.9055834, 17.390978, 2.2020998), (-2.383954, 17.268253, 2.2021008), (-2.8773746, 17.220695, 2.2020998), (-1.0853701, 17.799591, 4.1932116), (-1.4600077, 17.57373, 4.1932125), (-1.9055843, 17.390978, 4.1932116), (-2.383954, 17.268253, 4.1932125), (-2.8773756, 17.220695, 4.1932116), (-2.8776007, 17.385193, 2.006545), (-2.8773746, 17.377846, 2.010025), (-3.0814323, 17.385185, 2.006544), (-3.0814323, 17.37785, 2.0100193), (-3.0733175, 17.37785, 2.0100203), (-3.0733175, 17.385185, 2.006545), (-2.8773746, 17.700695, 2.0122833), (-2.8773746, 17.694956, 2.006544), (-3.0716362, 17.694956, 2.006544), (-3.0716362, 17.700695, 2.0122824), (-3.0773745, 17.694956, 2.0122833), (-3.6716366, 17.694956, 2.006544), (-3.6716356, 17.700695, 2.0122833), (-3.6773748, 17.694956, 2.0122833), (-3.6773748, 17.694956, 2.3935976), (-3.6716356, 17.700695, 2.3935986), (-3.6716366, 17.700695, 2.4017134), (-3.6773748, 17.694956, 2.4017134), (-2.8773746, 17.386433, 3.1976557), (-2.883113, 17.380695, 3.1976557), (-2.871643, 17.381077, 2.3976564), (-2.8773746, 17.374956, 2.3976555), (-2.883113, 17.380695, 2.4033947), (-2.8773746, 17.386433, 2.4033937), (-3.6716356, 17.380695, 3.1976557), (-3.6773748, 17.386433, 3.1976557), (-3.6773748, 17.386486, 2.4017506), (-3.6717424, 17.380695, 2.403288), (-3.6718493, 17.375168, 2.3976555), (-3.6773748, 17.376772, 2.392108), (-3.6773748, 17.38506, 2.3932905), (-2.8773746, 17.694956, 3.1976557), (-2.883113, 17.700695, 3.1976557), (-2.8773756, 17.700695, 2.3926554), (-2.8716364, 17.694956, 2.3976555), (-2.8773746, 17.695168, 2.403181), (-2.8831663, 17.700695, 2.4017506), (-3.6716719, 17.377869, 2.0099983), (-3.671689, 17.385143, 2.006545), (-3.6773748, 17.384758, 2.012291), (-3.6773748, 17.376598, 2.0206947), (-3.0733175, 17.380695, 2.4033947), (-3.0733175, 17.374956, 2.3976564), (-3.0814323, 17.374956, 2.3976555), (-3.0814323, 17.380695, 2.4033937), (-3.6716356, 17.700695, 3.1976557), (-3.6773748, 17.694956, 3.1976557), (-3.4718485, 17.695168, 2.3976555), (-3.4734526, 17.700695, 2.403204), (-3.48174, 17.700695, 2.4020205), (-3.4831667, 17.700695, 2.3935604), (-3.477374, 17.695168, 2.39213), (-3.6721087, 17.066202, 2.3909245), (-3.6773748, 17.074083, 2.3913107), (-3.6721077, 17.069393, 2.3976555), (-2.8773756, 17.066687, 2.3903322), (-2.8778105, 17.070156, 2.3976555), (-3.0814323, 17.066696, 2.3903217), (-3.0814323, 17.070171, 2.3976555), (-3.0733175, 17.070171, 2.3976564), (-3.0733175, 17.066696, 2.3903227), (-3.6773748, 17.225136, 2.2057343), (-3.6716356, 17.220695, 2.2020998), (-2.4002419, 17.433256, 2.006544), (-2.399147, 17.425964, 2.0100155), (-2.4292097, 17.700695, 2.0122833), (-2.428873, 17.694956, 2.006544), (-2.428873, 17.694956, 2.3976555), (-2.4292097, 17.700695, 2.3919172), (-2.3690672, 17.113712, 2.3903227), (-2.3700533, 17.117065, 2.3976555), (-1.9482164, 17.555674, 2.006544), (-1.9460506, 17.54861, 2.0099697), (-2.0086775, 17.750214, 2.0122833), (-2.007556, 17.744568, 2.006545), (-2.007556, 17.744568, 2.3976564), (-2.0086765, 17.750214, 2.3919182), (-1.8659449, 17.236572, 2.3902998), (-1.8673716, 17.239708, 2.3976564), (-1.5483284, 17.720085, 2.006545), (-1.5447302, 17.71363, 2.0099592), (-1.6026211, 17.86475, 2.0122833), (-1.600563, 17.859367, 2.006544), (-1.600563, 17.859367, 2.3976555), (-1.6026201, 17.86475, 2.3919172), (-1.3770285, 17.43671, 2.3902874), (-1.3779964, 17.440067, 2.3976555), (-1.2236471, 17.932966, 2.006545), (-1.2186108, 17.927422, 2.0097456), (-1.2714062, 18.028128, 2.006544), (-1.2773762, 18.028652, 2.0122385), (-1.2818213, 18.021732, 2.0124807), (-1.2729101, 18.020102, 2.006545), (-1.2773762, 18.02976, 2.4017954), (-1.2717447, 18.023907, 2.403288), (-1.2760754, 18.018288, 2.3976555), (-1.2815256, 18.021875, 2.3921127), (-1.2773762, 18.028961, 2.3933668), (-0.95506096, 17.674578, 2.3902206), (-0.9555454, 17.67828, 2.3976564), (-1.12537, 18.028076, 2.0086899), (-1.1331558, 18.028116, 2.006544), (-1.1385593, 18.019848, 2.006544), (-1.1281137, 18.020178, 2.009223), (-0.4817543, 18.02901, 2.3950279), (-0.49363995, 18.020586, 2.3905504), (-0.5000019, 18.01878, 2.3976552), (-0.4832058, 18.023907, 2.403486), (-0.47737598, 18.029692, 2.4023569), (-0.6733103, 18.029348, 2.2800446), (-0.680377, 18.029404, 2.2758026), (-0.6812134, 18.021496, 2.2771196), (-1.2716379, 18.187963, 2.006545), (-1.2773762, 18.187963, 2.0122833), (-1.2773762, 18.179848, 2.0122833), (-1.2716379, 18.179848, 2.006545), (-1.2716379, 18.338165, 2.006545), (-1.2716389, 18.343906, 2.0122833), (-1.2773762, 18.338165, 2.0122833), (-1.2773762, 18.338165, 2.3935976), (-1.2716379, 18.343906, 2.3935986), (-1.2716379, 18.343906, 2.4017134), (-1.2773762, 18.338165, 2.4017134), (-0.48311424, 18.023907, 3.1976564), (-0.47737598, 18.029644, 3.1976554), (-1.2716379, 18.023907, 3.1976564), (-1.2773762, 18.029644, 3.1976554), (-0.47737598, 18.338165, 3.1976554), (-0.48311424, 18.343906, 3.1976564), (-0.4955988, 18.343906, 2.3935268), (-0.48134136, 18.338215, 2.3952749), (-0.47737598, 18.338242, 2.4022577), (-0.48317719, 18.343906, 2.401757), (-0.4813738, 18.179848, 2.3952558), (-0.47737598, 18.179848, 2.4023178), (-0.47737598, 18.187963, 2.4023178), (-0.4813738, 18.187963, 2.3952558), (-1.2716379, 18.343906, 3.1976564), (-1.2773762, 18.338165, 3.1976554), (-1.2773762, 18.187963, 2.3935976), (-1.2773762, 18.187963, 2.4017134), (-1.2773762, 18.179848, 2.4017134), (-1.2773762, 18.179848, 2.3935976), (-1.1252203, 18.337986, 2.0087805), (-1.1304541, 18.343906, 2.0119925), (-1.1332884, 18.337986, 2.006545), (-1.0774364, 18.338036, 2.0422316), (-1.0829706, 18.343906, 2.040596), (-1.0815248, 18.338036, 2.0350094), (-1.1330023, 18.179848, 2.006545), (-1.1253347, 18.179695, 2.0087118), (-1.1254663, 18.187963, 2.0086327), (-1.1330023, 18.187963, 2.006545), (-2.8776007, 17.385185, 4.388768), (-2.8773746, 17.37785, 4.385292), (-3.0814323, 17.37785, 4.385292), (-3.0814323, 17.385185, 4.3887672), (-3.0733175, 17.385185, 4.388768), (-3.0733175, 17.37785, 4.385293), (-2.8773756, 17.700695, 4.383029), (-2.8773746, 17.694956, 4.3887672), (-3.0773754, 17.694956, 4.38303), (-3.0716372, 17.700695, 4.383029), (-3.0716362, 17.694956, 4.3887672), (-3.6773748, 17.694956, 4.383029), (-3.6716375, 17.700695, 4.383029), (-3.6716366, 17.694956, 4.3887672), (-3.6773748, 17.694956, 3.993598), (-3.6716366, 17.700695, 3.993599), (-3.6716375, 17.700695, 4.0017138), (-3.6773748, 17.694956, 4.0017138), (-2.8716373, 17.381077, 3.9976559), (-2.8773756, 17.386433, 3.9919176), (-2.8831139, 17.380695, 3.9919186), (-2.8773746, 17.374956, 3.9976559), (-3.6773758, 17.380695, 4.002657), (-3.6716366, 17.374956, 3.9976559), (-3.6718502, 17.380695, 3.9921303), (-3.6773758, 17.386486, 3.9935608), (-2.8831673, 17.700695, 3.9935608), (-2.8773746, 17.69506, 3.9920235), (-2.8716373, 17.694956, 3.9976559), (-2.8773766, 17.700695, 4.002657), (-3.0733175, 17.374956, 3.9976568), (-3.0733175, 17.380695, 3.9919176), (-3.0814333, 17.380695, 3.9919176), (-3.0814323, 17.374956, 3.9976559), (-3.477375, 17.695168, 4.0031815), (-3.4829226, 17.700695, 4.0015783), (-3.48174, 17.700695, 3.993291), (-3.47328, 17.700695, 3.9918652), (-3.4718494, 17.695168, 3.9976559), (-3.6721077, 17.069393, 3.9976559), (-3.6773748, 17.074083, 4.0040007), (-3.6721087, 17.066202, 4.004388), (-2.8778114, 17.070156, 3.9976559), (-2.8773766, 17.066687, 4.00498), (-3.0733175, 17.066696, 4.0049906), (-3.0733175, 17.070171, 3.9976568), (-3.0814323, 17.070171, 3.9976559), (-3.0814323, 17.066696, 4.0049896), (-3.6773748, 17.225136, 4.189578), (-3.6716356, 17.220695, 4.1932116), (-2.400239, 17.433235, 4.388768), (-2.399148, 17.425964, 4.385297), (-2.4292097, 17.700695, 4.383029), (-2.428873, 17.694956, 4.3887672), (-2.4292097, 17.700695, 4.003394), (-2.428873, 17.694956, 3.9976559), (-2.3700533, 17.117065, 3.9976559), (-2.3690672, 17.113712, 4.0049887), (-1.9482126, 17.55566, 4.3887672), (-1.9460516, 17.548615, 4.3853483), (-2.0086775, 17.750214, 4.38303), (-2.007556, 17.744568, 4.388768), (-2.0086765, 17.750214, 4.003395), (-2.007556, 17.744568, 3.9976566), (-1.8673716, 17.239708, 3.9976566), (-1.8659449, 17.236572, 4.0050125), (-1.548336, 17.7201, 4.388768), (-1.5447292, 17.71363, 4.385354), (-1.6026201, 17.86475, 4.383029), (-1.600563, 17.859367, 4.3887672), (-1.6026201, 17.86475, 4.003395), (-1.600563, 17.859367, 3.9976556), (-1.3779964, 17.440067, 3.9976556), (-1.3770227, 17.436699, 4.0050106), (-1.2236719, 17.932995, 4.388768), (-1.2186108, 17.927422, 4.3855667), (-1.2817469, 18.021767, 4.38293), (-1.2773762, 18.028614, 4.3831177), (-1.2713032, 18.0282, 4.3887672), (-1.2729435, 18.02013, 4.388768), (-1.2773762, 18.028961, 4.0019455), (-1.2816648, 18.021809, 4.0033836), (-1.276062, 18.018227, 3.9976556), (-1.2718506, 18.023907, 3.992131), (-1.2773762, 18.02976, 3.9935157), (-0.9555454, 17.67828, 3.9976566), (-0.9550333, 17.674551, 4.0050516), (-1.1281137, 18.020178, 4.3860903), (-1.1391754, 18.019588, 4.388768), (-1.1330023, 18.027964, 4.3887672), (-1.12537, 18.028076, 4.3866215), (-0.47737598, 18.029692, 3.992955), (-0.4835024, 18.023907, 3.9915302), (-0.50090694, 18.018574, 3.9976566), (-0.49227142, 18.020866, 4.0041637), (-0.48175335, 18.02901, 4.000285), (-0.6805744, 18.029346, 4.119629), (-0.6735077, 18.029404, 4.115387), (-0.6814461, 18.021496, 4.118331), (-1.2773762, 18.187963, 4.383029), (-1.2716379, 18.187963, 4.388768), (-1.2716379, 18.179848, 4.388768), (-1.2773762, 18.179848, 4.383029), (-1.2773762, 18.338165, 4.383029), (-1.2716379, 18.343906, 4.383029), (-1.2716379, 18.338165, 4.388768), (-1.2773762, 18.338165, 3.9935987), (-1.2716379, 18.343906, 3.9935987), (-1.2716379, 18.343906, 4.0017147), (-1.2773762, 18.338165, 4.0017138), (-0.48317719, 18.343906, 3.9935548), (-0.47737598, 18.338203, 3.9930236), (-0.48130894, 18.33826, 4.000017), (-0.4955988, 18.343906, 4.0017853), (-0.4813738, 18.187963, 4.0000563), (-0.47737598, 18.187963, 3.992993), (-0.47737598, 18.179848, 3.992993), (-0.4813738, 18.179848, 4.0000563), (-1.2773762, 18.187963, 3.9935987), (-1.2773762, 18.187963, 4.0017138), (-1.2773762, 18.179848, 4.0017138), (-1.2773762, 18.179848, 3.9935987), (-1.1332884, 18.337986, 4.3887672), (-1.1304541, 18.343906, 4.38332), (-1.1252203, 18.337986, 4.386532), (-1.0773649, 18.3381, 4.3530903), (-1.0814533, 18.338036, 4.36026), (-1.0828981, 18.343906, 4.3546734), (-1.1330023, 18.187963, 4.3887672), (-1.1253347, 18.188116, 4.3866005), (-1.1254654, 18.179848, 4.3866787), (-1.1330023, 18.179848, 4.3887672), (-3.4831142, 17.694956, 4.3887672), (-3.4831133, 17.700695, 4.383029), (-3.477376, 17.694956, 4.383029), (-3.4814339, 17.700695, 3.1976566), (-3.4733171, 17.700695, 3.1976557), (-3.477374, 17.694956, 2.0122833), (-3.4831133, 17.700695, 2.0122833), (-3.4831133, 17.694956, 2.006544), (-3.481433, 17.385185, 2.006545), (-3.481433, 17.37785, 2.0100203), (-3.4733171, 17.37785, 2.0100193), (-3.4733171, 17.385185, 2.006544), (-3.47328, 17.534903, 2.006545), (-3.4717426, 17.540695, 2.0121765), (-3.477374, 17.546432, 2.0122833), (-3.4823751, 17.540695, 2.006544), (-3.481433, 17.066696, 2.3903227), (-3.481433, 17.070171, 2.3976564), (-3.4733171, 17.070171, 2.3976555), (-3.4733171, 17.066696, 2.3903217), (-3.4733171, 17.220695, 2.2020998), (-3.481433, 17.220695, 2.2021008), (-3.4733171, 17.374956, 2.3976555), (-3.481433, 17.374956, 2.3976564), (-3.481433, 17.380695, 2.4033947), (-3.4733171, 17.380695, 2.4033937), (-3.4814339, 17.380695, 3.1976566), (-3.4733171, 17.380695, 3.1976557), (-3.4733171, 17.380695, 3.9919176), (-3.481433, 17.380695, 3.9919176), (-3.481433, 17.374956, 3.9976568), (-3.473318, 17.374956, 3.9976559), (-3.473318, 17.070171, 3.9976559), (-3.481433, 17.070171, 3.9976568), (-3.481433, 17.066696, 4.0049906), (-3.473318, 17.066696, 4.0049896), (-3.6773758, 17.3833, 4.3832664), (-3.6715622, 17.385242, 4.3887672), (-3.6715622, 17.377813, 4.3852463), (-3.481433, 17.37785, 4.385293), (-3.481433, 17.385185, 4.388768), (-3.473318, 17.385185, 4.3887672), (-3.473318, 17.37785, 4.385292), (-3.4733171, 17.220695, 4.1932116), (-3.4814339, 17.220695, 4.1932125), (-3.477376, 17.546432, 4.383029), (-3.4718494, 17.540695, 4.3832417), (-3.4734526, 17.535147, 4.388768), (-3.482479, 17.540695, 4.3887672), (-3.082901, 17.695168, 3.9976559), (-3.0812979, 17.700695, 3.9921083), (-3.0730104, 17.700695, 3.993291), (-3.0715828, 17.700695, 4.001751), (-3.0773754, 17.695168, 4.0031815), (-3.0773745, 17.695168, 2.39213), (-3.071827, 17.700695, 2.393733), (-3.0730095, 17.700695, 2.4020205), (-3.0814705, 17.700695, 2.403448), (-3.0829, 17.695168, 2.3976555), (-3.0733166, 17.700695, 3.1976566), (-3.0814314, 17.700695, 3.1976557), (-3.0773745, 17.546432, 2.0122833), (-3.0829, 17.540695, 2.0120697), (-3.0812979, 17.535147, 2.006545), (-3.0722713, 17.540695, 2.006544), (-3.0733175, 17.220695, 2.2021008), (-3.0814323, 17.220695, 2.2020998), (-3.0733166, 17.380695, 3.1976566), (-3.0814314, 17.380695, 3.1976557), (-3.0733185, 17.220695, 4.1932125), (-3.0814333, 17.220695, 4.1932116), (-3.0814714, 17.534903, 4.388768), (-3.0830078, 17.540695, 4.383135), (-3.0773754, 17.546432, 4.38303), (-3.0723743, 17.540695, 4.3887672), (-0.67015743, 18.338486, 2.2819366), (-0.6706648, 18.343906, 2.288826), (-0.6768303, 18.338486, 2.2857113), (-0.67689323, 18.338379, 2.3921297), (-0.67134666, 18.343906, 2.3937318), (-0.672534, 18.343906, 2.4020202), (-0.68099594, 18.343906, 2.403447), (-0.6824217, 18.338379, 2.3976552), (-0.6708956, 18.343906, 4.1066256), (-0.6701946, 18.338326, 4.1133976), (-0.67706203, 18.338326, 4.1095123), (-0.67331886, 18.343906, 3.1976564), (-0.6814337, 18.343906, 3.1976554), (-0.6826258, 18.338379, 3.9976566), (-0.6810255, 18.343906, 3.992109), (-0.6727371, 18.343906, 3.9932916), (-0.67130756, 18.343906, 4.001752), (-0.6770983, 18.338379, 4.0031815), (-1.0718918, 18.338379, 2.3976555), (-1.0734949, 18.343906, 2.403203), (-1.0817823, 18.343906, 2.4020205), (-1.08321, 18.343906, 2.3935595), (-1.0774183, 18.338379, 2.39213), (-1.0733185, 18.343906, 3.1976554), (-1.0814342, 18.343906, 3.1976564), (-1.0773678, 18.338379, 4.0031815), (-1.0829163, 18.343906, 4.0015783), (-1.0817337, 18.343906, 3.9932897), (-1.0732727, 18.343906, 3.991864), (-1.0718422, 18.338379, 3.9976556), (-3.6716366, 17.540695, 2.006544), (-3.6773748, 17.540695, 2.0122833), (-3.6773748, 17.540695, 2.3935976), (-3.6773748, 17.540695, 2.4017134), (-3.6773748, 17.540695, 3.993598), (-3.6773748, 17.540695, 4.0017138), (-3.6773748, 17.540695, 4.383029), (-3.6716375, 17.540695, 4.388768), (-3.4716377, 17.540695, 4.003395), (-3.477375, 17.546432, 4.003395), (-3.4716368, 17.546432, 3.9976568), (-3.4716368, 17.546432, 2.3976564), (-3.477375, 17.546432, 2.3919172), (-3.4716368, 17.540695, 2.3919172), (-3.0831146, 17.540695, 4.003395), (-3.0831137, 17.546432, 3.9976568), (-3.0773754, 17.546432, 4.003395), (-3.0773745, 17.546432, 2.3919182), (-3.0831137, 17.546432, 2.3976564), (-3.0831137, 17.540695, 2.3919172), (-1.0809956, 18.17967, 4.3599854), (-1.081501, 18.188103, 4.3602896), (-1.0773649, 18.189644, 4.3531427), (-1.071907, 18.183907, 4.3481655), (-1.0738535, 18.178114, 4.3556986), (-0.47737598, 18.179848, 3.1976554), (-0.47737598, 18.187963, 3.1976554), (-0.6728573, 18.179277, 2.2803164), (-0.67002773, 18.187813, 2.2820148), (-0.6768303, 18.189259, 2.285614), (-0.6824961, 18.183907, 2.2811422), (-0.68033695, 18.178114, 2.2758265), (-0.6805706, 18.178114, 4.119626), (-0.68297863, 18.183907, 4.114169), (-0.67706203, 18.18935, 4.109708), (-0.6707401, 18.187538, 4.1137257), (-0.67309093, 18.179277, 4.115136), (-1.073925, 18.178114, 2.0395718), (-1.0719404, 18.183907, 2.0471725), (-1.0774364, 18.18945, 2.0419674), (-1.0814476, 18.187977, 2.0350552), (-1.081068, 18.17967, 2.035284), (-0.6826315, 18.183907, 2.3919172), (-0.6768942, 18.189644, 2.391916), (-0.6826353, 18.189644, 2.3976543), (-1.0716791, 18.189644, 2.3976555), (-1.0774183, 18.189644, 2.3919163), (-1.0716791, 18.183907, 2.3919172), (-1.0716295, 18.183907, 4.003394), (-1.0773678, 18.189644, 4.003394), (-1.0716295, 18.189644, 3.9976556), (-0.68283844, 18.189644, 3.9976566), (-0.6770983, 18.189644, 4.003394), (-0.68283653, 18.183907, 4.003395), (-1.2773762, 18.187963, 3.1976554), (-1.2773762, 18.179848, 3.1976554), (-1.0737343, 18.028223, 2.0396852), (-1.0809155, 18.027964, 2.0353756), (-1.0775595, 18.020428, 2.0400171), (-1.0810652, 18.028223, 4.3600283), (-1.073885, 18.027964, 4.3557177), (-1.0774889, 18.020428, 4.355253)]
                        float3 xformOp:translate:pivot = (-2.0773757, 17.705053, 3.197656)
                        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_030_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.9975836902664077, 19.300704284450532, -0.8019153978477477)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_020_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-3.917571845631396, 18.02056537463379, 3.1981036160339302)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_cable_cap_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-1.955, 17.61941879272461, -0.599889576224046)
                        float3 xformOp:translate:rotatePivot = (0, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0.32, 0, -0.32)
                        float3 xformOp:translate:scalePivot = (0, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-4.237571517726065, 17.220705374023435, 3.9980914090026722)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.71993893, 1.2800611, -2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_3x1_no_studs_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -90, 0)
                        double3 xformOp:translate = (-2.797563744617273, 18.02069316699219, 3.1981036160339316)
                        float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (0.4, -9.797174e-17, -0.4)
                        float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-4.237571517726068, 17.22070537402344, 3.1980921719421254)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.71993893, 1.2800611, -2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_006_mesh"
                    {
                        double3 xformOp:translate = (-3.597566905598439, 18.66070435836029, 0.7981059644569362)
                        float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-3.5975718527839553, 20.420702322265626, 1.5981013272155709)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_30_1x2x2_3_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-3.7575781971023465, 18.820700867912294, -1.6018993165145927)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.1199876, -0.72000885, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_30_1x2x2_3_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-3.757578197102344, 18.820711477539064, -0.0019085313926748126)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.1199876, 0.07999125, -1.199979)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-2.6375716358230465, 18.020704968711854, 3.998091468607327)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-2.637571635823052, 19.620699628135682, 2.39810443857803)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, -0, 0)
                        double3 xformOp:translate = (-3.597566905598437, 18.020693598895487, 3.998091409002682)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.48082992, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_031_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-1.197561088185108, 19.940705521842958, 2.3980853650917195)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_018_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.9975760608718764, 18.66070435836029, -0.8019153978477406)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_015_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (-1.9975684314773452, 19.140702708503724, -2.4019153024803144)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_with_groove_021_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (-2.797579112629687, 17.38069377734375, 3.998091409002682)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x1_with_clip_highlight_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.9975760608718762, 17.38070438697052, -0.8019153978477483)
                        float3 xformOp:translate:rotatePivot = (0.40000004, 0.56041497, 0.4000003)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.8000001, 0, -0.8000006)
                        float3 xformOp:translate:scalePivot = (0.40000004, 0.56041497, 0.4000003)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x4_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-0.3975732952163581, 19.940705521842958, 0.798083076273362)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_brick_1x1_with_clip_highlight_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (-1.677572074513232, 18.820706113121034, 4.158098945413975)
                        float3 xformOp:translate:rotatePivot = (0.40000004, 0.56041497, 0.4000003)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.80000037, -0.16041493, -0.9604153)
                        float3 xformOp:translate:scalePivot = (0.40000004, 0.56041497, 0.4000003)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-2.637571434234844, 18.02070878340912, 1.5981091354240329)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.3603938, 0.2395639, 0)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-3.597571673970015, 18.02055749881464, 3.1981036160339267)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.0403938, 0.5595639, 0)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-3.597571375946797, 18.02069316699219, 1.5981013272155709)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_006_mesh"
                    {
                        double3 xformOp:translate = (-3.597566905598439, 18.340704364217274, 0.7981059644569344)
                        float3 xformOp:translate:pivot = (1.1240871, 0.23999998, 0.4)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_007_mesh"
                    {
                        double3 xformOp:translate = (-3.597566905598439, 18.340704364217274, -0.001893272603614271)
                        float3 xformOp:translate:pivot = (1.1240871, 0.23999998, 0.4)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_3x1_no_studs_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -90, 0)
                        double3 xformOp:translate = (-2.7975637446172748, 18.02069316699219, 2.39810056427612)
                        float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (0.4, -9.797174e-17, -0.4)
                        float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-1.357572379689017, 18.820703848144536, 3.198103556429291)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_019_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-3.7575781971023434, 18.020713074943544, 1.5980937574256844)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-3.7575781971023434, 18.82071231200409, 1.5980937574256844)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_2x4_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-0.3975732952163581, 20.26070438697052, 2.798182235514079)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_tile_2x4_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-0.39757329521635987, 20.26070438697052, 4.398182235514077)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x4_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-2.797579112629689, 18.020705445549012, -1.6018993761192366)
                        float3 xformOp:translate:rotatePivot = (1.5997185, 0.8807498, 0.56018215)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.1599007, 0, 1.0395362)
                        float3 xformOp:translate:scalePivot = (1.5997185, 0.8807498, 0.56018215)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (-1.9975760608718756, 17.38070438697052, 1.5980937574256862)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x3_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-1.597572246174611, 19.300704284450532, -0.8019153978477512)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_2x2_018_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.597583690266408, 19.300704284450532, -1.601922264302826)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_plate_2x3_002_mesh"
                    {
                        double3 xformOp:translate = (-3.1975745349929703, 18.98070429160309, -2.401909640039066)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-2.797579112629689, 17.38070438697052, -1.6019033471783608)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x1_v_clip_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 3.1805547e-15, -90)
                        double3 xformOp:translate = (-2.7975638538406264, 18.34069965674591, -1.4419147874961857)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.24041493, 0.6797043)
                        float3 xformOp:translate:rotatePivotTranslate = (0.2797043, -0.64041495, -0.9201192)
                        float3 xformOp:translate:scalePivot = (0.4, 0.24041493, 0.6797043)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_022_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-3.5975702434585446, 19.940705521842958, 3.998087653910061)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_slope_2x2_inverted_45_double_convex_003_mesh"
                    {
                        double3 xformOp:translate = (-2.7975638538406264, 18.66070435836029, -0.8018963243614089)
                        float3 xformOp:translate:pivot = (0.7999789, 0.56041497, 0.79994315)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_round_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (-1.9975760608718764, 17.38070438697052, -0.0019085313926732184)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-1.3575715741453036, 18.820692761680604, 2.39810443857803)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.3603938, -0.960415, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_2x3_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-1.9975759819056065, 17.38070438697052, -0.8018961201304017)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_1x2_with_groove_029_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-3.5975702434585464, 19.940705521842958, 2.3980853650917053)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, -90)
                        double3 xformOp:translate = (-3.5975716739700196, 19.620699678800158, 2.398096749578854)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.0403938, -1.0403938, -0.80000013)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Mesh "Wall_e_RIG_v001_black_r_cable_mesh" (
                        prepend apiSchemas = ["MaterialBindingAPI"]
                    )
                    {
                        uniform bool doubleSided = 1
                        float3[] extent.timeSamples = {
                            1: [(-1.7941705, 16.3173, -8.88961), (-0.24912472, 17.147783, -6.065408)],
                        }
                        int[] faceVertexCounts.timeSamples = {
                            1: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                        }
                        int[] faceVertexIndices.timeSamples = {
                            1: [0, 1, 7, 6, 1, 2, 8, 7, 2, 3, 9, 8, 3, 4, 10, 9, 4, 5, 11, 10, 5, 0, 6, 11, 6, 7, 13, 12, 7, 8, 14, 13, 8, 9, 15, 14, 9, 10, 16, 15, 10, 11, 17, 16, 11, 6, 12, 17, 12, 13, 19, 18, 13, 14, 20, 19, 14, 15, 21, 20, 15, 16, 22, 21, 16, 17, 23, 22, 17, 12, 18, 23, 18, 19, 25, 24, 19, 20, 26, 25, 20, 21, 27, 26, 21, 22, 28, 27, 22, 23, 29, 28, 23, 18, 24, 29, 24, 25, 31, 30, 25, 26, 32, 31, 26, 27, 33, 32, 27, 28, 34, 33, 28, 29, 35, 34, 29, 24, 30, 35, 30, 31, 37, 36, 31, 32, 38, 37, 32, 33, 39, 38, 33, 34, 40, 39, 34, 35, 41, 40, 35, 30, 36, 41, 36, 37, 43, 42, 37, 38, 44, 43, 38, 39, 45, 44, 39, 40, 46, 45, 40, 41, 47, 46, 41, 36, 42, 47, 42, 43, 49, 48, 43, 44, 50, 49, 44, 45, 51, 50, 45, 46, 52, 51, 46, 47, 53, 52, 47, 42, 48, 53, 48, 49, 55, 54, 49, 50, 56, 55, 50, 51, 57, 56, 51, 52, 58, 57, 52, 53, 59, 58, 53, 48, 54, 59, 54, 55, 61, 60, 55, 56, 62, 61, 56, 57, 63, 62, 57, 58, 64, 63, 58, 59, 65, 64, 59, 54, 60, 65, 60, 61, 67, 66, 61, 62, 68, 67, 62, 63, 69, 68, 63, 64, 70, 69, 64, 65, 71, 70, 65, 60, 66, 71, 66, 67, 73, 72, 67, 68, 74, 73, 68, 69, 75, 74, 69, 70, 76, 75, 70, 71, 77, 76, 71, 66, 72, 77, 72, 73, 79, 78, 73, 74, 80, 79, 74, 75, 81, 80, 75, 76, 82, 81, 76, 77, 83, 82, 77, 72, 78, 83, 78, 79, 85, 84, 79, 80, 86, 85, 80, 81, 87, 86, 81, 82, 88, 87, 82, 83, 89, 88, 83, 78, 84, 89, 84, 85, 91, 90, 85, 86, 92, 91, 86, 87, 93, 92, 87, 88, 94, 93, 88, 89, 95, 94, 89, 84, 90, 95, 90, 91, 97, 96, 91, 92, 98, 97, 92, 93, 99, 98, 93, 94, 100, 99, 94, 95, 101, 100, 95, 90, 96, 101, 96, 97, 103, 102, 97, 98, 104, 103, 98, 99, 105, 104, 99, 100, 106, 105, 100, 101, 107, 106, 101, 96, 102, 107, 102, 103, 109, 108, 103, 104, 110, 109, 104, 105, 111, 110, 105, 106, 112, 111, 106, 107, 113, 112, 107, 102, 108, 113, 108, 109, 115, 114, 109, 110, 116, 115, 110, 111, 117, 116, 111, 112, 118, 117, 112, 113, 119, 118, 113, 108, 114, 119, 114, 115, 121, 120, 115, 116, 122, 121, 116, 117, 123, 122, 117, 118, 124, 123, 118, 119, 125, 124, 119, 114, 120, 125],
                        }
                        rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_black_sg>
                        point3f[] points.timeSamples = {
                            1: [(-1.4755377, 16.504652, -6.070486), (-1.6179049, 16.403013, -6.065408), (-1.7772213, 16.475315, -6.0693526), (-1.7941705, 16.64926, -6.078375), (-1.6518033, 16.750898, -6.0834527), (-1.4924868, 16.678596, -6.0795083), (-1.4752343, 16.492344, -6.3083625), (-1.6176015, 16.390703, -6.3032846), (-1.7769179, 16.463007, -6.307229), (-1.793867, 16.63695, -6.3162513), (-1.6514997, 16.73859, -6.321329), (-1.4921833, 16.666288, -6.3173847), (-1.4729475, 16.479963, -6.5548105), (-1.6150721, 16.37794, -6.5507507), (-1.7745512, 16.44981, -6.555838), (-1.7919053, 16.623707, -6.5649853), (-1.6497806, 16.725733, -6.569045), (-1.4903017, 16.65386, -6.5639577), (-1.4668828, 16.467619, -6.807744), (-1.6084998, 16.364832, -6.805626), (-1.7682775, 16.435846, -6.8129115), (-1.7864383, 16.609648, -6.822315), (-1.6448214, 16.712435, -6.8244333), (-1.4850436, 16.64142, -6.817148), (-1.4552627, 16.455439, -7.0650167), (-1.5960559, 16.351507, -7.065707), (-1.7562257, 16.421223, -7.0762186), (-1.7756023, 16.594868, -7.086039), (-1.6348093, 16.698801, -7.0853486), (-1.4746394, 16.629086, -7.0748377), (-1.4363284, 16.443567, -7.3244295), (-1.5759026, 16.33809, -7.3287697), (-1.7364955, 16.406033, -7.3435593), (-1.7575144, 16.57945, -7.3540087), (-1.6179402, 16.684927, -7.3496685), (-1.4573473, 16.616985, -7.334879), (-1.4078789, 16.433023, -7.5823474), (-1.5455775, 16.32543, -7.5916996), (-1.7065756, 16.390926, -7.612064), (-1.7298752, 16.564018, -7.6230755), (-1.5921766, 16.671614, -7.6137233), (-1.4311785, 16.606115, -7.593359), (-1.3659815, 16.428324, -7.8293676), (-1.5000441, 16.3173, -7.8474336), (-1.6613944, 16.378832, -7.875809), (-1.6886821, 16.551382, -7.886119), (-1.5546194, 16.662405, -7.868053), (-1.3932692, 16.600876, -7.839678), (-1.3067952, 16.434713, -8.054452), (-1.433678, 16.318468, -8.086276), (-1.5947714, 16.373632, -8.126659), (-1.628982, 16.545042, -8.135219), (-1.5020992, 16.661287, -8.103395), (-1.3410058, 16.606123, -8.063012), (-1.2276893, 16.457806, -8.245554), (-1.3403325, 16.334229, -8.29718), (-1.4987937, 16.379389, -8.356135), (-1.5446116, 16.548126, -8.363463), (-1.4319683, 16.671701, -8.311837), (-1.2735072, 16.626543, -8.252883), (-1.1293627, 16.503313, -8.38951), (-1.2141844, 16.370811, -8.466152), (-1.3625419, 16.400991, -8.553926), (-1.4260777, 16.56367, -8.565059), (-1.3412561, 16.696169, -8.488417), (-1.1928985, 16.66599, -8.400642), (-1.0194725, 16.570993, -8.480154), (-1.0595921, 16.431477, -8.577882), (-1.1814295, 16.444294, -8.7028475), (-1.2631474, 16.596626, -8.730084), (-1.2230277, 16.736143, -8.632357), (-1.1011903, 16.723326, -8.507391), (-0.9059822, 16.646309, -8.531175), (-0.9010835, 16.505228, -8.6346035), (-0.98316824, 16.50714, -8.789145), (-1.0701516, 16.65013, -8.8402605), (-1.0750502, 16.79121, -8.736832), (-0.9929655, 16.789299, -8.582289), (-0.7969021, 16.719889, -8.546828), (-0.7541225, 16.580965, -8.644271), (-0.789468, 16.580074, -8.815662), (-0.8675931, 16.718107, -8.88961), (-0.91037273, 16.85703, -8.792168), (-0.87502724, 16.857922, -8.620777), (-0.7058139, 16.783941, -8.527722), (-0.6314957, 16.649536, -8.611608), (-0.6137903, 16.654024, -8.785652), (-0.67040294, 16.792917, -8.875811), (-0.7447211, 16.927322, -8.791924), (-0.76242656, 16.922836, -8.61788), (-0.64694273, 16.828575, -8.479672), (-0.54569215, 16.701355, -8.544389), (-0.46865517, 16.721571, -8.700214), (-0.49286878, 16.869009, -8.791323), (-0.59411937, 16.996231, -8.726606), (-0.67115635, 16.976013, -8.570781), (-0.6165739, 16.848143, -8.41108), (-0.49233264, 16.732544, -8.453811), (-0.3639389, 16.778599, -8.563441), (-0.35978642, 16.940252, -8.6303425), (-0.4840277, 17.055851, -8.587612), (-0.61242145, 17.009796, -8.477981), (-0.5875033, 16.858345, -8.305134), (-0.44785574, 16.755592, -8.328914), (-0.29896134, 16.82332, -8.391109), (-0.28971452, 16.993801, -8.429526), (-0.4293621, 17.096554, -8.405747), (-0.5782565, 17.028826, -8.343552), (-0.56533235, 16.867098, -8.156227), (-0.41744223, 16.774048, -8.16598), (-0.26526326, 16.854624, -8.19719), (-0.26097447, 17.02825, -8.218645), (-0.40886462, 17.1213, -8.208892), (-0.56104356, 17.040724, -8.177683), (-0.5547475, 16.874847, -7.9792624), (-0.40296477, 16.787748, -7.9800506), (-0.2519923, 16.875158, -7.993897), (-0.25280258, 17.04967, -8.006955), (-0.40458536, 17.136768, -8.006167), (-0.55555785, 17.049358, -7.9923205), (-0.55216306, 16.882692, -7.790434), (-0.3988525, 16.798384, -7.786838), (-0.24912472, 16.888775, -7.792833), (-0.25270754, 17.063475, -7.8024235), (-0.4060181, 17.147783, -7.8060193), (-0.5557459, 17.057392, -7.8000245)],
                        }
                        texCoord2f[] primvars:st (
                            customData = {
                                dictionary Maya = {
                                    token name = "map1"
                                }
                            }
                            interpolation = "faceVarying"
                        )
                        texCoord2f[] primvars:st.timeSamples = {
                            1: [(0, 0.25314867), (0.16666667, 0.25314867), (0.33333334, 0.25314867), (0.5, 0.25314867), (0.6666667, 0.25314867), (0.8333333, 0.25314867), (1, 0.25314867), (0, 0.59771276), (0.16666667, 0.59771276), (0.33333334, 0.59771276), (0.5, 0.59771276), (0.6666667, 0.59771276), (0.8333333, 0.59771276), (1, 0.59771276), (0, 0.9561862), (0.16666667, 0.9561862), (0.33333334, 0.9561862), (0.5, 0.9561862), (0.6666667, 0.9561862), (0.8333333, 0.9561862), (1, 0.9561862), (0, 1.3255264), (0.16666667, 1.3255264), (0.33333334, 1.3255264), (0.5, 1.3255264), (0.6666667, 1.3255264), (0.8333333, 1.3255264), (1, 1.3255264), (0, 1.7027955), (0.16666667, 1.7027955), (0.33333334, 1.7027955), (0.5, 1.7027955), (0.6666667, 1.7027955), (0.8333333, 1.7027955), (1, 1.7027955), (0, 2.0852127), (0.16666667, 2.0852127), (0.33333334, 2.0852127), (0.5, 2.0852127), (0.6666667, 2.0852127), (0.8333333, 2.0852127), (1, 2.0852127), (0, 2.4684963), (0.16666667, 2.4684963), (0.33333334, 2.4684963), (0.5, 2.4684963), (0.6666667, 2.4684963), (0.8333333, 2.4684963), (1, 2.4684963), (0, 2.8421235), (0.16666667, 2.8421235), (0.33333334, 2.8421235), (0.5, 2.8421235), (0.6666667, 2.8421235), (0.8333333, 2.8421235), (1, 2.8421235), (0, 3.1955955), (0.16666667, 3.1955955), (0.33333334, 3.1955955), (0.5, 3.1955955), (0.6666667, 3.1955955), (0.8333333, 3.1955955), (1, 3.1955955), (0, 3.5219135), (0.16666667, 3.5219135), (0.33333334, 3.5219135), (0.5, 3.5219135), (0.6666667, 3.5219135), (0.8333333, 3.5219135), (1, 3.5219135), (0, 3.8208463), (0.16666667, 3.8208463), (0.33333334, 3.8208463), (0.5, 3.8208463), (0.6666667, 3.8208463), (0.8333333, 3.8208463), (1, 3.8208463), (0, 4.1017056), (0.16666667, 4.1017056), (0.33333334, 4.1017056), (0.5, 4.1017056), (0.6666667, 4.1017056), (0.8333333, 4.1017056), (1, 4.1017056), (0, 4.3699026), (0.16666667, 4.3699026), (0.33333334, 4.3699026), (0.5, 4.3699026), (0.6666667, 4.3699026), (0.8333333, 4.3699026), (1, 4.3699026), (0, 4.623046), (0.16666667, 4.623046), (0.33333334, 4.623046), (0.5, 4.623046), (0.6666667, 4.623046), (0.8333333, 4.623046), (1, 4.623046), (0, 4.857094), (0.16666667, 4.857094), (0.33333334, 4.857094), (0.5, 4.857094), (0.6666667, 4.857094), (0.8333333, 4.857094), (1, 4.857094), (0, 5.073305), (0.16666667, 5.073305), (0.33333334, 5.073305), (0.5, 5.073305), (0.6666667, 5.073305), (0.8333333, 5.073305), (1, 5.073305), (0, 5.2890806), (0.16666667, 5.2890806), (0.33333334, 5.2890806), (0.5, 5.2890806), (0.6666667, 5.2890806), (0.8333333, 5.2890806), (1, 5.2890806), (0, 5.5280995), (0.16666667, 5.5280995), (0.33333334, 5.5280995), (0.5, 5.5280995), (0.6666667, 5.5280995), (0.8333333, 5.5280995), (1, 5.5280995), (0, 5.7937655), (0.16666667, 5.7937655), (0.33333334, 5.7937655), (0.5, 5.7937655), (0.6666667, 5.7937655), (0.8333333, 5.7937655), (1, 5.7937655), (0, 6.0767646), (0.16666667, 6.0767646), (0.33333334, 6.0767646), (0.5, 6.0767646), (0.6666667, 6.0767646), (0.8333333, 6.0767646), (1, 6.0767646), (0, 6.362454), (0.16666667, 6.362454), (0.33333334, 6.362454), (0.5, 6.362454), (0.6666667, 6.362454), (0.8333333, 6.362454), (1, 6.362454)],
                        }
                        int[] primvars:st:indices.timeSamples = {
                            1: [0, 1, 8, 7, 1, 2, 9, 8, 2, 3, 10, 9, 3, 4, 11, 10, 4, 5, 12, 11, 5, 6, 13, 12, 7, 8, 15, 14, 8, 9, 16, 15, 9, 10, 17, 16, 10, 11, 18, 17, 11, 12, 19, 18, 12, 13, 20, 19, 14, 15, 22, 21, 15, 16, 23, 22, 16, 17, 24, 23, 17, 18, 25, 24, 18, 19, 26, 25, 19, 20, 27, 26, 21, 22, 29, 28, 22, 23, 30, 29, 23, 24, 31, 30, 24, 25, 32, 31, 25, 26, 33, 32, 26, 27, 34, 33, 28, 29, 36, 35, 29, 30, 37, 36, 30, 31, 38, 37, 31, 32, 39, 38, 32, 33, 40, 39, 33, 34, 41, 40, 35, 36, 43, 42, 36, 37, 44, 43, 37, 38, 45, 44, 38, 39, 46, 45, 39, 40, 47, 46, 40, 41, 48, 47, 42, 43, 50, 49, 43, 44, 51, 50, 44, 45, 52, 51, 45, 46, 53, 52, 46, 47, 54, 53, 47, 48, 55, 54, 49, 50, 57, 56, 50, 51, 58, 57, 51, 52, 59, 58, 52, 53, 60, 59, 53, 54, 61, 60, 54, 55, 62, 61, 56, 57, 64, 63, 57, 58, 65, 64, 58, 59, 66, 65, 59, 60, 67, 66, 60, 61, 68, 67, 61, 62, 69, 68, 63, 64, 71, 70, 64, 65, 72, 71, 65, 66, 73, 72, 66, 67, 74, 73, 67, 68, 75, 74, 68, 69, 76, 75, 70, 71, 78, 77, 71, 72, 79, 78, 72, 73, 80, 79, 73, 74, 81, 80, 74, 75, 82, 81, 75, 76, 83, 82, 77, 78, 85, 84, 78, 79, 86, 85, 79, 80, 87, 86, 80, 81, 88, 87, 81, 82, 89, 88, 82, 83, 90, 89, 84, 85, 92, 91, 85, 86, 93, 92, 86, 87, 94, 93, 87, 88, 95, 94, 88, 89, 96, 95, 89, 90, 97, 96, 91, 92, 99, 98, 92, 93, 100, 99, 93, 94, 101, 100, 94, 95, 102, 101, 95, 96, 103, 102, 96, 97, 104, 103, 98, 99, 106, 105, 99, 100, 107, 106, 100, 101, 108, 107, 101, 102, 109, 108, 102, 103, 110, 109, 103, 104, 111, 110, 105, 106, 113, 112, 106, 107, 114, 113, 107, 108, 115, 114, 108, 109, 116, 115, 109, 110, 117, 116, 110, 111, 118, 117, 112, 113, 120, 119, 113, 114, 121, 120, 114, 115, 122, 121, 115, 116, 123, 122, 116, 117, 124, 123, 117, 118, 125, 124, 119, 120, 127, 126, 120, 121, 128, 127, 121, 122, 129, 128, 122, 123, 130, 129, 123, 124, 131, 130, 124, 125, 132, 131, 126, 127, 134, 133, 127, 128, 135, 134, 128, 129, 136, 135, 129, 130, 137, 136, 130, 131, 138, 137, 131, 132, 139, 138, 133, 134, 141, 140, 134, 135, 142, 141, 135, 136, 143, 142, 136, 137, 144, 143, 137, 138, 145, 144, 138, 139, 146, 145],
                        }
                        uniform token[] xformOpOrder = ["!resetXformStack!"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_012_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-2.317571681759856, 19.620699270507814, 1.5981014464248586)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_4x6_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-0.3975732952163584, 19.62070558860016, -0.8019077684531933)
                        float3 xformOp:translate:rotatePivot = (2.39992, 0.24041496, 1.6000215)
                        float3 xformOp:translate:rotatePivotTranslate = (-3.9999413, 0, 0.7998985)
                        float3 xformOp:translate:scalePivot = (2.39992, 0.24041496, 1.6000215)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_014_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (-1.9975684314773452, 18.34069965674591, -2.0819151308189374)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_012_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-1.997568352511076, 18.34070436551285, -0.0019085313926751057)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_bracket_1x2_2x2_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-0.39757328044602913, 18.020704611083985, 2.398104378973385)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_013_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-3.917571547608174, 20.420702322265626, 1.5981013272155797)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_plate_1x3_012_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -90, 0)
                        double3 xformOp:translate = (-3.917571547608174, 18.02069316699219, 1.5981013272155709)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x2_027_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-2.7975791126296894, 18.98070429160309, -0.8019039537559544)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_slope_curved_2x1_no_studs_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (-1.9975760608718738, 19.140702708503724, -2.4019153024803126)
                        float3 xformOp:translate:rotatePivot = (0.4, -1.3322676e-15, 0.8)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.8, -0.8, -0.8)
                        float3 xformOp:translate:scalePivot = (0.4, -1.3322676e-15, 0.8)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_tile_2x4_014_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-0.397573295216359, 19.940705521842958, -0.0019199754844505534)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_brown_plate_1x4_010_mesh"
                    {
                        double3 xformOp:translate = (-3.5975778728530776, 19.62070558860016, -1.6019031908164871)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_024_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-1.174598795893671, 19.940705521842958, 3.998087653910072)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_023_mesh"
                    {
                        double3 xformOp:translate = (-2.7975671917007356, 19.940705521842958, 3.1980998609413147)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_2x2_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -90, 0)
                        double3 xformOp:translate = (-0.3975618511245612, 18.500711782714838, 2.3981043789733887)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.6399788, 0.6400214, -0.000042557716)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_yellow_plate_1x2_020_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-2.7975791126296894, 18.66070435836029, -0.8019039537559544)
                        float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                        float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_4x1_double_no_studs_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, 90, 0)
                        double3 xformOp:translate = (-4.237571517726066, 17.22070537402344, 2.398096749578845)
                        float3 xformOp:translate:rotatePivot = (0.4, 0.31993893, 1.6000001)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.71993893, 1.2800611, -2)
                        float3 xformOp:translate:scalePivot = (0.4, 0.31993893, 1.6000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_1_side_studs_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-1.1975610881851098, 18.340703471443177, 3.998095223699951)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_pin_2l_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, -90, 0)
                        double3 xformOp:translate = (-2.877543482165136, 18.90857811166954, 0.798105964456936)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.52, 0, 0.88)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_plate_1x1_013_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 180)
                        double3 xformOp:translate = (-1.9975684314773452, 18.34069965674591, -1.7619149591575605)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_plate_1x1_round_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (-1.677572074513232, 18.82071755721283, 4.798099288736721)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_r_iris_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 0, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (2.220446049250313e-15, -3.552713678800501e-15, 0),
                        }
                        float3 xformOp:translate:pivot = (-2.0775652, 19.22071, 5.042348)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                        def Mesh "Wall_e_RIG_v001_black_r_special_eye_mesh_03" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(-2.8775663, 18.420712, 4.771265), (-1.277566, 20.02071, 5.042348)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [16, 0, 1, 17, 17, 1, 2, 18, 18, 2, 3, 19, 19, 3, 4, 20, 20, 4, 5, 21, 21, 5, 6, 22, 22, 6, 7, 23, 23, 7, 8, 24, 24, 8, 9, 25, 25, 9, 10, 26, 26, 10, 11, 27, 27, 11, 12, 28, 28, 12, 13, 29, 29, 13, 14, 30, 30, 14, 15, 31, 31, 15, 0, 16, 32, 16, 17, 33, 33, 17, 18, 34, 34, 18, 19, 35, 35, 19, 20, 36, 36, 20, 21, 37, 37, 21, 22, 38, 38, 22, 23, 39, 39, 23, 24, 40, 40, 24, 25, 41, 41, 25, 26, 42, 42, 26, 27, 43, 43, 27, 28, 44, 44, 28, 29, 45, 45, 29, 30, 46, 46, 30, 31, 47, 47, 31, 16, 32, 48, 32, 33, 49, 49, 33, 34, 50, 50, 34, 35, 51, 51, 35, 36, 52, 52, 36, 37, 53, 53, 37, 38, 54, 54, 38, 39, 55, 55, 39, 40, 56, 56, 40, 41, 57, 57, 41, 42, 58, 58, 42, 43, 59, 59, 43, 44, 60, 60, 44, 45, 61, 61, 45, 46, 62, 62, 46, 47, 63, 63, 47, 32, 48, 64, 48, 49, 65, 65, 49, 50, 66, 66, 50, 51, 67, 67, 51, 52, 68, 68, 52, 53, 69, 69, 53, 54, 70, 70, 54, 55, 71, 71, 55, 56, 72, 72, 56, 57, 73, 73, 57, 58, 74, 74, 58, 59, 75, 75, 59, 60, 76, 76, 60, 61, 77, 77, 61, 62, 78, 78, 62, 63, 79, 79, 63, 48, 64, 80, 65, 66, 67, 80, 67, 68, 69, 80, 69, 70, 71, 80, 71, 72, 73, 80, 73, 74, 75, 80, 75, 76, 77, 80, 77, 78, 79, 80, 79, 64, 65, 83, 82, 112, 113, 82, 83, 85, 84, 84, 85, 87, 86, 86, 87, 89, 88, 88, 89, 91, 90, 90, 91, 93, 92, 92, 93, 95, 94, 94, 95, 97, 96, 96, 97, 99, 98, 98, 99, 101, 100, 100, 101, 103, 102, 102, 103, 105, 104, 104, 105, 107, 106, 106, 107, 109, 108, 108, 109, 111, 110, 110, 111, 113, 112, 115, 114, 144, 145, 114, 115, 117, 116, 116, 117, 119, 118, 118, 119, 121, 120, 120, 121, 123, 122, 122, 123, 125, 124, 124, 125, 127, 126, 126, 127, 129, 128, 128, 129, 131, 130, 130, 131, 133, 132, 132, 133, 135, 134, 134, 135, 137, 136, 136, 137, 139, 138, 138, 139, 141, 140, 140, 141, 143, 142, 142, 143, 145, 144, 112, 82, 0, 15, 1, 0, 82, 84, 2, 1, 84, 86, 3, 2, 86, 88, 4, 3, 88, 90, 5, 4, 90, 92, 6, 5, 92, 94, 7, 6, 94, 96, 8, 7, 96, 98, 9, 8, 98, 100, 10, 9, 100, 102, 11, 10, 102, 104, 12, 11, 104, 106, 13, 12, 106, 108, 14, 13, 108, 110, 15, 14, 110, 112, 144, 114, 83, 113, 85, 83, 114, 116, 87, 85, 116, 118, 89, 87, 118, 120, 91, 89, 120, 122, 93, 91, 122, 124, 95, 93, 124, 126, 97, 95, 126, 128, 99, 97, 128, 130, 101, 99, 130, 132, 103, 101, 132, 134, 105, 103, 134, 136, 107, 105, 136, 138, 109, 107, 138, 140, 111, 109, 140, 142, 113, 111, 142, 144, 115, 145, 81, 117, 119, 117, 81, 121, 123, 121, 81, 125, 127, 125, 81, 129, 131, 129, 81, 133, 135, 133, 81, 137, 139, 137, 81, 141, 143, 141, 81, 145]
                            rel material:binding = </Cache1/mtl/Wall_e_RIG_v001_black_sg>
                            point3f[] points = [(-1.4116573, 19.49654, 4.9040747), (-1.5679007, 19.730377, 4.9040756), (-1.8017378, 19.88662, 4.9040747), (-2.0775661, 19.941486, 4.9040756), (-2.3533936, 19.88662, 4.9040756), (-2.5872307, 19.730377, 4.9040756), (-2.743474, 19.49654, 4.9040747), (-2.7983408, 19.22071, 4.9040747), (-2.743476, 18.944885, 4.9040747), (-2.5872316, 18.711048, 4.9040747), (-2.3533955, 18.554802, 4.9040756), (-2.0775652, 18.499935, 4.9040747), (-1.8017378, 18.554802, 4.9040747), (-1.5679007, 18.711048, 4.9040756), (-1.4116564, 18.944881, 4.9040747), (-1.3567905, 19.22071, 4.9040747), (-1.499712, 19.460068, 4.950386), (-1.6352949, 19.662983, 4.950386), (-1.838211, 19.798565, 4.950386), (-2.0775661, 19.846176, 4.950386), (-2.3169203, 19.798565, 4.950387), (-2.5198364, 19.662983, 4.950386), (-2.6554203, 19.460068, 4.950386), (-2.7030315, 19.22071, 4.950386), (-2.6554203, 18.981358, 4.950386), (-2.5198364, 18.778442, 4.950386), (-2.3169212, 18.642857, 4.950386), (-2.0775661, 18.595245, 4.950386), (-1.838211, 18.642857, 4.950386), (-1.6352949, 18.778442, 4.950386), (-1.499711, 18.981358, 4.950386), (-1.4521008, 19.22071, 4.950386), (-1.6167421, 19.41159, 4.9890604), (-1.7248678, 19.57341, 4.9890604), (-1.8866873, 19.681534, 4.9890604), (-2.0775661, 19.719501, 4.9890594), (-2.268445, 19.681534, 4.9890604), (-2.4302645, 19.57341, 4.9890604), (-2.5383902, 19.41159, 4.9890604), (-2.576357, 19.22071, 4.9890594), (-2.5383902, 19.02983, 4.9890604), (-2.4302654, 18.868011, 4.9890594), (-2.268445, 18.759888, 4.9890604), (-2.0775652, 18.72192, 4.9890604), (-1.8866873, 18.759888, 4.9890604), (-1.7248678, 18.868011, 4.9890604), (-1.6167421, 19.02983, 4.9890604), (-1.5787735, 19.22071, 4.9890604), (-1.7568817, 19.353542, 5.01816), (-1.8321247, 19.466152, 5.01816), (-1.9447346, 19.541397, 5.01816), (-2.0775661, 19.567818, 5.01816), (-2.2103977, 19.541397, 5.01816), (-2.3230076, 19.466152, 5.01816), (-2.3982515, 19.353542, 5.018161), (-2.424673, 19.22071, 5.01816), (-2.3982515, 19.08788, 5.018161), (-2.3230076, 18.97527, 5.01816), (-2.2103987, 18.900028, 5.018161), (-2.0775661, 18.873604, 5.01816), (-1.9447346, 18.900028, 5.01816), (-1.8321247, 18.97527, 5.01816), (-1.7568817, 19.08788, 5.01816), (-1.7304592, 19.22071, 5.01816), (-1.9131002, 19.288837, 5.0362253), (-1.9516897, 19.346588, 5.0362253), (-2.0094423, 19.385178, 5.0362253), (-2.0775652, 19.398727, 5.0362253), (-2.14569, 19.385178, 5.0362253), (-2.2034426, 19.346588, 5.0362253), (-2.242032, 19.288837, 5.0362253), (-2.2555819, 19.22071, 5.0362253), (-2.242032, 19.152588, 5.0362253), (-2.2034426, 19.094833, 5.0362253), (-2.14569, 19.056244, 5.0362253), (-2.0775652, 19.042694, 5.0362253), (-2.0094423, 19.056244, 5.0362253), (-1.9516897, 19.094833, 5.0362253), (-1.9131002, 19.152588, 5.0362253), (-1.8995485, 19.22071, 5.0362253), (-2.0775652, 19.22071, 5.042348), (-2.0775661, 19.22071, 4.771265), (-1.3402796, 19.526104, 4.838829), (-1.3384628, 19.52686, 4.8346004), (-1.5132713, 19.785007, 4.838829), (-1.5118809, 19.786396, 4.8346004), (-1.772171, 19.957996, 4.838829), (-1.7714195, 19.959812, 4.8346004), (-2.0775661, 20.018745, 4.838829), (-2.0775661, 20.02071, 4.8346004), (-2.3829594, 19.957996, 4.838829), (-2.3837118, 19.959812, 4.8346014), (-2.641861, 19.785007, 4.838829), (-2.6432505, 19.786396, 4.8346014), (-2.8148518, 19.526104, 4.838829), (-2.8166695, 19.52686, 4.8346004), (-2.875599, 19.22071, 4.838829), (-2.8775654, 19.22071, 4.8346004), (-2.8148527, 18.915318, 4.83883), (-2.8166695, 18.914566, 4.8346004), (-2.64186, 18.656418, 4.83883), (-2.6432514, 18.655025, 4.8346004), (-2.3829594, 18.483425, 4.838829), (-2.3837128, 18.48161, 4.8346004), (-2.0775661, 18.42268, 4.838829), (-2.0775661, 18.420712, 4.8346004), (-1.7721729, 18.483425, 4.838829), (-1.7714195, 18.48161, 4.8346004), (-1.5132713, 18.656418, 4.838829), (-1.5118809, 18.655025, 4.8346004), (-1.3402796, 18.915318, 4.838829), (-1.3384619, 18.914566, 4.8346004), (-1.2795324, 19.22071, 4.838829), (-1.277566, 19.22071, 4.8346004), (-1.3384628, 19.52686, 4.77456), (-1.3415213, 19.525593, 4.771265), (-1.5118809, 19.786396, 4.77456), (-1.5142221, 19.784054, 4.771265), (-1.7714186, 19.959812, 4.774559), (-1.772686, 19.956753, 4.771265), (-2.0775661, 20.02071, 4.774559), (-2.0775661, 20.017399, 4.771265), (-2.3837118, 19.959812, 4.77456), (-2.3824463, 19.956753, 4.771265), (-2.6432505, 19.786396, 4.77456), (-2.6409092, 19.784054, 4.771265), (-2.8166695, 19.52686, 4.774559), (-2.81361, 19.525593, 4.771265), (-2.8775663, 19.22071, 4.77456), (-2.8742561, 19.22071, 4.771265), (-2.8166685, 18.914566, 4.77456), (-2.813612, 18.915833, 4.771265), (-2.6432505, 18.655025, 4.77456), (-2.640911, 18.657364, 4.771265), (-2.3837118, 18.48161, 4.77456), (-2.3824463, 18.484669, 4.771265), (-2.077567, 18.420712, 4.77456), (-2.0775661, 18.424023, 4.771265), (-1.7714195, 18.48161, 4.77456), (-1.772686, 18.484669, 4.771265), (-1.5118809, 18.655025, 4.77456), (-1.5142212, 18.657364, 4.771265), (-1.3384619, 18.914566, 4.774559), (-1.3415213, 18.915833, 4.771265), (-1.277566, 19.22071, 4.77456), (-1.2808762, 19.22071, 4.771265)]
                            float3 xformOp:translate:pivot = (-2.077566, 19.22071, 4.7980986)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_r_iris_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_iris_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_sclera_grp"
                    {
                        float3 xformOp:rotateXYZ.timeSamples = {
                            1: (0, 360, 0),
                        }
                        float3 xformOp:scale.timeSamples = {
                            1: (1, 1, 1),
                        }
                        double3 xformOp:translate.timeSamples = {
                            1: (8.881784197001252e-16, -7.105427357601002e-15, 8.881784197001252e-16),
                        }
                        float3 xformOp:translate:pivot = (-2.0775661, 19.22071, 4.318574)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                        def Xform "Wall_e_RIG_v001_darkGrey_dish_3x3_inverted_002_mesh"
                        {
                            float3 xformOp:rotateXYZ = (-90, -0, 90)
                            double3 xformOp:translate = (-0.8775690227554214, 18.020714505455018, 4.798098931108853)
                            float3 xformOp:translate:rotatePivot = (1.199997, 0.64, 1.199997)
                            float3 xformOp:translate:rotatePivotTranslate = (-2.399994, 0.55999696, -1.8399969)
                            float3 xformOp:translate:scalePivot = (1.199997, 0.64, 1.199997)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                        }

                        def Xform "Wall_e_RIG_v001_r_sclera_grp_pac"
                        {
                        }

                        def Xform "Wall_e_RIG_v001_r_sclera_grp_scc"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_eye_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_c_head_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_c_head_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_r_wheels_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, 0.4)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_r_wheel_001_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-3.58, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (8.881784197001252e-16, 0, 8.881784197001252e-16),
                    }
                    float3 xformOp:translate:pivot = (-6.031341, 1.4191511, -3.2005212)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_lightGray_technic_wheel_small_6_holes_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-7.631926407914841, 0.16040208053588856, -1.921011900901794)
                        float3 xformOp:translate:rotatePivot = (1.2797493, 1.2589998, 0.6008633)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.67888606, 0, -1.8806126)
                        float3 xformOp:translate:scalePivot = (1.2797493, 1.2589998, 0.6008633)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-6.832197714799213, 1.0594018311500548, -2.840760028362275)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-6.43219428157167, 0.13940187406539914, -4.459521210193634)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.87889624, 0.02074927, 0.85814697)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_005_mesh"
                    {
                        double3 xformOp:translate = (-7.232191626184749, 1.099401867508889, -3.520761227607728)
                        float3 xformOp:translate:pivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_001_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_001_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_wheel_002_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (7.9, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, -0.0002243462260089757, 0),
                    }
                    float3 xformOp:translate:pivot = (-6.031341, 1.4191511, 3.1995199)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-6.432194281571672, 0.13940187406539914, 1.9405198931694025)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.87889624, 0.02074927, 0.85814697)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-7.232191611283588, 1.0594018311500548, 3.559281075000762)
                        float3 xformOp:translate:rotatePivot = (0.3600055, 0.36041513, 0.4000001)
                        float3 xformOp:translate:rotatePivotTranslate = (0.039994594, 0, -0.7600056)
                        float3 xformOp:translate:scalePivot = (0.3600055, 0.36041513, 0.4000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_004_mesh"
                    {
                        double3 xformOp:translate = (-7.2321916261847505, 1.099401867508889, 2.879279875755309)
                        float3 xformOp:translate:pivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_002_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_002_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_wheel_003_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-29.16, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (1.7763568394002505e-15, 4.440892098500626e-16, 2.220446049250313e-16),
                    }
                    float3 xformOp:translate:pivot = (-6.031341, 3.591209, 1.225897)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_lightGray_dish_2x2_inverted_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-6.432198453896809, 2.7914597005844115, 0.42565693855285636)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-4.8321984896595955, 3.2314596982002257, 1.5856581568717956)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-4.0321984945662654, 3.2714597180047438, 1.5456569366855732)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.5604506, 0, -0.64)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-6.432194281571671, 2.311459741115571, -0.033103024959563764)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.87889624, 0.02074927, 0.85814697)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_003_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_003_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_wheel_004_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (7.9, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (1.7763568394002505e-15, 8.881784197001252e-16, 2.220446049250313e-16),
                    }
                    float3 xformOp:translate:pivot = (-6.031341, 5.6481323, -1.2254487)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-4.832198489659595, 5.288382968425751, -0.8656875252723691)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_dish_2x2_inverted_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-6.432198453896809, 4.848382970809936, -2.0256887435913087)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 90)
                        double3 xformOp:translate = (-6.432194281571671, 4.368383011341095, -2.48444870710373)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.87889624, 0.02074927, 0.85814697)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-4.0321984945662654, 5.328382988230269, -0.9056887454585915)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.5604506, 0, -0.64)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_004_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheel_004_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_wheels_tilt_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_blue_pin_1x2_004_mesh"
                    {
                        double3 xformOp:translate = (-5.63218933736639, 4.81415589761734, -0.9328862488269806)
                        float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_1x2_003_mesh"
                    {
                        double3 xformOp:translate = (-5.63218933736639, 3.7856917591094965, 0.29278954267501833)
                        float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x5_thick_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -40, 90)
                        double3 xformOp:translate = (-5.627508107775022, 3.082777613965618, 1.2718200916328244)
                        float3 xformOp:translate:rotatePivot = (0.35749993, 0.40031186, 1.9598299)
                        float3 xformOp:translate:rotatePivotTranslate = (0.04281193, 1.1333033, -3.2313502)
                        float3 xformOp:translate:scalePivot = (0.35749993, 0.40031186, 1.9598299)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheels_tilt_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheels_tilt_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_wheels_base_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_darkGrey_axle_and_pin_connector_perpendicular_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 0)
                        double3 xformOp:translate = (-6.432194669001865, 1.8194018514156336, -1.1600187182426454)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_pin_friction_r_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 0)
                        double3 xformOp:translate = (-5.632189342617154, 4.9399533593139004, -0.3200188429220663)
                        float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.63000005, -0.00999999)
                        float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x1_round_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (-5.632200766557026, 1.0170972111340186, -0.40002421140670785)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_black_axle_4_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (-4.032198537343311, 1.1794018508195876, 0.23998112380504644)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_pin_friction_r_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 0)
                        double3 xformOp:translate = (-5.632189342617153, 1.7394314431628541, -1.9207551033361896)
                        float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.63000005, -0.00999999)
                        float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_3x5_quarter_ellipse_thin_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (-4.832192439788148, 4.979924371957779, 0.3599811434745787)
                        float3 xformOp:translate:rotatePivot = (1.1493192, 0.20010182, 1.9739517)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.9492174, -2.1740534, -3.123271)
                        float3 xformOp:translate:scalePivot = (1.1493192, 0.20010182, 1.9739517)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technic_liftarm_1x9_thick_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (-4.836882773989008, 1.059401831150056, -3.563098794221878)
                        float3 xformOp:translate:rotatePivot = (0.35749993, 0.40031186, 3.55983)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7578118, -0.04281193, 0)
                        float3 xformOp:translate:scalePivot = (0.35749993, 0.40031186, 3.55983)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_3x5_quarter_ellipse_thin_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (-4.432519675998304, 4.979924371957779, 0.35998114347457894)
                        float3 xformOp:translate:rotatePivot = (1.1493192, 0.20010182, 1.9739517)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.9492174, -2.1740534, -3.123271)
                        float3 xformOp:translate:scalePivot = (1.1493192, 0.20010182, 1.9739517)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_pin_1x2_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (-6.352194655888843, 1.8193957419395446, -1.1200476348400117)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.89, -1.51, 0)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_002_mesh"
                    {
                        double3 xformOp:translate = (-4.800013258051198, 1.9099244240638678, -0.32002553332498207)
                        float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_003_mesh"
                    {
                        double3 xformOp:translate = (-4.8000030517578125, 3.5099243433475493, -0.32001883387565633)
                        float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (-7.2321985254223815, 1.0594018311500548, 0.35998233556747383)
                        float3 xformOp:translate:rotatePivot = (0.3600055, 0.36041513, 0.4000001)
                        float3 xformOp:translate:rotatePivotTranslate = (0.039994594, 0, -0.7600056)
                        float3 xformOp:translate:scalePivot = (0.3600055, 0.36041513, 0.4000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_r_wheels_base_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_wheels_base_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_l_wheels_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, 0.4)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_l_wheel_001_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-3.58, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 2.220446049250313e-16, 0),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 1.4184127, -3.2009823)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_008_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -180)
                        double3 xformOp:translate = (7.200468160103259, 1.7386633837115373, -3.520742371082307)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.5604506, -0.64, 0)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (6.400467969368395, 1.0586634556036265, -2.8407412016313915)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (6.400470830391348, 0.13866349851897178, -1.9419824325960526)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.6806022, 0.02074927, -1.659853)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technic_wheel_small_6_holes_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (6.400429010194554, 0.1596636690753357, -1.920993044376373)
                        float3 xformOp:translate:rotatePivot = (1.2797494, 1.2589998, 0.6008633)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.67888606, 0, -1.8806126)
                        float3 xformOp:translate:scalePivot = (1.2797494, 1.2589998, 0.6008633)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_001_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_001_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_wheel_002_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (7.9, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (8.881784197001252e-16, 2.220446049250313e-16, 4.440892098500626e-16),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 1.4184127, 3.1990588)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 180)
                        double3 xformOp:translate = (7.200468160103259, 1.7386633837115377, 2.879298732280731)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.5604506, -0.64, 0)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (6.400470830391348, 0.13866346260484677, 4.458058700561523)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.6806022, 0.02074927, -1.6598529)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (6.400470830391346, 1.0586634196895015, 3.5592999315261813)
                        float3 xformOp:translate:rotatePivot = (0.3600055, 0.36041513, 0.4000001)
                        float3 xformOp:translate:rotatePivotTranslate = (0.039994594, 0, -0.7600056)
                        float3 xformOp:translate:scalePivot = (0.3600055, 0.36041513, 0.4000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_002_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_002_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_wheel_003_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-29.16, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (-1.7763568394002505e-15, 1.3322676295501878e-15, 2.220446049250313e-16),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 3.5904706, 1.2254359)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_lightGray_dish_2x2_inverted_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (6.4004708303913445, 4.3907213129657165, 0.42567579507827746)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (4.4004689230427125, 3.2307212867396724, 1.5856770133972167)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (6.400470830391348, 2.3107213655691425, 2.484435752638017)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.6806022, 0.02074927, -1.659853)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (4.000475028484777, 3.910721267316026, 1.5456757932109937)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.64, -0.64)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_003_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_003_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_wheel_004_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (7.9, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (-8.881784197001252e-16, 0, 2.220446049250313e-16),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 5.6473937, -1.2259098)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_technic_tread_sprocket_wheel_small_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-90, -0, 90)
                        double3 xformOp:translate = (6.400470830391348, 4.367644635794667, 0.03309007049385224)
                        float3 xformOp:translate:rotatePivot = (1.2797492, 1.259, 0.40085298)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.6806022, 0.02074927, -1.6598529)
                        float3 xformOp:translate:scalePivot = (1.2797492, 1.259, 0.40085298)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_3_stud_011_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (4.000475028484777, 5.967644573455676, -0.9056699187277094)
                        float3 xformOp:translate:rotatePivot = (1.2802253, 0.32, 0.32)
                        float3 xformOp:translate:rotatePivotTranslate = (0, -0.64, -0.64)
                        float3 xformOp:translate:scalePivot = (1.2802253, 0.32, 0.32)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_dish_2x2_inverted_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (6.400470830391345, 6.4476445831912415, -2.0256698870658876)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_1_2_smooth_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (4.400468923042712, 5.287644556965198, -0.8656686687469478)
                        float3 xformOp:translate:rotatePivot = (0.35997334, 0.35999995, 0.2001722)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.15980114, 0, -0.56014556)
                        float3 xformOp:translate:scalePivot = (0.35997334, 0.35999995, 0.2001722)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_004_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheel_004_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_wheels_tilt_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0, 8.881784197001252e-16, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_1x5_thick_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -40, 90)
                        double3 xformOp:translate = (4.805159307907517, 3.0820392025050642, 1.2718389481582462)
                        float3 xformOp:translate:rotatePivot = (0.35749993, 0.40031186, 1.9598299)
                        float3 xformOp:translate:rotatePivotTranslate = (0.04281193, 1.1333033, -3.2313502)
                        float3 xformOp:translate:scalePivot = (0.35749993, 0.40031186, 1.9598299)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_1x2_007_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 180)
                        double3 xformOp:translate = (5.600465871284899, 5.453417443622313, -0.932867392301559)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, -0.62000006, 0)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_1x2_006_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 180)
                        double3 xformOp:translate = (5.600465871284899, 4.42495330511447, 0.29280839920043966)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, -0.62000006, 0)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheels_tilt_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheels_tilt_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_wheels_base_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (8.881784197001252e-16, 0, 0),
                    }
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    def Xform "Wall_e_RIG_v001_lightGray_technics_bush_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-0, 90, 0)
                        double3 xformOp:translate = (6.400475121925769, 1.0586634196895015, 0.3600011920928944)
                        float3 xformOp:translate:rotatePivot = (0.3600055, 0.36041513, 0.4000001)
                        float3 xformOp:translate:rotatePivotTranslate = (0.039994594, 0, -0.7600056)
                        float3 xformOp:translate:scalePivot = (0.3600055, 0.36041513, 0.4000001)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_tile_1x1_round_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (-180, 90, 0)
                        double3 xformOp:translate = (6.400465108345446, 1.0163587714441062, -0.40000535488128697)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_pin_friction_r_009_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 180)
                        double3 xformOp:translate = (5.600465837670756, 1.0986338080575742, -1.920736246810768)
                        float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.599997, 0.00999999, -0.00999999)
                        float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_technic_liftarm_1x9_thick_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, 90)
                        double3 xformOp:translate = (5.595784641693531, 1.058663419689503, -3.563079937696457)
                        float3 xformOp:translate:rotatePivot = (0.35749993, 0.40031186, 3.55983)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.7578118, -0.04281193, 0)
                        float3 xformOp:translate:scalePivot = (0.35749993, 0.40031186, 3.55983)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_3x5_quarter_ellipse_thin_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (4.000468922920826, 4.979185960497226, 0.3599999999999998)
                        float3 xformOp:translate:rotatePivot = (1.1493192, 0.20010182, 1.9739517)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.9492174, -2.1740534, -3.123271)
                        float3 xformOp:translate:scalePivot = (1.1493192, 0.20010182, 1.9739517)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_technic_liftarm_3x5_quarter_ellipse_thin_003_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, 90, 0)
                        double3 xformOp:translate = (4.400141686710671, 4.979185960497226, 0.3599999999999998)
                        float3 xformOp:translate:rotatePivot = (1.1493192, 0.20010182, 1.9739517)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.9492174, -2.1740534, -3.123271)
                        float3 xformOp:translate:scalePivot = (1.1493192, 0.20010182, 1.9739517)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_darkGrey_axle_and_pin_connector_perpendicular_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 0)
                        double3 xformOp:translate = (5.6004712059006065, 1.8186634476398462, -1.1599998617094402)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_lightGray_pin_1x2_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, -0, -90)
                        double3 xformOp:translate = (5.680471219013629, 1.818657302249632, -1.120028778314591)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-0.89, -1.51, 0)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_black_axle_4_002_mesh"
                    {
                        float3 xformOp:rotateXYZ = (180, -0, 0)
                        double3 xformOp:translate = (4.0004750323969125, 1.6586634004008396, 0.23999998033046677)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                    }

                    def Xform "Wall_e_RIG_v001_beige_axle_pin_friction_r_010_mesh"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 180)
                        double3 xformOp:translate = (5.600465837670755, 4.29915572420862, -0.31999998639664495)
                        float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-1.599997, 0.00999999, -0.00999999)
                        float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_005_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (4.8000030517578125, 3.5099243433475493, 0.32003104090690576)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_blue_pin_3l_004_mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 180, 0)
                        double3 xformOp:translate = (4.800004853796285, 1.9099244240638678, 0.32003392565896255)
                        float3 xformOp:translate:rotatePivot = (1.2, 0.31000003, 0.32000002)
                        float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -0.64000005)
                        float3 xformOp:translate:scalePivot = (1.2, 0.31000003, 0.32000002)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                    }

                    def Xform "Wall_e_RIG_v001_l_wheels_base_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_wheels_base_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_c_back_panel_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (-3.3881317890172014e-21, -1.7763568394002505e-15, -8.881784197001252e-16),
                }
                float3 xformOp:translate:pivot = (-0.000026709311, 10.222001, -4.399966)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_012_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.39998936653137, 9.662000438690185, -4.799975013732911)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-4.7996182, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x2_016_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.3999893665313725, 9.982000610351562, -4.79997501373291)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x2_015_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-0.799999952316284, 9.982000610351562, -4.79997501373291)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-0.000026702880859708067, 9.982001564025879, -6.399965858459472)
                    float3 xformOp:translate:rotatePivot = (1.1240871, 0.23999998, 0.4)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5240871, 0, 0.72408706)
                    float3 xformOp:translate:scalePivot = (1.1240871, 0.23999998, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_handle_end_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (0.7999725341796872, 9.982001564025879, -6.399965858459472)
                    float3 xformOp:translate:rotatePivot = (1.1240871, 0.23999998, 0.4)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5240871, 0, 0.72408706)
                    float3 xformOp:translate:scalePivot = (1.1240871, 0.23999998, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.399981737136841, 10.30200078201294, -5.599981880187988)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-4.799994, 0, -0.8000002)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_011_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.7999725341796877, 10.302001735687256, -4.79997501373291)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_014_mesh"
                {
                    double3 xformOp:translate = (0.7999985218048098, 10.30200078201294, -5.59996280670166)
                    float3 xformOp:translate:pivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_013_mesh"
                {
                    double3 xformOp:translate = (-2.3999907970428462, 10.30200078201294, -5.59996280670166)
                    float3 xformOp:translate:pivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_c_back_panel_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_c_back_panel_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_c_body_grp"
            {
                float3 xformOp:rotateXYZ.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:scale.timeSamples = {
                    1: (1, 1, 1),
                }
                double3 xformOp:translate.timeSamples = {
                    1: (0, 0, 0),
                }
                float3 xformOp:translate:pivot = (0, 0, 0.4)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_008_mesh"
                {
                    double3 xformOp:translate = (-0.7999992370605469, 6.781999847412109, -3.200006103515625)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x6_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 3.5819999785423278, -3.2000061035156246)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998303, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x2_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.4000015258789067, 5.501999876022339, 3.200022125244141)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x6_005_mesh"
                {
                    double3 xformOp:translate = (-2.4000114500522614, 2.6220000596046447, -0.7999893188476562)
                    float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.4000091552734375, 5.181999942779541, -4.000016784667968)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-4.799994, 0, -0.8000002)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (0.7999877929687496, 9.662003299713135, 2.4000267028808593)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6000003, 0, -0.000042557716)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_inverted_33_005_mesh"
                {
                    double3 xformOp:translate = (3.2000160217285156, 6.781999847412109, -1.599980926513672)
                    float3 xformOp:translate:pivot = (0.39994502, 0.56041497, 1.2001925)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_inverted_33_004_mesh"
                {
                    double3 xformOp:translate = (3.2000160217285156, 5.821999809265137, -3.199987030029297)
                    float3 xformOp:translate:pivot = (0.39994502, 0.56041497, 1.2001925)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_inverted_33_003_mesh"
                {
                    double3 xformOp:translate = (-4.000007629394531, 6.781999847412109, -1.5999923706054688)
                    float3 xformOp:translate:pivot = (0.39994502, 0.56041497, 1.2001925)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_brown_slope_2x2_inverted_45_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-0.8000030517578123, 3.5819999785423278, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-3.2000007629394536, 4.541999957084656, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_inverted_33_002_mesh"
                {
                    double3 xformOp:translate = (-4.000007629394531, 5.821999809265137, -3.199998474121094)
                    float3 xformOp:translate:pivot = (0.39994502, 0.56041497, 1.2001925)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_brown_slope_2x2_inverted_45_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.400009155273438, 3.5819999785423278, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_brown_slope_2x2_inverted_45_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.7999992370605471, 3.5819999785423278, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.4000053405761714, 4.541999957084656, -4.000016784667968)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.4000053405761714, 3.5819999785423278, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (4.000011444091797, 4.541999957084656, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_2x2_no_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-3.9999923706054696, 4.541997036457061, 3.3599990844726566)
                    float3 xformOp:translate:rotatePivot = (0.8000195, 0.5594127, 0.8000082)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -1.3594209, -0.24059549)
                    float3 xformOp:translate:scalePivot = (0.8000195, 0.5594127, 0.8000082)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_curved_2x2_no_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (2.4000091552734366, 4.541997036457061, 3.3599990844726566)
                    float3 xformOp:translate:rotatePivot = (0.8000195, 0.5594127, 0.8000082)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -1.3594209, -0.24059549)
                    float3 xformOp:translate:scalePivot = (0.8000195, 0.5594127, 0.8000082)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.200004577636719, 4.541999957084656, -4.000016784667968)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_inverted_45_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.200004577636719, 3.5819999785423278, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_curved_2x1_no_studs_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (-3.199981689453125, 8.062004348754883, -5.600007629394531)
                    float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.8, -0.8)
                    float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_curved_2x1_no_studs_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -180)
                    double3 xformOp:translate = (-2.399993896484375, 7.261998197555542, -5.600007629394531)
                    float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.8, -0.8, -0.8)
                    float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_curved_2x1_no_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (2.399993896484375, 8.062004348754883, -5.600007629394531)
                    float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.8, -0.8)
                    float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_curved_2x1_no_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -180)
                    double3 xformOp:translate = (3.2000045776367188, 7.261998197555542, -5.600007629394531)
                    float3 xformOp:translate:rotatePivot = (0.4, 0, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.8, -0.8, -0.8)
                    float3 xformOp:translate:scalePivot = (0.4, 0, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_33_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-3.20000457763672, 6.781999847412109, 2.400015258789062)
                    float3 xformOp:translate:rotatePivot = (0.39999995, 0.56041497, 1.1999619)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7999999, 0, -2.3999238)
                    float3 xformOp:translate:scalePivot = (0.39999995, 0.56041497, 1.1999619)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_33_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-3.2000198364257817, 5.821999809265137, 0.7999786376953115)
                    float3 xformOp:translate:rotatePivot = (0.39999995, 0.56041497, 1.1999619)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7999999, 0, -2.3999238)
                    float3 xformOp:translate:scalePivot = (0.39999995, 0.56041497, 1.1999619)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_33_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (4.0000038146972665, 6.781999847412109, 2.399992370605468)
                    float3 xformOp:translate:rotatePivot = (0.39999995, 0.56041497, 1.1999619)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7999999, 0, -2.3999238)
                    float3 xformOp:translate:scalePivot = (0.39999995, 0.56041497, 1.1999619)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_3x1_33_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (4.0000038146972665, 5.821999809265137, 0.7999977111816396)
                    float3 xformOp:translate:rotatePivot = (0.39999995, 0.56041497, 1.1999619)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7999999, 0, -2.3999238)
                    float3 xformOp:translate:scalePivot = (0.39999995, 0.56041497, 1.1999619)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_45_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.1999626159667973, 9.662000438690185, -4.000020599365234)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_2x1_45_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.3999938964843746, 9.661999961853027, -4.000009155273437)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_blue_axle_pin_friction_r_005_mesh"
                {
                    double3 xformOp:translate = (1.6000137329101562, 5.742025098323822, -4.720040208101272)
                    float3 xformOp:translate:pivot = (0.7999985, 0.31000003, 0.32000002)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_axle_8_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.960007682442665, 9.022001779198646, -3.1999693870544434)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_blue_axle_pin_friction_r_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-1.600006103515625, 5.742025098323822, -4.079981154203415)
                    float3 xformOp:translate:rotatePivot = (0.7999985, 0.31000003, 0.32000002)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.599997, 0, -0.64000005)
                    float3 xformOp:translate:scalePivot = (0.7999985, 0.31000003, 0.32000002)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_axle_8_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.4400091022253036, 9.022001779198646, -3.1999693870544434)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.9999999999999987, 4.221999904632568, 3.2000144958496093)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.9999969, 0, -2.799997)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_30_1x2x2_3_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.1999893188476562, 6.142009994506837, 3.3600334167480472)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0.47997004, -0.07999125)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_30_1x1x2_3_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.99996566772461, 9.662000438690185, -4.000020599365234)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_slope_30_1x1x2_3_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-3.2000007629394527, 9.661999961853027, -4.000009155273437)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_30_1x2x2_3_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -3.1805547e-15, -90)
                    double3 xformOp:translate = (3.1999969482421875, 7.741996070861817, 3.3600105285644517)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.3200088, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, -1.1199876, -0.07999125)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.3200088, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_panel_1x2x3_solid_studs_002_mesh"
                {
                    double3 xformOp:translate = (-0.7999839782714844, 3.581999978542328, -2.400006866455078)
                    float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x2x2_hollow_studs_005_mesh"
                {
                    double3 xformOp:translate = (0.800018310546875, 6.461999675750732, -3.199998474121094)
                    float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_30_1x1x2_3_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -3.1805547e-15, -90)
                    double3 xformOp:translate = (3.1999969482421875, 6.14199568939209, 3.359999084472656)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_slope_30_1x1x2_3_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.1999893188476562, 5.34200789642334, 3.3600334167480472)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x1x1_corner_003_mesh"
                {
                    double3 xformOp:translate = (1.6000022888183594, 8.06200244140625, 3.2000411987304687)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x1x1_corner_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-1.6000099182128906, 8.06200244140625, 3.2000411987304687)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x2x2_hollow_studs_004_mesh"
                {
                    double3 xformOp:translate = (-2.400005340576172, 6.461999675750732, -3.199998474121094)
                    float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x2x2_hollow_studs_003_mesh"
                {
                    double3 xformOp:translate = (2.4000053405761714, 8.06200244140625, 3.200041198730469)
                    float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_panel_1x2x2_hollow_studs_002_mesh"
                {
                    double3 xformOp:translate = (-3.999992370605469, 8.06200244140625, 3.200041198730469)
                    float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_orange_bracket_1x2_2x2_inverted_003_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 2.9419999928474425, 2.4)
                    float3 xformOp:translate:pivot = (0.7999789, 0.8003348, 0.56018215)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_orange_bracket_1x2_2x2_inverted_002_mesh"
                {
                    double3 xformOp:translate = (-3.9999923706054688, 2.9419999928474425, 2.4)
                    float3 xformOp:translate:pivot = (0.7999789, 0.8003348, 0.56018215)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_2x2_005_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 4.542001029968262, 2.4)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_bracket_5x2x1_2_holes_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-0.000009924173355102539, 1.3420000882148742, -0.7999893188476563)
                    float3 xformOp:translate:rotatePivot = (0.79767257, 0.7218869, 2.0010352)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.7987077, 0, -1.2033626)
                    float3 xformOp:translate:scalePivot = (0.79767257, 0.7218869, 2.0010352)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_bracket_5x2x1_2_holes_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (0.0000015199184431047286, 1.3420000882148742, 0.8000015258789086)
                    float3 xformOp:translate:rotatePivot = (0.79767257, 0.7218869, 2.0010352)
                    float3 xformOp:translate:rotatePivotTranslate = (1.2033627, 0, -2.7987077)
                    float3 xformOp:translate:scalePivot = (0.79767257, 0.7218869, 2.0010352)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_2x2_002_mesh"
                {
                    double3 xformOp:translate = (-3.9999923706054688, 4.542001029968262, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_black_hinge_brick_1x2_looking_1fve_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-0.000003814697265736022, 7.422000190734863, -3.200006103515625)
                    float3 xformOp:translate:rotatePivot = (1.1149706, 0.56041497, 0.38824388)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5032145, 0, 0.7267267)
                    float3 xformOp:translate:scalePivot = (1.1149706, 0.56041497, 0.38824388)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_2x2_004_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 6.142001411437988, 2.400011444091797)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_bracket_1x2_2x2_003_mesh"
                {
                    double3 xformOp:translate = (-3.9999923706054688, 6.142002365112305, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_015_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.999988555908203, 7.741999885559082, -4.000009155273437)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (1.7763569e-16, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_014_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.199970245361329, 8.702000400543213, -4.000001525878907)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, 1.3322678e-16)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_hinge_brick_1x2_looking_1fve_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (0.7999916076660154, 7.422000190734863, -3.200006103515625)
                    float3 xformOp:translate:rotatePivot = (1.1149706, 0.56041497, 0.38824388)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5032145, 0, 0.7267267)
                    float3 xformOp:translate:scalePivot = (1.1149706, 0.56041497, 0.38824388)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_017_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-1.6000251770019531, 8.702000400543213, -2.399995422363281)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_016_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.399993896484375, 8.701999923706055, -4.799996948242188)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, 1.3322678e-16)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_010_mesh"
                {
                    double3 xformOp:translate = (-3.999988555908203, 3.5819999785423278, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.2000045776367196, 4.541999957084656, -2.4000106811523447)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_013_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.999965667724609, 8.702000400543213, -3.2000137329101572)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_012_mesh"
                {
                    double3 xformOp:translate = (2.399993896484375, 7.741999885559082, -5.599996185302734)
                    float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_011_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-1.6000061035156246, 4.541999957084656, -4.000001525878906)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, 1.3322677e-16)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000167846679683, 3.5819999785423278, -2.4000106811523434)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-7.1054275e-16, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.4000091552734366, 3.261999985694885, 2.4000076293945307)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_006_mesh"
                {
                    double3 xformOp:translate = (-4, 3.261999985694885, 1.6000198364257812)
                    float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_2x2_corner_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-0.8000068664550782, 9.022002479553223, 4.000028991699219)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_2x2_corner_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (2.399982452392578, 9.02200295639038, 2.4000343322753905)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, 7.993606e-16)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4, 3.261999985694885, 0.8000167846679684)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6, 0, -3.1086244e-16)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_2x2_corner_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 3.261999985694885, 3.199987792968751)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.1546319e-15, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x6_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.199981689453125, 6.781999847412109, -3.199998474121094)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x6_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 5.821999809265137, 2.3999923706054687)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x6_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012969970703, 6.781999847412109, -3.199998474121094)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x6_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.1999969482421875, 5.821999809265137, 2.4000152587890624)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x4_with_1_side_studs_004_mesh"
                {
                    double3 xformOp:translate = (-1.599994659423828, 8.06200244140625, 3.200041198730468)
                    float3 xformOp:translate:pivot = (1.6000152, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.200000762939453, 6.781999847412109, -4.799996948242187)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (1.5999641418457033, 8.702000400543213, -3.20000228881836)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x4_with_1_side_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (1.5999832153320301, 7.102000019073486, -3.2000137329101563)
                    float3 xformOp:translate:rotatePivot = (1.6000152, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.2000303, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (1.6000152, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x4_with_1_side_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (1.600006103515624, 5.501999876022339, -3.2000137329101563)
                    float3 xformOp:translate:rotatePivot = (1.6000152, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.2000303, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (1.6000152, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x4_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000011444091797, 6.781999847412109, -4.799996948242187)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x3_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.2000045776367188, 4.541999957084656, -2.3999916076660157)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x3_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.3999977111816406, 4.541999957084656, -2.3999916076660157)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (1.6000061035156252, 4.541999957084656, -3.2000137329101563)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x3_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.199981689453125, 6.781999847412109, -5.599996185302734)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x3_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012969970703, 6.781999847412109, -5.599996185302734)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_1_side_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.4000091552734375, 4.541999837875366, 1.600031280517578)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_005_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 8.702000400543213, -3.1999755859375)
                    float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_1_side_studs_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.400009155273437, 4.541999837875366, 1.5999931335449218)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_1_side_studs_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.400009155273437, 4.541999837875366, 3.1999877929687495)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_1_side_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.4000091552734375, 4.541999837875366, 0.00002899169921860567)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_004_mesh"
                {
                    double3 xformOp:translate = (-4.000007629394531, 8.702000400543213, -3.199987030029297)
                    float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_003_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 8.702000400543213, 2.400019073486328)
                    float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x2_with_axle_hole_002_mesh"
                {
                    double3 xformOp:translate = (-4.000007629394531, 8.702000400543213, 2.400007629394531)
                    float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400005340576172, 5.501999876022339, -4.800004577636718)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_beige_brick_1x2_with_holes_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.2000045776367188, 5.501999876022339, -4.800004577636718)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400003051757813, 3.261999985694885, -0.7999954223632814)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.2000160276889806, 1.6620000810623168, -0.7999954223632816)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012975931168, 1.6620000810623168, -0.7999954223632816)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_010_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.7999786376953123, 8.702000400543213, -2.3999893188476564)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -0.80000013)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.2000061035156255, 3.261999985694885, -0.7999954223632814)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.200003051757812, 3.261999985694885, -0.7999954223632814)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.0000061035156245, 3.261999985694885, -0.7999954223632814)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_013_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.9999923706054688, 5.821999809265137, 2.400015258789063)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0, -1.199979)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.2000045716762546, 1.6620000810623168, -0.7999954223632834)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_with_hole_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000007623434068, 1.6620000810623168, -0.7999954223632834)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.56041497, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.56041497, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_012_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (3.2000160217285156, 5.821999809265137, 2.399992370605469)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0, -1.199979)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_011_mesh"
                {
                    double3 xformOp:translate = (-3.999988555908203, 3.5819999785423278, -2.3999916076660157)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.200000762939453, 4.541999957084656, -3.199994659423828)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000011444091797, 4.541999957084656, -3.199998474121094)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.199979, 0, 0.3999788)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_010_mesh"
                {
                    double3 xformOp:translate = (-3.999988555908203, 3.261999985694885, -1.5999923706054688)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_009_mesh"
                {
                    double3 xformOp:translate = (2.4000167846679688, 3.5819999785423278, -2.3999916076660157)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x2_008_mesh"
                {
                    double3 xformOp:translate = (2.4000205993652344, 3.261999985694885, -1.5999923706054688)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_003_mesh"
                {
                    double3 xformOp:translate = (-3.9999923706054688, 6.14200093460083, 2.4000343322753905)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_brick_1x2_002_mesh"
                {
                    double3 xformOp:translate = (2.4000091552734375, 6.14200093460083, 2.4)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_blue_brick_1x1_with_2_side_studs_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-2.399993896484375, 7.102000019073486, -3.2000137329101563)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (4.4703484e-8, 0, -0.9595211)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_side_studs_005_mesh"
                {
                    double3 xformOp:translate = (3.200023651123047, 5.501999876022339, -4.800004577636718)
                    float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_opposite_studs_003_mesh"
                {
                    double3 xformOp:translate = (-3.199993133544922, 5.501999876022339, -5.600007629394531)
                    float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.40000004)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_opposite_studs_002_mesh"
                {
                    double3 xformOp:translate = (2.4000167846679688, 5.501999876022339, -5.600007629394531)
                    float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.40000004)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_blue_brick_1x1_with_2_side_studs_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.3999862670898433, 7.102000019073486, -3.2000137329101563)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.95952106, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-2.399993896484376, 8.701999923706055, -4.80001220703125)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.95952106, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_1_side_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.199981689453124, 8.701999923706055, -4.800008392333984)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.95952106, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_side_studs_004_mesh"
                {
                    double3 xformOp:translate = (3.200023651123047, 5.501999876022339, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_side_studs_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.2000007629394536, 5.501999876022339, -4.8000045776367175)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.9595211, 0, -4.4703484e-8)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_brick_1x1_with_2_side_studs_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-3.2000007629394536, 5.501999876022339, -3.2000137329101563)
                    float3 xformOp:translate:rotatePivot = (0.47976053, 0.56041497, 0.4797606)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.95952106, 0, -0.9595212)
                    float3 xformOp:translate:scalePivot = (0.47976053, 0.56041497, 0.4797606)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_003_mesh"
                {
                    double3 xformOp:translate = (-2.399993896484375, 5.501999876022339, -4.000001525878906)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_brick_1x1_002_mesh"
                {
                    double3 xformOp:translate = (1.6000137329101562, 5.501999876022339, -4.0000053405761715)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_4x10_002_mesh"
                {
                    double3 xformOp:translate = (-4, 2.9419999928474425, -0.7999893188476562)
                    float3 xformOp:translate:pivot = (3.99992, 0.24041496, 1.6000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_4x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (-1.5999946594238286, 5.662007352828979, -4.000012969970703)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 1.6000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0, 1.3596065, -1.8404363)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 1.6000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_hinge_plate_2x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (1.59978461265564, 2.782, 4.399996953609817)
                    float3 xformOp:translate:rotatePivot = (1.2, 0.9608299, 1.5999999)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -3.1999998)
                    float3 xformOp:translate:scalePivot = (1.2, 0.9608299, 1.5999999)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_hinge_plate_2x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.000006329887503335197, 2.782064405508122, 4.397922980718244)
                    float3 xformOp:translate:rotatePivot = (1.2, 0.9608299, 1.6000003)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.4, 0, -3.2000005)
                    float3 xformOp:translate:scalePivot = (1.2, 0.9608299, 1.6000003)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_4x10_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (4.000011444091797, 2.9419999928474425, -0.8000045776367193)
                    float3 xformOp:translate:rotatePivot = (3.99992, 0.24041496, 1.6000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-7.99984, 0, -3.200043)
                    float3 xformOp:translate:scalePivot = (3.99992, 0.24041496, 1.6000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x10_003_mesh"
                {
                    double3 xformOp:translate = (-4.0000159740448, 9.982000610351562, 2.400007629394531)
                    float3 xformOp:translate:pivot = (3.9995873, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x10_002_mesh"
                {
                    double3 xformOp:translate = (-4, 7.742002269744873, 2.4000343322753905)
                    float3 xformOp:translate:pivot = (3.9995873, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012969970705, 8.382000228881836, -3.199994659423828)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.9997196, 0, 2.3996768)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734366, 2.622, 3.1999954223632834)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.3996768, 0, -3.9997196)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000003814697264, 8.382000228881836, -3.1999832153320313)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.9997196, 0, 2.3996768)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.0000030994415265, 9.662000438690185, -3.1999832153320313)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.9997196, 0, 2.3996768)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400013685226442, 9.662000438690185, -3.199994659423828)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.9997196, 0, 2.3996768)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x8_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.9999923706054688, 2.622, 3.199995422363282)
                    float3 xformOp:translate:rotatePivot = (3.1996982, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.3996768, 0, -3.9997196)
                    float3 xformOp:translate:scalePivot = (3.1996982, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_013_mesh"
                {
                    double3 xformOp:translate = (-2.4000205993652344, 9.662000438690185, -3.9999900817871095)
                    float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_2x2_014_mesh"
                {
                    double3 xformOp:translate = (-0.8000030517578125, 9.02200295639038, 2.4000343322753905)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (4.00001072883606, 9.982000610351562, -2.39998779296875)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998398, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_014_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000003099441528, 9.982000610351562, -2.3999877929687496)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998305, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-0.8000221252441395, 9.982000610351562, -2.3999954223632813)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998398, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.3999938964843746, 7.741999885559082, -0.8000007629394521)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7998985, 0, -2.3999414)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000003814697264, 7.741999885559082, -0.799985504150391)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.3999412, 0, 0.7998985)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-4.000007629394531, 7.741999885559082, -0.7999969482421858)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.7998985, 0, -2.3999412)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012969970705, 7.741999885559082, -0.7999969482421879)
                    float3 xformOp:translate:rotatePivot = (1.5999199, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.3999412, 0, 0.7998985)
                    float3 xformOp:translate:scalePivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x3_006_mesh"
                {
                    double3 xformOp:translate = (1.6000137329101562, 3.261999985694885, -3.199998474121094)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x3_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (0.8000030517578124, 6.461999914169311, -4.000009155273437)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x4_002_mesh"
                {
                    double3 xformOp:translate = (-1.6000083982944486, 1.9820000739097594, -0.7999893188476562)
                    float3 xformOp:translate:pivot = (1.5999199, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-1.5999946594238281, 8.22200228881836, 4.000040435791016)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x3_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (0.000007629394531138978, 8.22200228881836, 4.000040435791016)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x2_corner_002_mesh"
                {
                    double3 xformOp:translate = (2.4000015258789062, 7.102000019073486, 1.6000045776367187)
                    float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x3_004_mesh"
                {
                    double3 xformOp:translate = (-3.9999961853027344, 3.261999985694885, -3.199998474121094)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x2_corner_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.9999923706054688, 7.102000972747803, 3.2000297546386727)
                    float3 xformOp:translate:rotatePivot = (0.8, 0.24041496, 0.8)
                    float3 xformOp:translate:rotatePivotTranslate = (1.7763569e-16, 0, -1.6)
                    float3 xformOp:translate:scalePivot = (0.8, 0.24041496, 0.8)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_007_mesh"
                {
                    double3 xformOp:translate = (-0.7999992370605469, 7.102000019073486, -3.200006103515625)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x8_003_mesh"
                {
                    double3 xformOp:translate = (-3.2000083923339844, 5.821999809265137, -3.199998474121094)
                    float3 xformOp:translate:pivot = (3.199997, 0.24041496, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x8_002_mesh"
                {
                    double3 xformOp:translate = (-3.2000083923339844, 6.1419997425079345, -3.199998474121094)
                    float3 xformOp:translate:pivot = (3.199997, 0.24041496, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x10_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000003099441528, 10.30200078201294, -3.9999900817871095)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x10_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.2000274658203125, 10.30200078201294, -3.9999977111816407)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x10_002_mesh"
                {
                    double3 xformOp:translate = (-4, 8.06200244140625, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_014_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-4.000007629394531, 8.062000057220459, 1.600000762939453)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_013_mesh"
                {
                    double3 xformOp:translate = (-2.400005340576172, 8.382002613067627, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_012_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.400016784667969, 4.862000009536743, -4.000016784667968)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_016_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (3.2000160217285156, 8.062000057220459, 1.60001220703125)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_015_mesh"
                {
                    double3 xformOp:translate = (-0.8000144958496094, 8.062000057220459, -4.000001525878906)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x6_011_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (2.400016784667969, 4.541999957084656, -4.000016784667968)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x6_010_mesh"
                {
                    double3 xformOp:translate = (-2.4000015258789062, 6.781999847412109, -4.000001525878906)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x6_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 8.062000057220459, 1.60001220703125)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x6_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.200000762939453, 8.062000057220459, 1.600000762939453)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x6_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 4.221999904632568, 3.199995422363281)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x6_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, 90, 0)
                    double3 xformOp:translate = (-3.2000083923339844, 4.702007314682007, 3.200029754638672)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x6_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 3.261999985694885, -1.6)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x6_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-1.5999984741210938, 3.261999985694885, -1.6)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x6_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.1999969482421875, 4.221999904632568, 3.2000221252441405)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x6_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, 90, 0)
                    double3 xformOp:translate = (3.2000083923339844, 5.501995107650757, 3.199995422363281)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.200000762939453, 6.461999675750732, -2.4000030517578126)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_005_mesh"
                {
                    double3 xformOp:translate = (-4.0000152587890625, 8.062000057220459, -3.9999900817871095)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.399993896484375, 6.461999675750732, -2.4000030517578126)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x4_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-0.00002360343933082807, 10.30200078201294, 4.000002288818359)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x4_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.1999847888946538, 10.30200078201294, 4.000002288818359)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.9999923706054688, 3.741995355606079, 3.3599990844726566)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x4_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (3.20001220703125, 3.741995355606079, 3.3599990844726566)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x3_002_mesh"
                {
                    double3 xformOp:translate = (1.6000137329101562, 3.261999985694885, -4.000001525878906)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (1.600006103515625, 3.261999985694885, -4.000009155273437)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998303, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x3_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                    double3 xformOp:translate = (2.399993896484375, 8.861999771118164, -5.600007629394531)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x3_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                    double3 xformOp:translate = (-3.200000762939453, 8.861999771118164, -5.600007629394531)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x3_003_mesh"
                {
                    double3 xformOp:translate = (-3.9999961853027344, 3.261999985694885, -4.000001525878906)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_1x2_h_clip_double_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.799980163574218, 9.980463566672881, -3.199996179342269)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24353656, 0.6797043)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.3594086)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24353656, 0.6797043)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x2_021_mesh"
                {
                    double3 xformOp:translate = (-0.8000030517578125, 9.342003128051758, 3.2000411987304687)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_018_mesh"
                {
                    double3 xformOp:translate = (-3.9999961853027344, 9.661999961853027, -3.999993896484375)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x2_025_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (-1.6000175476074208, 10.30200078201294, -3.2000022888183595)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -0.80000013)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x2_024_mesh"
                {
                    double3 xformOp:translate = (-0.8000259399414062, 9.982000610351562, -3.1999832153320313)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_black_plate_1x2_023_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (3.200015306472779, 10.30200078201294, -3.1999946594238287)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -0.80000013)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_014_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.999988555908203, 6.461999914169311, -3.2000061035156246)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0, -1.199979)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_013_mesh"
                {
                    double3 xformOp:translate = (-2.4000015258789062, 6.461999914169311, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_017_mesh"
                {
                    double3 xformOp:translate = (-4.0000152587890625, 8.382000228881836, -3.9999900817871095)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_016_mesh"
                {
                    double3 xformOp:translate = (2.399974822998047, 9.662000438690185, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_015_mesh"
                {
                    double3 xformOp:translate = (2.399974822998047, 8.382000228881836, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_012_mesh"
                {
                    double3 xformOp:translate = (0.8000106811523438, 6.461999914169311, -4.000001525878906)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_011_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (3.200023651123047, 6.461999914169311, -3.2000061035156246)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0, -1.199979)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_010_mesh"
                {
                    double3 xformOp:translate = (-4.0000152587890625, 8.062000057220459, 1.6000083923339843)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_009_mesh"
                {
                    double3 xformOp:translate = (-0.8000030517578125, 9.342003128051758, 2.4000343322753905)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x2_008_mesh"
                {
                    double3 xformOp:translate = (2.4000015258789062, 8.062000057220459, 1.6000198364257812)
                    float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_darkRed_plate_1x1_round_003_mesh"
                {
                    double3 xformOp:translate = (-2.3999977111816406, 8.702002784729004, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkRed_plate_1x1_round_002_mesh"
                {
                    double3 xformOp:translate = (1.5999946594238281, 8.702002784729004, 2.4000343322753905)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (2.4000091552734375, 3.74199535560608, 3.3599990844726566)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0.5595639, -0.1595851)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_1x2_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.1999893188476562, 3.741995355606079, 3.3599990844726566)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.40000007)
                    float3 xformOp:translate:rotatePivotTranslate = (-0.3999788, 0.5595639, -0.1595851)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.40000007)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_transparentRed_plate_1x1_round_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-1.5999946594238281, 9.02199771118164, 4.320040369033814)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_005_mesh"
                {
                    double3 xformOp:translate = (-3.199993133544922, 7.42200114440918, 1.6000389099121093)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (3.20001220703125, 6.942000648498535, 3.3600105285644535)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_003_mesh"
                {
                    double3 xformOp:translate = (2.4000015258789062, 7.422000190734863, 1.6000045776367187)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.9999923706054688, 6.9420016021728514, 3.3600334167480472)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_006_mesh"
                {
                    double3 xformOp:translate = (-3.2000045776367188, 6.781999847412109, 1.6000274658203124)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (3.200007677078247, 10.30200078201294, -3.1999755859375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (1.5999863147735596, 10.30200078201294, 3.199995422363281)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_005_mesh"
                {
                    double3 xformOp:translate = (-1.6000175476074219, 10.30200078201294, -3.9999900817871095)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_1x1_002_mesh"
                {
                    double3 xformOp:translate = (2.4000015258789062, 6.781999847412109, 1.6000045776367187)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (-1.5999946594238286, 7.2620136947631835, -4.32001314163208)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-1.6000251770019531, 10.30200078201294, -3.1999832153320313)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x4_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (-3.2000129222869873, 10.30200078201294, 3.199995422363281)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_round_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (180, -0, 90)
                    double3 xformOp:translate = (4.000017166137695, 5.662007352828979, -3.200008010864258)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_round_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    double3 xformOp:translate = (-4, 5.662007352828979, -4.800004577636718)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_tile_1x8_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-0.8000297546386719, 8.702000400543213, -3.1999832153320313)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x6_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-0.8000030517578125, 3.5819999785423278, -3.200013732910156)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998303, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x8_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (4.000003099441528, 10.622000953674316, -3.199987030029297)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x8_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-3.2000274658203125, 10.622000953674316, -3.199994659423828)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_tile_1x8_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (1.5999641418457031, 8.702000400543213, -3.1999832153320313)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_015_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.4000136852264404, 9.982000610351562, -2.3999992370605465)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998303, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x3_004_mesh"
                {
                    double3 xformOp:translate = (-4.0000152587890625, 10.622000953674316, -3.9999900817871095)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x3_003_mesh"
                {
                    double3 xformOp:translate = (-4.0000152587890625, 10.622000953674316, 3.199999237060547)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x3_002_mesh"
                {
                    double3 xformOp:translate = (1.5999939441680908, 10.622000953674316, 3.2000144958496093)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x4_006_mesh"
                {
                    double3 xformOp:translate = (-1.600010633468628, 10.30200078201294, 2.400007629394531)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x3_005_mesh"
                {
                    double3 xformOp:translate = (1.6000244617462158, 10.622000953674316, -3.999982452392578)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-1.5999946594238281, 10.621992370605469, 4.320040369033814)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-1.5999946594238281, 9.821993133544922, 4.320040369033814)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (2.400009155273437, 5.3419862003326415, 3.679999017715455)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 90)
                    double3 xformOp:translate = (1.5999984741210933, 5.662007352828979, -4.32001314163208)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 90)
                    double3 xformOp:translate = (-0.8000068664550786, 5.662007352828979, -4.32001314163208)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (0.0000038146972655139777, 3.261999985694885, -4.000009155273437)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998303, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x2_grille_without_groove_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-3.999992370605469, 5.3419862003326415, 3.6799990177154545)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x6_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (3.200016021728516, 4.221999904632568, 3.19998779296875)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.9999969, 0, -2.799997)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x1_with_groove_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (-0.79998779296875, 9.02199771118164, 4.320040369033814)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x1_with_groove_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (3.20001220703125, 5.341997644424438, 3.6799990177154545)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x1_with_groove_005_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                    double3 xformOp:translate = (-3.200000762939453, 8.061996719360351, -5.920007801055908)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x1_with_groove_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.9999923706054688, 5.341997644424438, 3.6799990177154545)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_tile_1x1_round_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (-2.3999881744384766, 7.262007495880127, -4.000007247924804)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_tile_1x1_round_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (1.5999984741210938, 7.262007495880127, -4.000012969970703)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x1_with_groove_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, -90)
                    double3 xformOp:translate = (2.399993896484375, 8.061996719360351, -5.920007801055908)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (-3.9999923706054688, 6.142000696182251, 3.6799990177154545)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x6_008_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, 90, 0)
                    double3 xformOp:translate = (3.5200083255767822, 5.501995107650757, 3.19998779296875)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.239997, -0.5600001, -2.799997)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_1x6_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, 90, 0)
                    double3 xformOp:translate = (-3.5200083255767822, 4.702007314682007, 3.2000221252441405)
                    float3 xformOp:translate:rotatePivot = (2.399997, 0.16000001, 0.4000001)
                    float3 xformOp:translate:rotatePivotTranslate = (-2.559997, 0.24000008, -2.799997)
                    float3 xformOp:translate:scalePivot = (2.399997, 0.16000001, 0.4000001)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x6_002_mesh"
                {
                    double3 xformOp:translate = (-2.399993896484375, 3.5819999785423278, 1.5999969482421874)
                    float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_blackPanel_tile_2x2_007_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, -90)
                    double3 xformOp:translate = (1.6000078916549683, 10.62195744228363, 4.320040369033814)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.6000003, -0.9599789, -0.6400214)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_008_mesh"
                {
                    double3 xformOp:translate = (-0.7999954223632812, 9.02200295639038, 1.6000274658203124)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_2x2_012_mesh"
                {
                    float3 xformOp:rotateXYZ = (-90, -0, 0)
                    double3 xformOp:translate = (-0.7999916076660161, 5.662007352828979, -4.32001314163208)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0, 0.6400214, -0.96002144)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_plate_2x2_004_mesh"
                {
                    float3 xformOp:rotateXYZ = (0, 180, 0)
                    double3 xformOp:translate = (0.7999954223632815, 8.702002784729004, 3.20002212524414)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5999577, 0, -1.6000428)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_black_tile_1x2_with_groove_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    double3 xformOp:translate = (0.00000762939453125, 9.022, 4.320040369033814)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_011_mesh"
                {
                    double3 xformOp:translate = (-2.4000205993652344, 8.382000228881836, -3.9999900817871095)
                    float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_tile_1x2_with_groove_006_mesh"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 90)
                    double3 xformOp:translate = (3.20001220703125, 6.142000696182251, 3.6799990177154545)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_009_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 5.501999876022339, 1.6000007629394513)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-1.5997876, 0, -3.1998303)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_tile_2x2_002_mesh"
                {
                    float3 xformOp:rotateXYZ = (-180, -0, 0)
                    double3 xformOp:translate = (-0.7999916076660156, 2.9419999928474425, 2.4000076293945307)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.16000001, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0, -0.32000002, -1.6000428)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.16000001, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_yellow_plate_2x6_010_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, -90, 0)
                    double3 xformOp:translate = (-2.400012969970703, 5.501999876022339, -3.2000061035156246)
                    float3 xformOp:translate:rotatePivot = (2.399809, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (-3.1998305, 0, 1.5997876)
                    float3 xformOp:translate:scalePivot = (2.399809, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_darkGrey_plate_2x2_003_mesh"
                {
                    float3 xformOp:rotateXYZ = (-0, 90, 0)
                    double3 xformOp:translate = (2.4000091552734375, 5.501999876022339, 3.1999954223632816)
                    float3 xformOp:translate:rotatePivot = (0.79997885, 0.24041496, 0.8000214)
                    float3 xformOp:translate:rotatePivotTranslate = (0.000042557716, 0, -1.6000003)
                    float3 xformOp:translate:scalePivot = (0.79997885, 0.24041496, 0.8000214)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:rotatePivotTranslate", "xformOp:translate:rotatePivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:rotatePivot", "xformOp:translate:scalePivot", "!invert!xformOp:translate:scalePivot"]
                }

                def Xform "Wall_e_RIG_v001_lightGray_tile_1x2_with_groove_010_mesh"
                {
                    double3 xformOp:translate = (-0.7999839782714844, 3.5819999785423278, -3.200006103515625)
                    uniform token[] xformOpOrder = ["xformOp:translate"]
                }

                def Xform "Wall_e_RIG_v001_c_body_grp_pac"
                {
                }

                def Xform "Wall_e_RIG_v001_c_body_grp_scc"
                {
                }
            }

            def Xform "Wall_e_RIG_v001_l_threads_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, 0.4)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_l_thread_001_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (55.32575, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 0.9522838998777181, -0.6019482691631572),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, -3.805625)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_002_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, -3.8056250641701763)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_001_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_001_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_002_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (5.886513, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.018794310011168103, -1.1301873004726182),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, -2.6056252)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_003_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, -2.605625064170176)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_002_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_002_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_003_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.14487726651210867, -1.1072925978390575),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, -1.4056251)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_004_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, -1.405625064170176)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_003_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_003_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_004_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.1448877667889487, -1.068890374453777),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, -0.20562506)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_005_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, -0.20562506417017612)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_004_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_004_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_005_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.14488776678894877, -1.0303543826121957),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 0.99437493)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_006_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 0.9943749358298238)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_005_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_005_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_006_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0.010773777, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.14488776678894874, -0.9918517814098098),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 2.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_007_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 2.1943749358298237)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_006_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_006_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_007_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-3.9181554, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.14512065189099985, -0.9533507869841626),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 3.3943748)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_008_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 3.394374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_007_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_007_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_008_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-52.226322, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, -0.060994025459441936, -0.9250726267080092),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 4.594375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_009_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 4.5943749358298245)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_008_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_008_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_009_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-110.919014, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 0.8747992707441865, -1.3998852812842815),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 5.794375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_010_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 5.794374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_009_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_009_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_010_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-132.01744, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 1.9863232733282632, -3.0247576629970885),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 6.9943748)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_011_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 6.994374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_010_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_010_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_011_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-132.08318, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 2.906367332261189, -5.053676156371078),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 8.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_012_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 8.194374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_011_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_011_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_012_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-137.84004, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 3.8255052130453167, -7.083691043892234),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 9.394375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_013_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 9.394374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_012_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_012_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_013_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-140.0276, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 4.655581892050529, -9.200424874966702),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 10.594375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_014_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 10.594374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_013_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_013_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_014_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-140.29703, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 5.451236816382387, -11.349577817355865),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 11.794374)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_015_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 11.794374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_014_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_014_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_015_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-172.4497, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 6.242334723801614, -13.502359282301903),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 12.994375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_016_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 12.994374935829823)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_015_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_015_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_016_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (130.7548, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 6.397677424756337, -15.874352882579048),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 14.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_017_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 14.194374935829822)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_016_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_016_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_017_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (114.873634, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 5.487830001900834, -17.85846042588958),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 15.394375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_018_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 15.394374935829822)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_017_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_017_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_018_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (115.005104, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 4.364252661456913, -19.579379431179827),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 16.594376)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_019_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 16.59437493582982)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_018_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_018_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_019_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (114.650604, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 3.2418735282918463, -21.30287508580478),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 17.794374)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_020_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 17.79437493582982)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_019_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_019_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_l_thread_020_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (108.19292, 0, 0),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0000019465637208782027, 2.1163541380425657, -23.01938095029452),
                    }
                    float3 xformOp:translate:pivot = (5.999618, 0.36861777, 18.994375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_021_mesh"
                    {
                        double3 xformOp:translate = (5.999618053436279, 0.36861776678894875, 18.994374935829818)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_020_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_l_thread_020_grp_scc"
                    {
                    }
                }
            }

            def Xform "Wall_e_RIG_v001_r_threads_grp"
            {
                float3 xformOp:translate:pivot = (0, 0, 0.4)
                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                def Xform "Wall_e_RIG_v001_r_thread_001_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (55.32575, -0.0043289484, 0.0029946284),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 0.9522838998777181, -0.6019482691631572),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, -3.805625)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_022_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, -3.8056250641701763)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_001_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_001_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_002_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (5.886513, -0.0009953477, 0.009654004),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.018794310011167936, -1.1301873004726182),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, -2.6056252)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_023_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, -2.605625064170176)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_002_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_002_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_003_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0.010906893),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.1448772665121087, -1.107292597839058),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, -1.4056251)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_024_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, -1.405625064170176)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_003_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_003_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_004_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0.0109069515),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.1448877667889487, -1.068890374453776),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, -0.20562506)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_025_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, -0.20562506417017612)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_004_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_004_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_005_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0, 0, 0.0109069515),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.1448877667889487, -1.0303543826121948),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 0.99437493)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_026_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 0.9943749358298238)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_005_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_005_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_006_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (0.010773777, -0.0000020511523, 0.010908187),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.1448877667889487, -0.9918517814098089),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 2.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_027_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 2.1943749358298237)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_006_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_006_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_007_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-3.9181552, 0.00068922754, 0.010062964),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.14512065189099982, -0.9533507869841604),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 3.3943748)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_028_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 3.394374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_007_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_007_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_008_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-52.226322, 0.0042266417, 0.0032754105),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, -0.060994025459441215, -0.9250726267080065),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 4.594375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_029_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 4.5943749358298245)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_008_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_008_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_009_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-110.919014, 0.005414367, -0.0020696046),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 0.8747992707441865, -1.3998852812842815),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 5.794375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_030_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 5.794374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_009_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_009_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_010_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-132.01744, 0.0053216834, -0.004794598),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 1.986323273328264, -3.0247576629970836),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 6.9943748)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_031_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 6.994374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_010_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_010_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_011_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-132.08318, 0.005318829, -0.0048030955),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 2.9063673322611865, -5.0536761563710755),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 8.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_032_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 8.194374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_011_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_011_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_012_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-137.84004, 0.0048480257, -0.0053541427),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 3.825505213045315, -7.08369104389223),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 9.394375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_033_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 9.394374935829825)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_012_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_012_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_013_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-140.0276, 0.0045940815, -0.0054803737),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 4.655581892050526, -9.2004248749667),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 10.594375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_034_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 10.594374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_013_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_013_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_014_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-140.29703, 0.0045544407, -0.0054852716),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 5.451236816382385, -11.349577817355861),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 11.794374)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_035_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 11.794374935829824)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_014_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_014_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_015_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (-172.4497, 0.0006674467, -0.0050355974),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 6.242334723801614, -13.502359282301901),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 12.994375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_036_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 12.994374935829823)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_015_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_015_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_016_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (130.7548, -0.0038892853, -0.0033517906),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 6.397677424756337, -15.87435288257905),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 14.194375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_037_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 14.194374935829822)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_016_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_016_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_017_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (114.873634, -0.005246272, -0.002432305),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 5.487830001900834, -17.85846042588958),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 15.394375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_038_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 15.394374935829822)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_017_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_017_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_018_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (115.005104, -0.0052374215, -0.0024428177),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 4.364252661456913, -19.579379431179827),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 16.594376)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_039_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 16.59437493582982)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_018_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_018_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_019_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (114.650604, -0.0052506146, -0.0024095306),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 3.2418735282918463, -21.30287508580478),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 17.794374)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_040_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 17.79437493582982)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_019_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_019_grp_scc"
                    {
                    }
                }

                def Xform "Wall_e_RIG_v001_r_thread_020_grp"
                {
                    float3 xformOp:rotateXYZ.timeSamples = {
                        1: (108.19292, -0.005294698, -0.0017400826),
                    }
                    float3 xformOp:scale.timeSamples = {
                        1: (1, 1, 1),
                    }
                    double3 xformOp:translate.timeSamples = {
                        1: (0.0003799999999998249, 2.1163541380425657, -23.01938095029452),
                    }
                    float3 xformOp:translate:pivot = (-6, 0.36861777, 18.994375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    def Xform "Wall_e_RIG_v001_black_thread_041_mesh"
                    {
                        double3 xformOp:translate = (-6, 0.36861776678894875, 18.994374935829818)
                        uniform token[] xformOpOrder = ["xformOp:translate"]
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_020_grp_pac"
                    {
                    }

                    def Xform "Wall_e_RIG_v001_r_thread_020_grp_scc"
                    {
                    }
                }
            }
        }

        def Xform "Wall_e_RIG_v001_instances_grp"
        {
            token visibility = "invisible"

            def Xform "Wall_e_RIG_v001_bricks_grp"
            {
                def Xform "Wall_e_RIG_v001_original_grp"
                {
                    def Xform "Wall_e_RIG_v001_tile_1x1_with_groove_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x1_with_groove_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x1_round_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x1_round_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x2_with_groove_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x2_with_groove_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x2_grille_without_groove_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x2_grille_without_groove_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x4_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x6_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x6_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_1x8_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_1x8_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_2x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_2x2_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_2x2_round_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_2x2_round_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_2x2_corner_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_2x2_corner_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 0.16, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_tile_2x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_tile_2x4_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x1_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x1_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x1_round_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x1_round_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x1_v_clip_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x1_v_clip_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.4, 0.24041493, 0.6797043)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x1_clip_l_thick_mesh_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x1_clip_l_thick_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79968435, 0.20901364, 0.77121484)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x2_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x2_h_clip_double_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x2_h_clip_double_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.24353656, 0.6797043)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x2_handle_end_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x2_handle_end_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.1240871, 0.23999998, 0.4)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x2_handle_side_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x2_handle_side_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79968435, 0.20901364, 0.77121484)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x4_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x6_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x6_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x8_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x8_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (3.199997, 0.24041496, 0.4000001)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_1x10_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_1x10_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x2_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x2_corner_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x2_corner_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x2_round_rounded_bottom_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x2_round_rounded_bottom_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 0.23805894, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x4_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.5999199, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x6_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x6_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Mesh "Wall_e_RIG_v001_plate_2x6_mesh_0010" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(0, -2.9425368e-19, 1.1920929e-7), (4.799618, 0.48082992, 1.6000427)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [62, 63, 23, 1, 15, 25, 26, 2, 2, 26, 58, 59, 6, 17, 18, 12, 59, 60, 15, 2, 3, 27, 46, 47, 51, 22, 0, 50, 14, 3, 47, 48, 45, 44, 47, 46, 44, 45, 16, 4, 40, 41, 5, 21, 43, 44, 4, 13, 32, 33, 17, 6, 28, 29, 7, 20, 31, 32, 6, 12, 8, 19, 20, 7, 29, 30, 8, 7, 41, 42, 9, 5, 0, 10, 49, 50, 11, 61, 62, 1, 1, 23, 24, 11, 12, 18, 153, 154, 155, 31, 12, 154, 158, 43, 13, 157, 160, 14, 48, 159, 15, 60, 162, 163, 163, 164, 25, 15, 45, 75, 76, 16, 17, 33, 78, 79, 18, 17, 79, 80, 153, 18, 80, 152, 20, 19, 81, 82, 83, 28, 20, 82, 86, 40, 21, 85, 87, 64, 22, 51, 23, 63, 66, 67, 24, 23, 67, 68, 25, 164, 165, 69, 26, 25, 69, 70, 58, 26, 70, 71, 46, 27, 73, 74, 74, 75, 45, 46, 84, 34, 28, 83, 34, 35, 29, 28, 35, 36, 30, 29, 156, 37, 31, 155, 37, 38, 32, 31, 38, 39, 33, 32, 78, 33, 39, 77, 85, 21, 34, 84, 21, 5, 35, 34, 5, 9, 36, 35, 157, 13, 37, 156, 13, 4, 38, 37, 4, 16, 39, 38, 77, 39, 16, 76, 48, 47, 44, 43, 158, 159, 48, 43, 41, 50, 49, 42, 51, 50, 41, 40, 86, 87, 51, 40, 27, 52, 72, 73, 53, 52, 27, 3, 3, 14, 54, 53, 161, 54, 14, 160, 56, 55, 10, 0, 0, 22, 57, 56, 65, 57, 22, 64, 52, 58, 71, 72, 59, 58, 52, 53, 53, 54, 60, 59, 162, 60, 54, 161, 62, 61, 55, 56, 56, 57, 63, 62, 66, 63, 57, 65, 214, 65, 64, 213, 215, 66, 65, 214, 67, 66, 215, 216, 68, 67, 216, 217, 69, 165, 192, 193, 70, 69, 193, 194, 71, 70, 194, 195, 72, 71, 195, 196, 73, 72, 196, 197, 74, 73, 197, 198, 198, 199, 75, 74, 76, 75, 199, 200, 201, 77, 76, 200, 202, 78, 77, 201, 79, 78, 202, 203, 80, 79, 203, 204, 152, 80, 204, 205, 82, 81, 206, 207, 208, 83, 82, 207, 209, 84, 83, 208, 210, 85, 84, 209, 211, 86, 85, 210, 211, 212, 87, 86, 212, 213, 64, 87, 88, 89, 125, 126, 89, 90, 124, 125, 90, 91, 123, 124, 91, 92, 122, 123, 92, 93, 121, 122, 93, 94, 120, 121, 94, 95, 127, 120, 95, 88, 126, 127, 89, 88, 130, 131, 90, 89, 131, 132, 91, 90, 132, 133, 92, 91, 133, 134, 93, 92, 134, 135, 94, 93, 135, 128, 95, 94, 128, 129, 88, 95, 129, 130, 105, 104, 146, 147, 106, 105, 147, 148, 107, 106, 148, 149, 108, 107, 149, 150, 109, 108, 150, 151, 110, 109, 151, 144, 111, 110, 144, 145, 104, 111, 145, 146, 121, 120, 102, 101, 122, 121, 101, 100, 123, 122, 100, 99, 124, 123, 99, 98, 125, 124, 98, 97, 126, 125, 97, 96, 127, 126, 96, 103, 120, 127, 103, 102, 129, 128, 136, 137, 130, 129, 137, 138, 131, 130, 138, 139, 132, 131, 139, 140, 133, 132, 140, 141, 134, 133, 141, 142, 135, 134, 142, 143, 128, 135, 143, 136, 137, 136, 110, 111, 138, 137, 111, 104, 139, 138, 104, 105, 140, 139, 105, 106, 141, 140, 106, 107, 142, 141, 107, 108, 143, 142, 108, 109, 136, 143, 109, 110, 145, 144, 118, 119, 146, 145, 119, 112, 147, 146, 112, 113, 148, 147, 113, 114, 149, 148, 114, 115, 150, 149, 115, 116, 151, 150, 116, 117, 144, 151, 117, 118, 81, 152, 205, 206, 19, 153, 152, 81, 154, 153, 19, 8, 30, 155, 154, 8, 36, 156, 155, 30, 9, 157, 156, 36, 42, 158, 157, 9, 42, 49, 159, 158, 10, 160, 159, 49, 55, 161, 160, 10, 61, 162, 161, 55, 163, 162, 61, 11, 11, 24, 164, 163, 165, 164, 24, 68, 217, 192, 165, 68, 193, 192, 166, 167, 194, 193, 167, 168, 195, 194, 168, 169, 196, 195, 169, 170, 197, 196, 170, 171, 198, 197, 171, 172, 172, 173, 199, 198, 200, 199, 173, 174, 175, 201, 200, 174, 176, 202, 201, 175, 203, 202, 176, 177, 204, 203, 177, 178, 205, 204, 178, 179, 206, 205, 179, 180, 207, 206, 180, 181, 182, 208, 207, 181, 183, 209, 208, 182, 184, 210, 209, 183, 185, 211, 210, 184, 185, 186, 212, 211, 186, 187, 213, 212, 188, 214, 213, 187, 189, 215, 214, 188, 216, 215, 189, 190, 217, 216, 190, 191, 191, 166, 192, 217, 218, 219, 255, 256, 219, 220, 254, 255, 220, 221, 253, 254, 221, 222, 252, 253, 222, 223, 251, 252, 223, 224, 250, 251, 224, 225, 257, 250, 225, 218, 256, 257, 219, 218, 260, 261, 220, 219, 261, 262, 221, 220, 262, 263, 222, 221, 263, 264, 223, 222, 264, 265, 224, 223, 265, 258, 225, 224, 258, 259, 218, 225, 259, 260, 235, 234, 276, 277, 236, 235, 277, 278, 237, 236, 278, 279, 238, 237, 279, 280, 239, 238, 280, 281, 240, 239, 281, 274, 241, 240, 274, 275, 234, 241, 275, 276, 251, 250, 232, 231, 252, 251, 231, 230, 253, 252, 230, 229, 254, 253, 229, 228, 255, 254, 228, 227, 256, 255, 227, 226, 257, 256, 226, 233, 250, 257, 233, 232, 259, 258, 266, 267, 260, 259, 267, 268, 261, 260, 268, 269, 262, 261, 269, 270, 263, 262, 270, 271, 264, 263, 271, 272, 265, 264, 272, 273, 258, 265, 273, 266, 267, 266, 240, 241, 268, 267, 241, 234, 269, 268, 234, 235, 270, 269, 235, 236, 271, 270, 236, 237, 272, 271, 237, 238, 273, 272, 238, 239, 266, 273, 239, 240, 275, 274, 248, 249, 276, 275, 249, 242, 277, 276, 242, 243, 278, 277, 243, 244, 279, 278, 244, 245, 280, 279, 245, 246, 281, 280, 246, 247, 274, 281, 247, 248, 282, 283, 310, 311, 283, 284, 309, 310, 284, 285, 308, 309, 285, 286, 307, 308, 286, 287, 314, 307, 287, 288, 313, 314, 288, 289, 312, 313, 289, 282, 311, 312, 290, 291, 299, 298, 291, 292, 300, 299, 292, 293, 301, 300, 293, 294, 302, 301, 294, 295, 303, 302, 295, 296, 304, 303, 296, 297, 305, 304, 297, 290, 298, 305, 306, 299, 300, 301, 306, 301, 302, 303, 306, 303, 304, 305, 306, 305, 298, 299, 308, 307, 294, 293, 309, 308, 293, 292, 310, 309, 292, 291, 311, 310, 291, 290, 312, 311, 290, 297, 313, 312, 297, 296, 314, 313, 296, 295, 307, 314, 295, 294, 315, 316, 343, 344, 316, 317, 342, 343, 317, 318, 341, 342, 318, 319, 340, 341, 319, 320, 347, 340, 320, 321, 346, 347, 321, 322, 345, 346, 322, 315, 344, 345, 323, 324, 332, 331, 324, 325, 333, 332, 325, 326, 334, 333, 326, 327, 335, 334, 327, 328, 336, 335, 328, 329, 337, 336, 329, 330, 338, 337, 330, 323, 331, 338, 339, 332, 333, 334, 339, 334, 335, 336, 339, 336, 337, 338, 339, 338, 331, 332, 341, 340, 327, 326, 342, 341, 326, 325, 343, 342, 325, 324, 344, 343, 324, 323, 345, 344, 323, 330, 346, 345, 330, 329, 347, 346, 329, 328, 340, 347, 328, 327, 348, 349, 376, 377, 349, 350, 375, 376, 350, 351, 374, 375, 351, 352, 373, 374, 352, 353, 380, 373, 353, 354, 379, 380, 354, 355, 378, 379, 355, 348, 377, 378, 356, 357, 365, 364, 357, 358, 366, 365, 358, 359, 367, 366, 359, 360, 368, 367, 360, 361, 369, 368, 361, 362, 370, 369, 362, 363, 371, 370, 363, 356, 364, 371, 372, 365, 366, 367, 372, 367, 368, 369, 372, 369, 370, 371, 372, 371, 364, 365, 374, 373, 360, 359, 375, 374, 359, 358, 376, 375, 358, 357, 377, 376, 357, 356, 378, 377, 356, 363, 379, 378, 363, 362, 380, 379, 362, 361, 373, 380, 361, 360, 381, 382, 409, 410, 382, 383, 408, 409, 383, 384, 407, 408, 384, 385, 406, 407, 385, 386, 413, 406, 386, 387, 412, 413, 387, 388, 411, 412, 388, 381, 410, 411, 389, 390, 398, 397, 390, 391, 399, 398, 391, 392, 400, 399, 392, 393, 401, 400, 393, 394, 402, 401, 394, 395, 403, 402, 395, 396, 404, 403, 396, 389, 397, 404, 405, 398, 399, 400, 405, 400, 401, 402, 405, 402, 403, 404, 405, 404, 397, 398, 407, 406, 393, 392, 408, 407, 392, 391, 409, 408, 391, 390, 410, 409, 390, 389, 411, 410, 389, 396, 412, 411, 396, 395, 413, 412, 395, 394, 406, 413, 394, 393, 414, 415, 442, 443, 415, 416, 441, 442, 416, 417, 440, 441, 417, 418, 439, 440, 418, 419, 446, 439, 419, 420, 445, 446, 420, 421, 444, 445, 421, 414, 443, 444, 422, 423, 431, 430, 423, 424, 432, 431, 424, 425, 433, 432, 425, 426, 434, 433, 426, 427, 435, 434, 427, 428, 436, 435, 428, 429, 437, 436, 429, 422, 430, 437, 438, 431, 432, 433, 438, 433, 434, 435, 438, 435, 436, 437, 438, 437, 430, 431, 440, 439, 426, 425, 441, 440, 425, 424, 442, 441, 424, 423, 443, 442, 423, 422, 444, 443, 422, 429, 445, 444, 429, 428, 446, 445, 428, 427, 439, 446, 427, 426, 447, 448, 475, 476, 448, 449, 474, 475, 449, 450, 473, 474, 450, 451, 472, 473, 451, 452, 479, 472, 452, 453, 478, 479, 453, 454, 477, 478, 454, 447, 476, 477, 455, 456, 464, 463, 456, 457, 465, 464, 457, 458, 466, 465, 458, 459, 467, 466, 459, 460, 468, 467, 460, 461, 469, 468, 461, 462, 470, 469, 462, 455, 463, 470, 471, 464, 465, 466, 471, 466, 467, 468, 471, 468, 469, 470, 471, 470, 463, 464, 473, 472, 459, 458, 474, 473, 458, 457, 475, 474, 457, 456, 476, 475, 456, 455, 477, 476, 455, 462, 478, 477, 462, 461, 479, 478, 461, 460, 472, 479, 460, 459, 592, 188, 187, 591, 593, 189, 188, 592, 190, 189, 593, 594, 191, 190, 594, 595, 167, 166, 570, 571, 168, 167, 571, 572, 169, 168, 572, 573, 170, 169, 573, 574, 171, 170, 574, 575, 172, 171, 575, 576, 576, 577, 173, 172, 174, 173, 577, 578, 579, 175, 174, 578, 580, 176, 175, 579, 177, 176, 580, 581, 178, 177, 581, 582, 179, 178, 582, 583, 181, 180, 584, 585, 586, 182, 181, 585, 587, 183, 182, 586, 588, 184, 183, 587, 589, 185, 184, 588, 589, 590, 186, 185, 590, 591, 187, 186, 480, 481, 517, 518, 481, 482, 516, 517, 482, 483, 515, 516, 483, 484, 514, 515, 484, 485, 513, 514, 485, 486, 512, 513, 486, 487, 519, 512, 487, 480, 518, 519, 481, 480, 522, 523, 482, 481, 523, 524, 483, 482, 524, 525, 484, 483, 525, 526, 485, 484, 526, 527, 486, 485, 527, 520, 487, 486, 520, 521, 480, 487, 521, 522, 497, 496, 538, 539, 498, 497, 539, 540, 499, 498, 540, 541, 500, 499, 541, 542, 501, 500, 542, 543, 502, 501, 543, 536, 503, 502, 536, 537, 496, 503, 537, 538, 513, 512, 494, 493, 514, 513, 493, 492, 515, 514, 492, 491, 516, 515, 491, 490, 517, 516, 490, 489, 518, 517, 489, 488, 519, 518, 488, 495, 512, 519, 495, 494, 521, 520, 528, 529, 522, 521, 529, 530, 523, 522, 530, 531, 524, 523, 531, 532, 525, 524, 532, 533, 526, 525, 533, 534, 527, 526, 534, 535, 520, 527, 535, 528, 529, 528, 502, 503, 530, 529, 503, 496, 531, 530, 496, 497, 532, 531, 497, 498, 533, 532, 498, 499, 534, 533, 499, 500, 535, 534, 500, 501, 528, 535, 501, 502, 537, 536, 510, 511, 538, 537, 511, 504, 539, 538, 504, 505, 540, 539, 505, 506, 541, 540, 506, 507, 542, 541, 507, 508, 543, 542, 508, 509, 536, 543, 509, 510, 180, 179, 583, 584, 595, 570, 166, 191, 571, 570, 544, 545, 572, 571, 545, 546, 573, 572, 546, 547, 574, 573, 547, 548, 575, 574, 548, 549, 576, 575, 549, 550, 550, 551, 577, 576, 578, 577, 551, 552, 553, 579, 578, 552, 554, 580, 579, 553, 581, 580, 554, 555, 582, 581, 555, 556, 583, 582, 556, 557, 584, 583, 557, 558, 585, 584, 558, 559, 560, 586, 585, 559, 561, 587, 586, 560, 562, 588, 587, 561, 563, 589, 588, 562, 563, 564, 590, 589, 564, 565, 591, 590, 566, 592, 591, 565, 567, 593, 592, 566, 594, 593, 567, 568, 595, 594, 568, 569, 569, 544, 570, 595, 596, 597, 633, 634, 597, 598, 632, 633, 598, 599, 631, 632, 599, 600, 630, 631, 600, 601, 629, 630, 601, 602, 628, 629, 602, 603, 635, 628, 603, 596, 634, 635, 597, 596, 638, 639, 598, 597, 639, 640, 599, 598, 640, 641, 600, 599, 641, 642, 601, 600, 642, 643, 602, 601, 643, 636, 603, 602, 636, 637, 596, 603, 637, 638, 613, 612, 654, 655, 614, 613, 655, 656, 615, 614, 656, 657, 616, 615, 657, 658, 617, 616, 658, 659, 618, 617, 659, 652, 619, 618, 652, 653, 612, 619, 653, 654, 629, 628, 610, 609, 630, 629, 609, 608, 631, 630, 608, 607, 632, 631, 607, 606, 633, 632, 606, 605, 634, 633, 605, 604, 635, 634, 604, 611, 628, 635, 611, 610, 637, 636, 644, 645, 638, 637, 645, 646, 639, 638, 646, 647, 640, 639, 647, 648, 641, 640, 648, 649, 642, 641, 649, 650, 643, 642, 650, 651, 636, 643, 651, 644, 645, 644, 618, 619, 646, 645, 619, 612, 647, 646, 612, 613, 648, 647, 613, 614, 649, 648, 614, 615, 650, 649, 615, 616, 651, 650, 616, 617, 644, 651, 617, 618, 653, 652, 626, 627, 654, 653, 627, 620, 655, 654, 620, 621, 656, 655, 621, 622, 657, 656, 622, 623, 658, 657, 623, 624, 659, 658, 624, 625, 652, 659, 625, 626, 660, 661, 688, 689, 661, 662, 687, 688, 662, 663, 686, 687, 663, 664, 685, 686, 664, 665, 692, 685, 665, 666, 691, 692, 666, 667, 690, 691, 667, 660, 689, 690, 668, 669, 677, 676, 669, 670, 678, 677, 670, 671, 679, 678, 671, 672, 680, 679, 672, 673, 681, 680, 673, 674, 682, 681, 674, 675, 683, 682, 675, 668, 676, 683, 684, 677, 678, 679, 684, 679, 680, 681, 684, 681, 682, 683, 684, 683, 676, 677, 686, 685, 672, 671, 687, 686, 671, 670, 688, 687, 670, 669, 689, 688, 669, 668, 690, 689, 668, 675, 691, 690, 675, 674, 692, 691, 674, 673, 685, 692, 673, 672, 693, 694, 721, 722, 694, 695, 720, 721, 695, 696, 719, 720, 696, 697, 718, 719, 697, 698, 725, 718, 698, 699, 724, 725, 699, 700, 723, 724, 700, 693, 722, 723, 701, 702, 710, 709, 702, 703, 711, 710, 703, 704, 712, 711, 704, 705, 713, 712, 705, 706, 714, 713, 706, 707, 715, 714, 707, 708, 716, 715, 708, 701, 709, 716, 717, 710, 711, 712, 717, 712, 713, 714, 717, 714, 715, 716, 717, 716, 709, 710, 719, 718, 705, 704, 720, 719, 704, 703, 721, 720, 703, 702, 722, 721, 702, 701, 723, 722, 701, 708, 724, 723, 708, 707, 725, 724, 707, 706, 718, 725, 706, 705, 726, 727, 754, 755, 727, 728, 753, 754, 728, 729, 752, 753, 729, 730, 751, 752, 730, 731, 758, 751, 731, 732, 757, 758, 732, 733, 756, 757, 733, 726, 755, 756, 734, 735, 743, 742, 735, 736, 744, 743, 736, 737, 745, 744, 737, 738, 746, 745, 738, 739, 747, 746, 739, 740, 748, 747, 740, 741, 749, 748, 741, 734, 742, 749, 750, 743, 744, 745, 750, 745, 746, 747, 750, 747, 748, 749, 750, 749, 742, 743, 752, 751, 738, 737, 753, 752, 737, 736, 754, 753, 736, 735, 755, 754, 735, 734, 756, 755, 734, 741, 757, 756, 741, 740, 758, 757, 740, 739, 751, 758, 739, 738, 759, 760, 787, 788, 760, 761, 786, 787, 761, 762, 785, 786, 762, 763, 784, 785, 763, 764, 791, 784, 764, 765, 790, 791, 765, 766, 789, 790, 766, 759, 788, 789, 767, 768, 776, 775, 768, 769, 777, 776, 769, 770, 778, 777, 770, 771, 779, 778, 771, 772, 780, 779, 772, 773, 781, 780, 773, 774, 782, 781, 774, 767, 775, 782, 783, 776, 777, 778, 783, 778, 779, 780, 783, 780, 781, 782, 783, 782, 775, 776, 785, 784, 771, 770, 786, 785, 770, 769, 787, 786, 769, 768, 788, 787, 768, 767, 789, 788, 767, 774, 790, 789, 774, 773, 791, 790, 773, 772, 784, 791, 772, 771, 792, 793, 820, 821, 793, 794, 819, 820, 794, 795, 818, 819, 795, 796, 817, 818, 796, 797, 824, 817, 797, 798, 823, 824, 798, 799, 822, 823, 799, 792, 821, 822, 800, 801, 809, 808, 801, 802, 810, 809, 802, 803, 811, 810, 803, 804, 812, 811, 804, 805, 813, 812, 805, 806, 814, 813, 806, 807, 815, 814, 807, 800, 808, 815, 816, 809, 810, 811, 816, 811, 812, 813, 816, 813, 814, 815, 816, 815, 808, 809, 818, 817, 804, 803, 819, 818, 803, 802, 820, 819, 802, 801, 821, 820, 801, 800, 822, 821, 800, 807, 823, 822, 807, 806, 824, 823, 806, 805, 817, 824, 805, 804, 825, 826, 853, 854, 826, 827, 852, 853, 827, 828, 851, 852, 828, 829, 850, 851, 829, 830, 857, 850, 830, 831, 856, 857, 831, 832, 855, 856, 832, 825, 854, 855, 833, 834, 842, 841, 834, 835, 843, 842, 835, 836, 844, 843, 836, 837, 845, 844, 837, 838, 846, 845, 838, 839, 847, 846, 839, 840, 848, 847, 840, 833, 841, 848, 849, 842, 843, 844, 849, 844, 845, 846, 849, 846, 847, 848, 849, 848, 841, 842, 851, 850, 837, 836, 852, 851, 836, 835, 853, 852, 835, 834, 854, 853, 834, 833, 855, 854, 833, 840, 856, 855, 840, 839, 857, 856, 839, 838, 850, 857, 838, 837, 858, 859, 895, 896, 859, 860, 894, 895, 860, 861, 893, 894, 861, 862, 892, 893, 862, 863, 891, 892, 863, 864, 890, 891, 864, 865, 897, 890, 865, 858, 896, 897, 859, 858, 900, 901, 860, 859, 901, 902, 861, 860, 902, 903, 862, 861, 903, 904, 863, 862, 904, 905, 864, 863, 905, 898, 865, 864, 898, 899, 858, 865, 899, 900, 875, 874, 916, 917, 876, 875, 917, 918, 877, 876, 918, 919, 878, 877, 919, 920, 879, 878, 920, 921, 880, 879, 921, 914, 881, 880, 914, 915, 874, 881, 915, 916, 891, 890, 872, 871, 892, 891, 871, 870, 893, 892, 870, 869, 894, 893, 869, 868, 895, 894, 868, 867, 896, 895, 867, 866, 897, 896, 866, 873, 890, 897, 873, 872, 899, 898, 906, 907, 900, 899, 907, 908, 901, 900, 908, 909, 902, 901, 909, 910, 903, 902, 910, 911, 904, 903, 911, 912, 905, 904, 912, 913, 898, 905, 913, 906, 907, 906, 880, 881, 908, 907, 881, 874, 909, 908, 874, 875, 910, 909, 875, 876, 911, 910, 876, 877, 912, 911, 877, 878, 913, 912, 878, 879, 906, 913, 879, 880, 915, 914, 888, 889, 916, 915, 889, 882, 917, 916, 882, 883, 918, 917, 883, 884, 919, 918, 884, 885, 920, 919, 885, 886, 921, 920, 886, 887, 914, 921, 887, 888, 948, 981, 982, 924, 925, 949, 969, 970, 965, 964, 970, 969, 964, 965, 944, 926, 952, 953, 945, 928, 930, 922, 973, 968, 967, 966, 968, 973, 931, 966, 967, 927, 932, 954, 955, 929, 985, 980, 933, 923, 984, 985, 923, 935, 936, 935, 923, 933, 937, 947, 948, 924, 983, 937, 924, 982, 971, 938, 925, 970, 964, 963, 971, 970, 939, 963, 964, 926, 940, 951, 952, 928, 946, 940, 928, 945, 942, 941, 932, 929, 955, 950, 942, 929, 967, 962, 943, 927, 922, 934, 972, 973, 965, 986, 987, 944, 945, 953, 989, 990, 991, 946, 945, 990, 948, 947, 992, 993, 993, 994, 981, 948, 969, 949, 996, 997, 986, 965, 969, 997, 952, 951, 957, 958, 958, 959, 953, 952, 989, 953, 959, 988, 955, 954, 960, 961, 961, 956, 950, 955, 958, 957, 939, 926, 926, 944, 959, 958, 988, 959, 944, 987, 961, 960, 931, 927, 927, 943, 956, 961, 967, 973, 972, 962, 995, 996, 949, 975, 976, 975, 949, 925, 938, 977, 976, 925, 934, 922, 979, 978, 922, 930, 974, 979, 994, 995, 975, 981, 982, 981, 975, 976, 977, 983, 982, 976, 978, 979, 985, 984, 979, 974, 980, 985, 968, 966, 986, 997, 987, 986, 966, 931, 960, 988, 987, 931, 954, 989, 988, 960, 990, 989, 954, 932, 941, 991, 990, 932, 993, 992, 936, 933, 933, 980, 994, 993, 980, 974, 995, 994, 974, 930, 996, 995, 997, 996, 930, 968, 545, 544, 992, 947, 546, 545, 947, 937, 547, 546, 937, 983, 548, 547, 983, 977, 549, 548, 977, 938, 550, 549, 938, 971, 971, 963, 551, 550, 552, 551, 963, 939, 957, 553, 552, 939, 951, 554, 553, 957, 555, 554, 951, 940, 556, 555, 940, 946, 557, 556, 946, 991, 558, 557, 991, 941, 559, 558, 941, 942, 950, 560, 559, 942, 956, 561, 560, 950, 943, 562, 561, 956, 962, 563, 562, 943, 962, 972, 564, 563, 972, 934, 565, 564, 978, 566, 565, 934, 984, 567, 566, 978, 568, 567, 984, 935, 569, 568, 935, 936, 992, 544, 569, 936]
                            rel material:binding = </Cache1/mtl/initialShadingGroup>
                            point3f[] points = [(0, 0, 1.6000427), (0, 0.32, 1.6000427), (0, 0.32000002, 1.1920929e-7), (0, 0, 1.1920929e-7), (0.15920237, 2.9802322e-8, 0.15920249), (0.15920237, 0, 1.4408402), (0.15920237, 0.15882537, 0.15920249), (0.15920237, 0.15882534, 1.4408402), (0.15920237, 0.15882534, 1.4371719), (0.15920237, 0, 1.4371719), (0, 0, 1.5551736), (0, 0.32, 1.5551736), (0.15920237, 0.15882537, 0.16335832), (0.15920237, 2.9802322e-8, 0.16335832), (0, 0, 0.045599043), (0, 0.32000002, 0.045599043), (0.16342261, 2.9802322e-8, 0.15920249), (0.16342261, 0.15882537, 0.15920249), (0.16342261, 0.15882537, 0.16335832), (0.16342261, 0.15882534, 1.4371719), (0.16342261, 0.15882534, 1.4408402), (0.16342261, 0, 1.4408402), (0.045695394, 0, 1.6000427), (0.045695394, 0.32, 1.6000427), (0.045695394, 0.32, 1.5551736), (0.045695394, 0.32000002, 0.045599043), (0.045695394, 0.32000002, 1.1920929e-7), (0.045695394, 0, 1.1920929e-7), (0.16342261, 0.15451507, 1.4408402), (0.15920237, 0.15451507, 1.4408402), (0.15920237, 0.15451507, 1.4371719), (0.15920237, 0.1545151, 0.16335832), (0.15920237, 0.1545151, 0.15920249), (0.16342261, 0.1545151, 0.15920249), (0.16342261, 0.006479934, 1.4408402), (0.15920237, 0.006479934, 1.4408402), (0.15920237, 0.006479934, 1.4371719), (0.15920237, 0.0064799637, 0.16335832), (0.15920237, 0.0064799637, 0.15920249), (0.16342261, 0.0064799637, 0.15920249), (0.15847568, 0, 1.4458754), (0.1541672, 0, 1.4458754), (0.1541672, 0, 1.4421303), (0.1541672, 2.9802322e-8, 0.15841003), (0.1541672, 2.9802322e-8, 0.15416732), (0.15847568, 2.9802322e-8, 0.15416732), (0.045695394, 0, 0.0062111914), (0.006211072, 0, 0.0062111914), (0.006211072, 0, 0.045599043), (0.006211072, 0, 1.5551736), (0.006211072, 0, 1.5938315), (0.045695394, 0, 1.5938315), (0.045695394, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 0.045599043), (0, 0.0117769465, 1.5551736), (0, 0.0117769465, 1.6000427), (0.045695394, 0.0117769465, 1.6000427), (0.045695394, 0.272588, 1.1920929e-7), (0, 0.272588, 1.1920929e-7), (0, 0.272588, 0.045599043), (0, 0.27258798, 1.5551736), (0, 0.27258798, 1.6000427), (0.045695394, 0.27258798, 1.6000427), (0.8002218, 0, 1.6000427), (0.8002218, 0.0117769465, 1.6000427), (0.8002218, 0.27258798, 1.6000427), (0.8002218, 0.32, 1.6000427), (0.8002218, 0.32, 1.5551736), (0.8002218, 0.32000002, 0.045599043), (0.8002218, 0.32000002, 1.1920929e-7), (0.8002218, 0.272588, 1.1920929e-7), (0.8002218, 0.0117769465, 1.1920929e-7), (0.8002218, 0, 1.1920929e-7), (0.8002218, 0, 0.0062111914), (0.80014443, 2.9802322e-8, 0.15416732), (0.80014104, 2.9802322e-8, 0.15920249), (0.80014104, 0.0064799637, 0.15920249), (0.80014104, 0.1545151, 0.15920249), (0.80014104, 0.15882537, 0.15920249), (0.80014104, 0.15882537, 0.16335832), (0.80014104, 0.15882534, 1.4371719), (0.80014104, 0.15882534, 1.4408402), (0.80014104, 0.15451507, 1.4408402), (0.80014104, 0.006479934, 1.4408402), (0.80014104, 0, 1.4408402), (0.80014443, 0, 1.4458754), (0.8002218, 0, 1.5938315), (1.0520017, 0, 0.5479983), (0.8, 0, 0.44361582), (0.5479983, 0, 0.5479983), (0.44361582, 0, 0.8), (0.5479983, 0, 1.0520017), (0.8, 0, 1.1563842), (1.0520017, 0, 1.0520017), (1.1563842, 0, 0.8), (1.0520017, 0.15882534, 0.5479983), (0.8, 0.15882534, 0.44361582), (0.5479983, 0.15882534, 0.5479983), (0.44361582, 0.15882534, 0.8), (0.5479983, 0.15882534, 1.0520017), (0.8, 0.15882534, 1.1563842), (1.0520017, 0.15882534, 1.0520017), (1.1563842, 0.15882534, 0.8), (0.98699343, 0, 0.61300665), (0.8, 0, 0.5355515), (0.61300665, 0, 0.61300665), (0.5355515, 0, 0.8), (0.61300665, 0, 0.98699343), (0.8, 0, 1.0644486), (0.98699343, 0, 0.98699343), (1.0644486, 0, 0.8), (0.98699343, 0.15882534, 0.61300665), (0.8, 0.15882534, 0.5355515), (0.61300665, 0.15882534, 0.61300665), (0.5355515, 0.15882534, 0.8), (0.61300665, 0.15882534, 0.98699343), (0.8, 0.15882534, 1.0644486), (0.98699343, 0.15882534, 0.98699343), (1.0644486, 0.15882534, 0.8), (1.0520017, 0.0075166663, 1.0520017), (0.8, 0.0075166663, 1.1563842), (0.5479983, 0.0075166663, 1.0520017), (0.44361582, 0.0075166663, 0.8), (0.5479983, 0.0075166663, 0.5479983), (0.8, 0.0075166663, 0.44361582), (1.0520017, 0.0075166663, 0.5479983), (1.1563842, 0.0075166663, 0.8), (1.0383878, 0, 1.0383878), (1.1371312, 0, 0.8), (1.0383878, 0, 0.5616123), (0.8, 0, 0.46286893), (0.5616123, 0, 0.5616123), (0.46286893, 0, 0.8), (0.5616123, 0, 1.0383878), (0.8, 0, 1.1371312), (1.000478, 0, 1.000478), (1.0835187, 0, 0.8), (1.000478, 0, 0.599522), (0.8, 0, 0.5164813), (0.599522, 0, 0.599522), (0.5164813, 0, 0.8), (0.599522, 0, 1.000478), (0.8, 0, 1.0835187), (0.98699343, 0.012202854, 0.98699343), (1.0644486, 0.012202854, 0.8), (0.98699343, 0.012202854, 0.61300665), (0.8, 0.012202854, 0.5355515), (0.61300665, 0.012202854, 0.61300665), (0.5355515, 0.012202854, 0.8), (0.61300665, 0.012202854, 0.98699343), (0.8, 0.012202854, 1.0644486), (0.80014104, 0.15882535, 0.80026513), (0.16342261, 0.15882535, 0.80026513), (0.15920237, 0.15882535, 0.80026513), (0.15920237, 0.15451509, 0.80026513), (0.15920237, 0.0064799488, 0.80026513), (0.15920237, 1.4901161e-8, 0.80026513), (0.1541672, 1.4901161e-8, 0.8002702), (0.006211072, 0, 0.8003863), (0, 0, 0.8003863), (0, 0.0117769465, 0.8003863), (0, 0.272588, 0.8003863), (0, 0.32, 0.8003863), (0.045695394, 0.32, 0.8003863), (0.8002218, 0.32, 0.8003863), (2.4, 0.32, 0.8003863), (2.4, 0.32000002, 0.045599043), (2.4, 0.32000002, 1.1920929e-7), (2.4, 0.272588, 1.1920929e-7), (2.4, 0.0117769465, 1.1920929e-7), (2.4, 0, 1.1920929e-7), (2.4, 0, 0.0062111914), (2.3999615, 2.9802322e-8, 0.15416732), (2.3999596, 2.9802322e-8, 0.15920249), (2.3999596, 0.0064799637, 0.15920249), (2.3999596, 0.1545151, 0.15920249), (2.3999596, 0.15882537, 0.15920249), (2.3999596, 0.15882537, 0.16335832), (2.3999596, 0.15882535, 0.8002651), (2.3999596, 0.15882534, 1.4371719), (2.3999596, 0.15882534, 1.4408402), (2.3999596, 0.15451507, 1.4408402), (2.3999596, 0.006479934, 1.4408402), (2.3999596, 0, 1.4408402), (2.3999615, 0, 1.4458754), (2.4, 0, 1.5938315), (2.4, 0, 1.6000427), (2.4, 0.0117769465, 1.6000427), (2.4, 0.27258798, 1.6000427), (2.4, 0.32, 1.6000427), (2.4, 0.32, 1.5551736), (1.6, 0.32, 0.8003863), (1.6, 0.32000002, 0.045599043), (1.6, 0.32000002, 1.1920929e-7), (1.6, 0.272588, 1.1920929e-7), (1.6, 0.0117769465, 1.1920929e-7), (1.6, 0, 1.1920929e-7), (1.6, 0, 0.0062111914), (1.6, 2.9802322e-8, 0.15416732), (1.6, 2.9802322e-8, 0.15920249), (1.6, 0.0064799637, 0.15920249), (1.6, 0.1545151, 0.15920249), (1.6, 0.15882537, 0.15920249), (1.6, 0.15882537, 0.16335832), (1.6, 0.15882535, 0.8002651), (1.6, 0.15882534, 1.4371719), (1.6, 0.15882534, 1.4408402), (1.6, 0.15451507, 1.4408402), (1.6, 0.006479934, 1.4408402), (1.6, 0, 1.4408402), (1.6, 0, 1.4458754), (1.6, 0, 1.5938315), (1.6, 0, 1.6000427), (1.6, 0.0117769465, 1.6000427), (1.6, 0.27258798, 1.6000427), (1.6, 0.32, 1.6000427), (1.6, 0.32, 1.5551736), (1.8520017, 0, 0.5479983), (1.6, 0, 0.44361582), (1.3479984, 0, 0.5479983), (1.2436159, 0, 0.8), (1.3479984, 0, 1.0520017), (1.6, 0, 1.1563842), (1.8520017, 0, 1.0520017), (1.9563842, 0, 0.8), (1.8520017, 0.15882534, 0.5479983), (1.6, 0.15882534, 0.44361582), (1.3479984, 0.15882534, 0.5479983), (1.2436159, 0.15882534, 0.8), (1.3479984, 0.15882534, 1.0520017), (1.6, 0.15882534, 1.1563842), (1.8520017, 0.15882534, 1.0520017), (1.9563842, 0.15882534, 0.8), (1.7869935, 0, 0.61300665), (1.6, 0, 0.5355515), (1.4130067, 0, 0.61300665), (1.3355515, 0, 0.8), (1.4130067, 0, 0.98699343), (1.6, 0, 1.0644486), (1.7869935, 0, 0.98699343), (1.8644485, 0, 0.8), (1.7869935, 0.15882534, 0.61300665), (1.6, 0.15882534, 0.5355515), (1.4130067, 0.15882534, 0.61300665), (1.3355515, 0.15882534, 0.8), (1.4130067, 0.15882534, 0.98699343), (1.6, 0.15882534, 1.0644486), (1.7869935, 0.15882534, 0.98699343), (1.8644485, 0.15882534, 0.8), (1.8520017, 0.0075166663, 1.0520017), (1.6, 0.0075166663, 1.1563842), (1.3479984, 0.0075166663, 1.0520017), (1.2436159, 0.0075166663, 0.8), (1.3479984, 0.0075166663, 0.5479983), (1.6, 0.0075166663, 0.44361582), (1.8520017, 0.0075166663, 0.5479983), (1.9563842, 0.0075166663, 0.8), (1.8383877, 0, 1.0383878), (1.9371312, 0, 0.8), (1.8383877, 0, 0.5616123), (1.6, 0, 0.46286893), (1.3616123, 0, 0.5616123), (1.2628689, 0, 0.8), (1.3616123, 0, 1.0383878), (1.6, 0, 1.1371312), (1.800478, 0, 1.000478), (1.8835187, 0, 0.8), (1.800478, 0, 0.599522), (1.6, 0, 0.5164813), (1.3995221, 0, 0.599522), (1.3164814, 0, 0.8), (1.3995221, 0, 1.000478), (1.6, 0, 1.0835187), (1.7869935, 0.012202854, 0.98699343), (1.8644485, 0.012202854, 0.8), (1.7869935, 0.012202854, 0.61300665), (1.6, 0.012202854, 0.5355515), (1.4130067, 0.012202854, 0.61300665), (1.3355515, 0.012202854, 0.8), (1.4130067, 0.012202854, 0.98699343), (1.6, 0.012202854, 1.0644486), (0.5876447, 0.32000014, 0.2123553), (0.4, 0.32000014, 0.13463032), (0.2123553, 0.32000014, 0.2123553), (0.13463032, 0.32000014, 0.4), (0.2123553, 0.32000014, 0.5876447), (0.4, 0.32000014, 0.6653697), (0.5876447, 0.32000014, 0.5876447), (0.66536975, 0.32000014, 0.4), (0.5876447, 0.48082992, 0.2123553), (0.4, 0.48082992, 0.13463032), (0.2123553, 0.48082992, 0.2123553), (0.13463032, 0.48082992, 0.4), (0.2123553, 0.48082992, 0.5876447), (0.4, 0.48082992, 0.6653697), (0.5876447, 0.48082992, 0.5876447), (0.66536975, 0.48082992, 0.4), (0.5679039, 0.48082992, 0.23209617), (0.4, 0.48082992, 0.16254812), (0.23209617, 0.48082992, 0.23209617), (0.16254814, 0.48082992, 0.4), (0.23209617, 0.48082992, 0.5679038), (0.4, 0.48082992, 0.6374518), (0.5679039, 0.48082992, 0.5679038), (0.63745195, 0.48082992, 0.4), (0.40000004, 0.48082992, 0.4), (0.2123553, 0.4642254, 0.5876447), (0.13463032, 0.4642254, 0.4), (0.2123553, 0.4642254, 0.2123553), (0.4, 0.4642254, 0.13463032), (0.5876447, 0.4642254, 0.2123553), (0.66536975, 0.4642254, 0.4), (0.5876447, 0.4642254, 0.5876447), (0.4, 0.4642254, 0.6653697), (1.3876448, 0.32000014, 0.2123553), (1.2, 0.32000014, 0.13463032), (1.0123553, 0.32000014, 0.2123553), (0.93463033, 0.32000014, 0.4), (1.0123553, 0.32000014, 0.5876447), (1.2, 0.32000014, 0.6653697), (1.3876448, 0.32000014, 0.5876447), (1.4653697, 0.32000014, 0.4), (1.3876448, 0.48082992, 0.2123553), (1.2, 0.48082992, 0.13463032), (1.0123553, 0.48082992, 0.2123553), (0.93463033, 0.48082992, 0.4), (1.0123553, 0.48082992, 0.5876447), (1.2, 0.48082992, 0.6653697), (1.3876448, 0.48082992, 0.5876447), (1.4653697, 0.48082992, 0.4), (1.367904, 0.48082992, 0.23209617), (1.2, 0.48082992, 0.16254812), (1.0320961, 0.48082992, 0.23209617), (0.96254814, 0.48082992, 0.4), (1.0320961, 0.48082992, 0.5679038), (1.2, 0.48082992, 0.6374518), (1.367904, 0.48082992, 0.5679038), (1.437452, 0.48082992, 0.4), (1.2, 0.48082992, 0.4), (1.0123553, 0.4642254, 0.5876447), (0.93463033, 0.4642254, 0.4), (1.0123553, 0.4642254, 0.2123553), (1.2, 0.4642254, 0.13463032), (1.3876448, 0.4642254, 0.2123553), (1.4653697, 0.4642254, 0.4), (1.3876448, 0.4642254, 0.5876447), (1.2, 0.4642254, 0.6653697), (0.5876447, 0.32000014, 1.0123553), (0.4, 0.32000014, 0.93463033), (0.2123553, 0.32000014, 1.0123553), (0.13463032, 0.32000014, 1.2), (0.2123553, 0.32000014, 1.3876448), (0.4, 0.32000014, 1.4653697), (0.5876447, 0.32000014, 1.3876448), (0.66536975, 0.32000014, 1.2), (0.5876447, 0.48082992, 1.0123553), (0.4, 0.48082992, 0.93463033), (0.2123553, 0.48082992, 1.0123553), (0.13463032, 0.48082992, 1.2), (0.2123553, 0.48082992, 1.3876448), (0.4, 0.48082992, 1.4653697), (0.5876447, 0.48082992, 1.3876448), (0.66536975, 0.48082992, 1.2), (0.5679039, 0.48082992, 1.0320961), (0.4, 0.48082992, 0.96254814), (0.23209617, 0.48082992, 1.0320961), (0.16254814, 0.48082992, 1.2), (0.23209617, 0.48082992, 1.3679038), (0.4, 0.48082992, 1.4374518), (0.5679039, 0.48082992, 1.3679038), (0.63745195, 0.48082992, 1.2), (0.40000004, 0.48082992, 1.2), (0.2123553, 0.4642254, 1.3876448), (0.13463032, 0.4642254, 1.2), (0.2123553, 0.4642254, 1.0123553), (0.4, 0.4642254, 0.93463033), (0.5876447, 0.4642254, 1.0123553), (0.66536975, 0.4642254, 1.2), (0.5876447, 0.4642254, 1.3876448), (0.4, 0.4642254, 1.4653697), (1.3876448, 0.32000014, 1.0123553), (1.2, 0.32000014, 0.93463033), (1.0123553, 0.32000014, 1.0123553), (0.93463033, 0.32000014, 1.2), (1.0123553, 0.32000014, 1.3876448), (1.2, 0.32000014, 1.4653697), (1.3876448, 0.32000014, 1.3876448), (1.4653697, 0.32000014, 1.2), (1.3876448, 0.48082992, 1.0123553), (1.2, 0.48082992, 0.93463033), (1.0123553, 0.48082992, 1.0123553), (0.93463033, 0.48082992, 1.2), (1.0123553, 0.48082992, 1.3876448), (1.2, 0.48082992, 1.4653697), (1.3876448, 0.48082992, 1.3876448), (1.4653697, 0.48082992, 1.2), (1.367904, 0.48082992, 1.0320961), (1.2, 0.48082992, 0.96254814), (1.0320961, 0.48082992, 1.0320961), (0.96254814, 0.48082992, 1.2), (1.0320961, 0.48082992, 1.3679038), (1.2, 0.48082992, 1.4374518), (1.367904, 0.48082992, 1.3679038), (1.437452, 0.48082992, 1.2), (1.2, 0.48082992, 1.2), (1.0123553, 0.4642254, 1.3876448), (0.93463033, 0.4642254, 1.2), (1.0123553, 0.4642254, 1.0123553), (1.2, 0.4642254, 0.93463033), (1.3876448, 0.4642254, 1.0123553), (1.4653697, 0.4642254, 1.2), (1.3876448, 0.4642254, 1.3876448), (1.2, 0.4642254, 1.4653697), (2.1876447, 0.32000014, 0.2123553), (2, 0.32000014, 0.13463032), (1.8123553, 0.32000014, 0.2123553), (1.7346303, 0.32000014, 0.4), (1.8123553, 0.32000014, 0.5876447), (2, 0.32000014, 0.6653697), (2.1876447, 0.32000014, 0.5876447), (2.26537, 0.32000014, 0.4), (2.1876447, 0.48082992, 0.2123553), (2, 0.48082992, 0.13463032), (1.8123553, 0.48082992, 0.2123553), (1.7346303, 0.48082992, 0.4), (1.8123553, 0.48082992, 0.5876447), (2, 0.48082992, 0.6653697), (2.1876447, 0.48082992, 0.5876447), (2.26537, 0.48082992, 0.4), (2.167904, 0.48082992, 0.23209617), (2, 0.48082992, 0.16254812), (1.8320962, 0.48082992, 0.23209617), (1.7625482, 0.48082992, 0.4), (1.8320962, 0.48082992, 0.5679038), (2, 0.48082992, 0.6374518), (2.167904, 0.48082992, 0.5679038), (2.237452, 0.48082992, 0.4), (2, 0.48082992, 0.4), (1.8123553, 0.4642254, 0.5876447), (1.7346303, 0.4642254, 0.4), (1.8123553, 0.4642254, 0.2123553), (2, 0.4642254, 0.13463032), (2.1876447, 0.4642254, 0.2123553), (2.26537, 0.4642254, 0.4), (2.1876447, 0.4642254, 0.5876447), (2, 0.4642254, 0.6653697), (2.1876447, 0.32000014, 1.0123553), (2, 0.32000014, 0.93463033), (1.8123553, 0.32000014, 1.0123553), (1.7346303, 0.32000014, 1.2), (1.8123553, 0.32000014, 1.3876448), (2, 0.32000014, 1.4653697), (2.1876447, 0.32000014, 1.3876448), (2.26537, 0.32000014, 1.2), (2.1876447, 0.48082992, 1.0123553), (2, 0.48082992, 0.93463033), (1.8123553, 0.48082992, 1.0123553), (1.7346303, 0.48082992, 1.2), (1.8123553, 0.48082992, 1.3876448), (2, 0.48082992, 1.4653697), (2.1876447, 0.48082992, 1.3876448), (2.26537, 0.48082992, 1.2), (2.167904, 0.48082992, 1.0320961), (2, 0.48082992, 0.96254814), (1.8320962, 0.48082992, 1.0320961), (1.7625482, 0.48082992, 1.2), (1.8320962, 0.48082992, 1.3679038), (2, 0.48082992, 1.4374518), (2.167904, 0.48082992, 1.3679038), (2.237452, 0.48082992, 1.2), (2, 0.48082992, 1.2), (1.8123553, 0.4642254, 1.3876448), (1.7346303, 0.4642254, 1.2), (1.8123553, 0.4642254, 1.0123553), (2, 0.4642254, 0.93463033), (2.1876447, 0.4642254, 1.0123553), (2.26537, 0.4642254, 1.2), (2.1876447, 0.4642254, 1.3876448), (2, 0.4642254, 1.4653697), (2.6517801, 0, 0.5479983), (2.3997784, 0, 0.44361582), (2.1477766, 0, 0.5479983), (2.043394, 0, 0.8), (2.1477766, 0, 1.0520017), (2.3997784, 0, 1.1563842), (2.6517801, 0, 1.0520017), (2.7561626, 0, 0.8), (2.6517801, 0.15882534, 0.5479983), (2.3997784, 0.15882534, 0.44361582), (2.1477766, 0.15882534, 0.5479983), (2.043394, 0.15882534, 0.8), (2.1477766, 0.15882534, 1.0520017), (2.3997784, 0.15882534, 1.1563842), (2.6517801, 0.15882534, 1.0520017), (2.7561626, 0.15882534, 0.8), (2.5867717, 0, 0.61300665), (2.3997784, 0, 0.5355515), (2.212785, 0, 0.61300665), (2.1353297, 0, 0.8), (2.212785, 0, 0.98699343), (2.3997784, 0, 1.0644486), (2.5867717, 0, 0.98699343), (2.664227, 0, 0.8), (2.5867717, 0.15882534, 0.61300665), (2.3997784, 0.15882534, 0.5355515), (2.212785, 0.15882534, 0.61300665), (2.1353297, 0.15882534, 0.8), (2.212785, 0.15882534, 0.98699343), (2.3997784, 0.15882534, 1.0644486), (2.5867717, 0.15882534, 0.98699343), (2.664227, 0.15882534, 0.8), (2.6517801, 0.0075166663, 1.0520017), (2.3997784, 0.0075166663, 1.1563842), (2.1477766, 0.0075166663, 1.0520017), (2.043394, 0.0075166663, 0.8), (2.1477766, 0.0075166663, 0.5479983), (2.3997784, 0.0075166663, 0.44361582), (2.6517801, 0.0075166663, 0.5479983), (2.7561626, 0.0075166663, 0.8), (2.638166, 0, 1.0383878), (2.7369094, 0, 0.8), (2.638166, 0, 0.5616123), (2.3997784, 0, 0.46286893), (2.1613905, 0, 0.5616123), (2.0626473, 0, 0.8), (2.1613905, 0, 1.0383878), (2.3997784, 0, 1.1371312), (2.6002564, 0, 1.000478), (2.6832972, 0, 0.8), (2.6002564, 0, 0.599522), (2.3997784, 0, 0.5164813), (2.1993003, 0, 0.599522), (2.1162596, 0, 0.8), (2.1993003, 0, 1.000478), (2.3997784, 0, 1.0835187), (2.5867717, 0.012202854, 0.98699343), (2.664227, 0.012202854, 0.8), (2.5867717, 0.012202854, 0.61300665), (2.3997784, 0.012202854, 0.5355515), (2.212785, 0.012202854, 0.61300665), (2.1353297, 0.012202854, 0.8), (2.212785, 0.012202854, 0.98699343), (2.3997784, 0.012202854, 1.0644486), (3.9997783, 0.32, 0.8003863), (3.9997783, 0.32000002, 0.045599043), (3.9997783, 0.32000002, 1.1920929e-7), (3.9997783, 0.272588, 1.1920929e-7), (3.9997783, 0.0117769465, 1.1920929e-7), (3.9997783, 0, 1.1920929e-7), (3.9997783, 9.098986e-25, 0.0062111914), (3.9997783, 2.9802322e-8, 0.15416732), (3.9997783, 2.9802322e-8, 0.15920249), (3.9997783, 0.0064799637, 0.15920249), (3.9997783, 0.1545151, 0.15920249), (3.9997783, 0.15882537, 0.15920249), (3.9997783, 0.15882537, 0.16335832), (3.9997783, 0.15882535, 0.8002651), (3.9997783, 0.15882534, 1.4371719), (3.9997783, 0.15882534, 1.4408402), (3.9997783, 0.15451507, 1.4408402), (3.9997783, 0.006479934, 1.4408402), (3.9997783, 0, 1.4408402), (3.9997783, 0, 1.4458754), (3.9997783, 0, 1.5938315), (3.9997783, 0, 1.6000427), (3.9997783, 0.0117769465, 1.6000427), (3.9997783, 0.27258798, 1.6000427), (3.9997783, 0.32, 1.6000427), (3.9997783, 0.32, 1.5551736), (3.1997783, 0.32, 0.8003863), (3.1997783, 0.32000002, 0.045599043), (3.1997783, 0.32000002, 1.1920929e-7), (3.1997783, 0.272588, 1.1920929e-7), (3.1997783, 0.0117769465, 1.1920929e-7), (3.1997783, 0, 1.1920929e-7), (3.1997783, 0, 0.0062111914), (3.1997783, 2.9802322e-8, 0.15416732), (3.1997783, 2.9802322e-8, 0.15920249), (3.1997783, 0.0064799637, 0.15920249), (3.1997783, 0.1545151, 0.15920249), (3.1997783, 0.15882537, 0.15920249), (3.1997783, 0.15882537, 0.16335832), (3.1997783, 0.15882535, 0.8002651), (3.1997783, 0.15882534, 1.4371719), (3.1997783, 0.15882534, 1.4408402), (3.1997783, 0.15451507, 1.4408402), (3.1997783, 0.006479934, 1.4408402), (3.1997783, 0, 1.4408402), (3.1997783, 0, 1.4458754), (3.1997783, 0, 1.5938315), (3.1997783, 0, 1.6000427), (3.1997783, 0.0117769465, 1.6000427), (3.1997783, 0.27258798, 1.6000427), (3.1997783, 0.32, 1.6000427), (3.1997783, 0.32, 1.5551736), (3.4517798, 0, 0.5479983), (3.1997783, 0, 0.44361582), (2.9477768, 0, 0.5479983), (2.8433943, 0, 0.8), (2.9477768, 0, 1.0520017), (3.1997783, 0, 1.1563842), (3.4517798, 0, 1.0520017), (3.5561624, 0, 0.8), (3.4517798, 0.15882534, 0.5479983), (3.1997783, 0.15882534, 0.44361582), (2.9477768, 0.15882534, 0.5479983), (2.8433943, 0.15882534, 0.8), (2.9477768, 0.15882534, 1.0520017), (3.1997783, 0.15882534, 1.1563842), (3.4517798, 0.15882534, 1.0520017), (3.5561624, 0.15882534, 0.8), (3.3867717, 0, 0.61300665), (3.1997783, 0, 0.5355515), (3.012785, 0, 0.61300665), (2.93533, 0, 0.8), (3.012785, 0, 0.98699343), (3.1997783, 0, 1.0644486), (3.3867717, 0, 0.98699343), (3.4642267, 0, 0.8), (3.3867717, 0.15882534, 0.61300665), (3.1997783, 0.15882534, 0.5355515), (3.012785, 0.15882534, 0.61300665), (2.93533, 0.15882534, 0.8), (3.012785, 0.15882534, 0.98699343), (3.1997783, 0.15882534, 1.0644486), (3.3867717, 0.15882534, 0.98699343), (3.4642267, 0.15882534, 0.8), (3.4517798, 0.0075166663, 1.0520017), (3.1997783, 0.0075166663, 1.1563842), (2.9477768, 0.0075166663, 1.0520017), (2.8433943, 0.0075166663, 0.8), (2.9477768, 0.0075166663, 0.5479983), (3.1997783, 0.0075166663, 0.44361582), (3.4517798, 0.0075166663, 0.5479983), (3.5561624, 0.0075166663, 0.8), (3.4381661, 0, 1.0383878), (3.5369096, 0, 0.8), (3.4381661, 0, 0.5616123), (3.1997783, 0, 0.46286893), (2.9613905, 0, 0.5616123), (2.862647, 0, 0.8), (2.9613905, 0, 1.0383878), (3.1997783, 0, 1.1371312), (3.4002562, 0, 1.000478), (3.4832969, 0, 0.8), (3.4002562, 0, 0.599522), (3.1997783, 0, 0.5164813), (2.9993005, 0, 0.599522), (2.9162598, 0, 0.8), (2.9993005, 0, 1.000478), (3.1997783, 0, 1.0835187), (3.3867717, 0.012202854, 0.98699343), (3.4642267, 0.012202854, 0.8), (3.3867717, 0.012202854, 0.61300665), (3.1997783, 0.012202854, 0.5355515), (3.012785, 0.012202854, 0.61300665), (2.93533, 0.012202854, 0.8), (3.012785, 0.012202854, 0.98699343), (3.1997783, 0.012202854, 1.0644486), (2.987423, 0.32000014, 0.2123553), (2.7997785, 0.32000014, 0.13463032), (2.6121335, 0.32000014, 0.2123553), (2.5344086, 0.32000014, 0.4), (2.6121335, 0.32000014, 0.5876447), (2.7997785, 0.32000014, 0.6653697), (2.987423, 0.32000014, 0.5876447), (3.0651479, 0.32000014, 0.4), (2.987423, 0.48082992, 0.2123553), (2.7997785, 0.48082992, 0.13463032), (2.6121335, 0.48082992, 0.2123553), (2.5344086, 0.48082992, 0.4), (2.6121335, 0.48082992, 0.5876447), (2.7997785, 0.48082992, 0.6653697), (2.987423, 0.48082992, 0.5876447), (3.0651479, 0.48082992, 0.4), (2.9676824, 0.48082992, 0.23209617), (2.7997785, 0.48082992, 0.16254812), (2.6318746, 0.48082992, 0.23209617), (2.5623264, 0.48082992, 0.4), (2.6318746, 0.48082992, 0.5679038), (2.7997785, 0.48082992, 0.6374518), (2.9676824, 0.48082992, 0.5679038), (3.0372303, 0.48082992, 0.4), (2.7997785, 0.48082992, 0.4), (2.6121335, 0.4642254, 0.5876447), (2.5344086, 0.4642254, 0.4), (2.6121335, 0.4642254, 0.2123553), (2.7997785, 0.4642254, 0.13463032), (2.987423, 0.4642254, 0.2123553), (3.0651479, 0.4642254, 0.4), (2.987423, 0.4642254, 0.5876447), (2.7997785, 0.4642254, 0.6653697), (2.987423, 0.32000014, 1.0123553), (2.7997785, 0.32000014, 0.93463033), (2.6121335, 0.32000014, 1.0123553), (2.5344086, 0.32000014, 1.2), (2.6121335, 0.32000014, 1.3876448), (2.7997785, 0.32000014, 1.4653697), (2.987423, 0.32000014, 1.3876448), (3.0651479, 0.32000014, 1.2), (2.987423, 0.48082992, 1.0123553), (2.7997785, 0.48082992, 0.93463033), (2.6121335, 0.48082992, 1.0123553), (2.5344086, 0.48082992, 1.2), (2.6121335, 0.48082992, 1.3876448), (2.7997785, 0.48082992, 1.4653697), (2.987423, 0.48082992, 1.3876448), (3.0651479, 0.48082992, 1.2), (2.9676824, 0.48082992, 1.0320961), (2.7997785, 0.48082992, 0.96254814), (2.6318746, 0.48082992, 1.0320961), (2.5623264, 0.48082992, 1.2), (2.6318746, 0.48082992, 1.3679038), (2.7997785, 0.48082992, 1.4374518), (2.9676824, 0.48082992, 1.3679038), (3.0372303, 0.48082992, 1.2), (2.7997785, 0.48082992, 1.2), (2.6121335, 0.4642254, 1.3876448), (2.5344086, 0.4642254, 1.2), (2.6121335, 0.4642254, 1.0123553), (2.7997785, 0.4642254, 0.93463033), (2.987423, 0.4642254, 1.0123553), (3.0651479, 0.4642254, 1.2), (2.987423, 0.4642254, 1.3876448), (2.7997785, 0.4642254, 1.4653697), (3.7874231, 0.32000014, 0.2123553), (3.5997782, 0.32000014, 0.13463032), (3.4121337, 0.32000014, 0.2123553), (3.3344088, 0.32000014, 0.4), (3.4121337, 0.32000014, 0.5876447), (3.5997782, 0.32000014, 0.6653697), (3.7874231, 0.32000014, 0.5876447), (3.865148, 0.32000014, 0.4), (3.7874231, 0.48082992, 0.2123553), (3.5997782, 0.48082992, 0.13463032), (3.4121337, 0.48082992, 0.2123553), (3.3344088, 0.48082992, 0.4), (3.4121337, 0.48082992, 0.5876447), (3.5997782, 0.48082992, 0.6653697), (3.7874231, 0.48082992, 0.5876447), (3.865148, 0.48082992, 0.4), (3.767682, 0.48082992, 0.23209617), (3.5997782, 0.48082992, 0.16254812), (3.4318745, 0.48082992, 0.23209617), (3.3623266, 0.48082992, 0.4), (3.4318745, 0.48082992, 0.5679038), (3.5997782, 0.48082992, 0.6374518), (3.767682, 0.48082992, 0.5679038), (3.8372302, 0.48082992, 0.4), (3.5997782, 0.48082992, 0.4), (3.4121337, 0.4642254, 0.5876447), (3.3344088, 0.4642254, 0.4), (3.4121337, 0.4642254, 0.2123553), (3.5997782, 0.4642254, 0.13463032), (3.7874231, 0.4642254, 0.2123553), (3.865148, 0.4642254, 0.4), (3.7874231, 0.4642254, 0.5876447), (3.5997782, 0.4642254, 0.6653697), (3.7874231, 0.32000014, 1.0123553), (3.5997782, 0.32000014, 0.93463033), (3.4121337, 0.32000014, 1.0123553), (3.3344088, 0.32000014, 1.2), (3.4121337, 0.32000014, 1.3876448), (3.5997782, 0.32000014, 1.4653697), (3.7874231, 0.32000014, 1.3876448), (3.865148, 0.32000014, 1.2), (3.7874231, 0.48082992, 1.0123553), (3.5997782, 0.48082992, 0.93463033), (3.4121337, 0.48082992, 1.0123553), (3.3344088, 0.48082992, 1.2), (3.4121337, 0.48082992, 1.3876448), (3.5997782, 0.48082992, 1.4653697), (3.7874231, 0.48082992, 1.3876448), (3.865148, 0.48082992, 1.2), (3.767682, 0.48082992, 1.0320961), (3.5997782, 0.48082992, 0.96254814), (3.4318745, 0.48082992, 1.0320961), (3.3623266, 0.48082992, 1.2), (3.4318745, 0.48082992, 1.3679038), (3.5997782, 0.48082992, 1.4374518), (3.767682, 0.48082992, 1.3679038), (3.8372302, 0.48082992, 1.2), (3.5997782, 0.48082992, 1.2), (3.4121337, 0.4642254, 1.3876448), (3.3344088, 0.4642254, 1.2), (3.4121337, 0.4642254, 1.0123553), (3.5997782, 0.4642254, 0.93463033), (3.7874231, 0.4642254, 1.0123553), (3.865148, 0.4642254, 1.2), (3.7874231, 0.4642254, 1.3876448), (3.5997782, 0.4642254, 1.4653697), (4.587423, 0.32000014, 0.2123553), (4.3997784, 0.32000014, 0.13463032), (4.2121334, 0.32000014, 0.2123553), (4.1344085, 0.32000014, 0.4), (4.2121334, 0.32000014, 0.5876447), (4.3997784, 0.32000014, 0.6653697), (4.587423, 0.32000014, 0.5876447), (4.665148, 0.32000014, 0.4), (4.587423, 0.48082992, 0.2123553), (4.3997784, 0.48082992, 0.13463032), (4.2121334, 0.48082992, 0.2123553), (4.1344085, 0.48082992, 0.4), (4.2121334, 0.48082992, 0.5876447), (4.3997784, 0.48082992, 0.6653697), (4.587423, 0.48082992, 0.5876447), (4.665148, 0.48082992, 0.4), (4.5676823, 0.48082992, 0.23209617), (4.3997784, 0.48082992, 0.16254812), (4.2318745, 0.48082992, 0.23209617), (4.1623263, 0.48082992, 0.4), (4.2318745, 0.48082992, 0.5679038), (4.3997784, 0.48082992, 0.6374518), (4.5676823, 0.48082992, 0.5679038), (4.63723, 0.48082992, 0.4), (4.3997784, 0.48082992, 0.4), (4.2121334, 0.4642254, 0.5876447), (4.1344085, 0.4642254, 0.4), (4.2121334, 0.4642254, 0.2123553), (4.3997784, 0.4642254, 0.13463032), (4.587423, 0.4642254, 0.2123553), (4.665148, 0.4642254, 0.4), (4.587423, 0.4642254, 0.5876447), (4.3997784, 0.4642254, 0.6653697), (4.587423, 0.32000014, 1.0123553), (4.3997784, 0.32000014, 0.93463033), (4.2121334, 0.32000014, 1.0123553), (4.1344085, 0.32000014, 1.2), (4.2121334, 0.32000014, 1.3876448), (4.3997784, 0.32000014, 1.4653697), (4.587423, 0.32000014, 1.3876448), (4.665148, 0.32000014, 1.2), (4.587423, 0.48082992, 1.0123553), (4.3997784, 0.48082992, 0.93463033), (4.2121334, 0.48082992, 1.0123553), (4.1344085, 0.48082992, 1.2), (4.2121334, 0.48082992, 1.3876448), (4.3997784, 0.48082992, 1.4653697), (4.587423, 0.48082992, 1.3876448), (4.665148, 0.48082992, 1.2), (4.5676823, 0.48082992, 1.0320961), (4.3997784, 0.48082992, 0.96254814), (4.2318745, 0.48082992, 1.0320961), (4.1623263, 0.48082992, 1.2), (4.2318745, 0.48082992, 1.3679038), (4.3997784, 0.48082992, 1.4374518), (4.5676823, 0.48082992, 1.3679038), (4.63723, 0.48082992, 1.2), (4.3997784, 0.48082992, 1.2), (4.2121334, 0.4642254, 1.3876448), (4.1344085, 0.4642254, 1.2), (4.2121334, 0.4642254, 1.0123553), (4.3997784, 0.4642254, 0.93463033), (4.587423, 0.4642254, 1.0123553), (4.665148, 0.4642254, 1.2), (4.587423, 0.4642254, 1.3876448), (4.3997784, 0.4642254, 1.4653697), (4.25178, 1.4070002e-19, 0.5479983), (3.9997783, -9.775504e-21, 0.44361582), (3.7477765, 1.22090824e-20, 0.5479983), (3.643394, 5.979752e-20, 0.8), (3.7477765, -5.481948e-20, 1.0520017), (3.9997783, -2.9425368e-19, 1.1563842), (4.25178, -5.6429835e-20, 1.0520017), (4.3561625, 2.7849812e-19, 0.8), (4.25178, 0.15882534, 0.5479983), (3.9997783, 0.15882534, 0.44361582), (3.7477765, 0.15882534, 0.5479983), (3.643394, 0.15882534, 0.8), (3.7477765, 0.15882534, 1.0520017), (3.9997783, 0.15882534, 1.1563842), (4.25178, 0.15882534, 1.0520017), (4.3561625, 0.15882534, 0.8), (4.1867714, 3.0121007e-19, 0.61300665), (3.9997783, 1.3405496e-21, 0.5355515), (3.812785, -2.8291642e-19, 0.61300665), (3.7353296, -1.1872213e-19, 0.8), (3.812785, 1.5456273e-19, 0.98699343), (3.9997783, 7.21538e-20, 1.0644486), (4.1867714, 4.8091615e-20, 0.98699343), (4.264227, 3.0457822e-19, 0.8), (4.1867714, 0.15882534, 0.61300665), (3.9997783, 0.15882534, 0.5355515), (3.812785, 0.15882534, 0.61300665), (3.7353296, 0.15882534, 0.8), (3.812785, 0.15882534, 0.98699343), (3.9997783, 0.15882534, 1.0644486), (4.1867714, 0.15882534, 0.98699343), (4.264227, 0.15882534, 0.8), (4.25178, 0.0075166663, 1.0520017), (3.9997783, 0.0075166663, 1.1563842), (3.7477765, 0.0075166663, 1.0520017), (3.643394, 0.0075166663, 0.8), (3.7477765, 0.0075166663, 0.5479983), (3.9997783, 0.0075166663, 0.44361582), (4.25178, 0.0075166663, 0.5479983), (4.3561625, 0.0075166663, 0.8), (4.238166, 0, 1.0383878), (4.3369093, 0, 0.8), (4.238166, 0, 0.5616123), (3.9997783, 0, 0.46286893), (3.7613904, 0, 0.5616123), (3.6626472, 0, 0.8), (3.7613904, 0, 1.0383878), (3.9997783, 0, 1.1371312), (4.2002563, 0, 1.000478), (4.283297, 0, 0.8), (4.2002563, 0, 0.599522), (3.9997783, 0, 0.5164813), (3.7993002, 0, 0.599522), (3.7162595, 0, 0.8), (3.7993002, 0, 1.000478), (3.9997783, 0, 1.0835187), (4.1867714, 0.012202854, 0.98699343), (4.264227, 0.012202854, 0.8), (4.1867714, 0.012202854, 0.61300665), (3.9997783, 0.012202854, 0.5355515), (3.812785, 0.012202854, 0.61300665), (3.7353296, 0.012202854, 0.8), (3.812785, 0.012202854, 0.98699343), (3.9997783, 0.012202854, 1.0644486), (4.799618, 1.7347698e-19, 1.6000427), (4.799618, 0.32, 1.6000427), (4.799618, 0.32000002, 1.1920929e-7), (4.799618, 1.7346366e-19, 1.1920929e-7), (4.6404157, 2.9802322e-8, 0.15920249), (4.6404157, -1.6483329e-19, 1.4408402), (4.6404157, 0.15882537, 0.15920249), (4.6404157, 0.15882534, 1.4408402), (4.799618, 2.0594623e-19, 1.5551736), (4.6404157, -5.641235e-20, 1.4371719), (4.6404157, 0.15882534, 1.4371719), (4.799618, 0.32, 1.5551736), (4.7544084, 0, 1.6000427), (4.7544084, 0.32, 1.6000427), (4.7544084, 0.32, 1.5551736), (4.7544084, 0.32000002, 1.1920929e-7), (4.7544084, 0, 1.1920929e-7), (4.63652, 2.9802322e-8, 0.15920249), (4.63652, 0.15882537, 0.15920249), (4.63652, 0.15882534, 1.4371719), (4.63652, 0.15882534, 1.4408402), (4.63652, 0, 1.4408402), (4.6404157, 2.9802322e-8, 0.16335832), (4.6404157, 0.15882537, 0.16335832), (4.63652, 0.15882537, 0.16335832), (4.7544084, 0.32000002, 0.045599043), (4.799618, 0.32000002, 0.045599043), (4.799618, 1.7346366e-19, 0.045599043), (4.63652, 0.15451507, 1.4408402), (4.63652, 0.1545151, 0.15920249), (4.6404157, 0.1545151, 0.15920249), (4.6404157, 0.1545151, 0.16335832), (4.6404157, 0.15451507, 1.4371719), (4.6404157, 0.15451507, 1.4408402), (4.63652, 0.006479934, 1.4408402), (4.63652, 0.0064799637, 0.15920249), (4.6404157, 0.0064799637, 0.15920249), (4.6404157, 0.0064799637, 0.16335832), (4.6404157, 0.006479934, 1.4371719), (4.6404157, 0.006479934, 1.4408402), (4.641474, 0, 1.4458754), (4.641474, 2.9802322e-8, 0.15416732), (4.6454506, 2.9802322e-8, 0.15416732), (4.6454506, 2.9802322e-8, 0.15841003), (4.6454506, 2.9241111e-24, 1.4421303), (4.6454506, 0, 1.4458754), (4.793407, 1.9544147e-24, 1.5551736), (4.793407, 1.5343398e-23, 0.045599043), (4.793407, 2.1753532e-23, 0.0062111914), (4.7544084, 1.7183146e-24, 0.0062111914), (4.7544084, 0, 1.5938315), (4.793407, 0, 1.5938315), (4.799618, 0.0117769465, 1.5551736), (4.799618, 0.0117769465, 0.045599043), (4.799618, 0.0117769465, 1.1920929e-7), (4.7544084, 0.0117769465, 1.1920929e-7), (4.7544084, 0.0117769465, 1.6000427), (4.799618, 0.0117769465, 1.6000427), (4.799618, 0.27258798, 1.5551736), (4.799618, 0.272588, 0.045599043), (4.799618, 0.272588, 1.1920929e-7), (4.7544084, 0.272588, 1.1920929e-7), (4.7544084, 0.27258798, 1.6000427), (4.799618, 0.27258798, 1.6000427), (4.6454506, 1.4901161e-8, 0.8002702), (4.6404157, 1.4901161e-8, 0.80026513), (4.6404157, 0.0064799488, 0.80026513), (4.6404157, 0.15451509, 0.80026513), (4.6404157, 0.15882535, 0.80026513), (4.63652, 0.15882535, 0.80026513), (4.7544084, 0.32, 0.8003863), (4.799618, 0.32, 0.8003863), (4.799618, 0.272588, 0.8003863), (4.799618, 0.0117769465, 0.8003863), (4.799618, -8.602694e-20, 0.8003863), (4.793407, -3.7952926e-24, 0.8003863)]
                            float3 xformOp:translate:pivot = (2.399809, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x8_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x8_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (3.1996982, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_2x10_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_2x10_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (3.9995873, 0.24041496, 0.8000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_4x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_4x4_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.5999199, 0.24041496, 1.6000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Mesh "Wall_e_RIG_v001_plate_4x4_004_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(-0.000101327896, 0, 1.1920929e-7), (3.1999412, 0.48082992, 3.2000427)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [0, 1, 37, 38, 1, 2, 36, 37, 2, 3, 35, 36, 3, 4, 34, 35, 4, 5, 33, 34, 5, 6, 32, 33, 6, 7, 39, 32, 7, 0, 38, 39, 1, 0, 42, 43, 2, 1, 43, 44, 3, 2, 44, 45, 4, 3, 45, 46, 5, 4, 46, 47, 6, 5, 47, 40, 7, 6, 40, 41, 0, 7, 41, 42, 17, 16, 58, 59, 18, 17, 59, 60, 19, 18, 60, 61, 20, 19, 61, 62, 21, 20, 62, 63, 22, 21, 63, 56, 23, 22, 56, 57, 16, 23, 57, 58, 33, 32, 14, 13, 34, 33, 13, 12, 35, 34, 12, 11, 36, 35, 11, 10, 37, 36, 10, 9, 38, 37, 9, 8, 39, 38, 8, 15, 32, 39, 15, 14, 41, 40, 48, 49, 42, 41, 49, 50, 43, 42, 50, 51, 44, 43, 51, 52, 45, 44, 52, 53, 46, 45, 53, 54, 47, 46, 54, 55, 40, 47, 55, 48, 49, 48, 22, 23, 50, 49, 23, 16, 51, 50, 16, 17, 52, 51, 17, 18, 53, 52, 18, 19, 54, 53, 19, 20, 55, 54, 20, 21, 48, 55, 21, 22, 57, 56, 30, 31, 58, 57, 31, 24, 59, 58, 24, 25, 60, 59, 25, 26, 61, 60, 26, 27, 62, 61, 27, 28, 63, 62, 28, 29, 56, 63, 29, 30, 64, 65, 101, 102, 65, 66, 100, 101, 66, 67, 99, 100, 67, 68, 98, 99, 68, 69, 97, 98, 69, 70, 96, 97, 70, 71, 103, 96, 71, 64, 102, 103, 65, 64, 106, 107, 66, 65, 107, 108, 67, 66, 108, 109, 68, 67, 109, 110, 69, 68, 110, 111, 70, 69, 111, 104, 71, 70, 104, 105, 64, 71, 105, 106, 81, 80, 122, 123, 82, 81, 123, 124, 83, 82, 124, 125, 84, 83, 125, 126, 85, 84, 126, 127, 86, 85, 127, 120, 87, 86, 120, 121, 80, 87, 121, 122, 97, 96, 78, 77, 98, 97, 77, 76, 99, 98, 76, 75, 100, 99, 75, 74, 101, 100, 74, 73, 102, 101, 73, 72, 103, 102, 72, 79, 96, 103, 79, 78, 105, 104, 112, 113, 106, 105, 113, 114, 107, 106, 114, 115, 108, 107, 115, 116, 109, 108, 116, 117, 110, 109, 117, 118, 111, 110, 118, 119, 104, 111, 119, 112, 113, 112, 86, 87, 114, 113, 87, 80, 115, 114, 80, 81, 116, 115, 81, 82, 117, 116, 82, 83, 118, 117, 83, 84, 119, 118, 84, 85, 112, 119, 85, 86, 121, 120, 94, 95, 122, 121, 95, 88, 123, 122, 88, 89, 124, 123, 89, 90, 125, 124, 90, 91, 126, 125, 91, 92, 127, 126, 92, 93, 120, 127, 93, 94, 128, 129, 165, 166, 129, 130, 164, 165, 130, 131, 163, 164, 131, 132, 162, 163, 132, 133, 161, 162, 133, 134, 160, 161, 134, 135, 167, 160, 135, 128, 166, 167, 129, 128, 170, 171, 130, 129, 171, 172, 131, 130, 172, 173, 132, 131, 173, 174, 133, 132, 174, 175, 134, 133, 175, 168, 135, 134, 168, 169, 128, 135, 169, 170, 145, 144, 186, 187, 146, 145, 187, 188, 147, 146, 188, 189, 148, 147, 189, 190, 149, 148, 190, 191, 150, 149, 191, 184, 151, 150, 184, 185, 144, 151, 185, 186, 161, 160, 142, 141, 162, 161, 141, 140, 163, 162, 140, 139, 164, 163, 139, 138, 165, 164, 138, 137, 166, 165, 137, 136, 167, 166, 136, 143, 160, 167, 143, 142, 169, 168, 176, 177, 170, 169, 177, 178, 171, 170, 178, 179, 172, 171, 179, 180, 173, 172, 180, 181, 174, 173, 181, 182, 175, 174, 182, 183, 168, 175, 183, 176, 177, 176, 150, 151, 178, 177, 151, 144, 179, 178, 144, 145, 180, 179, 145, 146, 181, 180, 146, 147, 182, 181, 147, 148, 183, 182, 148, 149, 176, 183, 149, 150, 185, 184, 158, 159, 186, 185, 159, 152, 187, 186, 152, 153, 188, 187, 153, 154, 189, 188, 154, 155, 190, 189, 155, 156, 191, 190, 156, 157, 184, 191, 157, 158, 192, 193, 229, 230, 193, 194, 228, 229, 194, 195, 227, 228, 195, 196, 226, 227, 196, 197, 225, 226, 197, 198, 224, 225, 198, 199, 231, 224, 199, 192, 230, 231, 193, 192, 234, 235, 194, 193, 235, 236, 195, 194, 236, 237, 196, 195, 237, 238, 197, 196, 238, 239, 198, 197, 239, 232, 199, 198, 232, 233, 192, 199, 233, 234, 209, 208, 250, 251, 210, 209, 251, 252, 211, 210, 252, 253, 212, 211, 253, 254, 213, 212, 254, 255, 214, 213, 255, 248, 215, 214, 248, 249, 208, 215, 249, 250, 225, 224, 206, 205, 226, 225, 205, 204, 227, 226, 204, 203, 228, 227, 203, 202, 229, 228, 202, 201, 230, 229, 201, 200, 231, 230, 200, 207, 224, 231, 207, 206, 233, 232, 240, 241, 234, 233, 241, 242, 235, 234, 242, 243, 236, 235, 243, 244, 237, 236, 244, 245, 238, 237, 245, 246, 239, 238, 246, 247, 232, 239, 247, 240, 241, 240, 214, 215, 242, 241, 215, 208, 243, 242, 208, 209, 244, 243, 209, 210, 245, 244, 210, 211, 246, 245, 211, 212, 247, 246, 212, 213, 240, 247, 213, 214, 249, 248, 222, 223, 250, 249, 223, 216, 251, 250, 216, 217, 252, 251, 217, 218, 253, 252, 218, 219, 254, 253, 219, 220, 255, 254, 220, 221, 248, 255, 221, 222, 256, 257, 293, 294, 257, 258, 292, 293, 258, 259, 291, 292, 259, 260, 290, 291, 260, 261, 289, 290, 261, 262, 288, 289, 262, 263, 295, 288, 263, 256, 294, 295, 257, 256, 298, 299, 258, 257, 299, 300, 259, 258, 300, 301, 260, 259, 301, 302, 261, 260, 302, 303, 262, 261, 303, 296, 263, 262, 296, 297, 256, 263, 297, 298, 273, 272, 314, 315, 274, 273, 315, 316, 275, 274, 316, 317, 276, 275, 317, 318, 277, 276, 318, 319, 278, 277, 319, 312, 279, 278, 312, 313, 272, 279, 313, 314, 289, 288, 270, 269, 290, 289, 269, 268, 291, 290, 268, 267, 292, 291, 267, 266, 293, 292, 266, 265, 294, 293, 265, 264, 295, 294, 264, 271, 288, 295, 271, 270, 297, 296, 304, 305, 298, 297, 305, 306, 299, 298, 306, 307, 300, 299, 307, 308, 301, 300, 308, 309, 302, 301, 309, 310, 303, 302, 310, 311, 296, 303, 311, 304, 305, 304, 278, 279, 306, 305, 279, 272, 307, 306, 272, 273, 308, 307, 273, 274, 309, 308, 274, 275, 310, 309, 275, 276, 311, 310, 276, 277, 304, 311, 277, 278, 313, 312, 286, 287, 314, 313, 287, 280, 315, 314, 280, 281, 316, 315, 281, 282, 317, 316, 282, 283, 318, 317, 283, 284, 319, 318, 284, 285, 312, 319, 285, 286, 320, 321, 357, 358, 321, 322, 356, 357, 322, 323, 355, 356, 323, 324, 354, 355, 324, 325, 353, 354, 325, 326, 352, 353, 326, 327, 359, 352, 327, 320, 358, 359, 321, 320, 362, 363, 322, 321, 363, 364, 323, 322, 364, 365, 324, 323, 365, 366, 325, 324, 366, 367, 326, 325, 367, 360, 327, 326, 360, 361, 320, 327, 361, 362, 337, 336, 378, 379, 338, 337, 379, 380, 339, 338, 380, 381, 340, 339, 381, 382, 341, 340, 382, 383, 342, 341, 383, 376, 343, 342, 376, 377, 336, 343, 377, 378, 353, 352, 334, 333, 354, 353, 333, 332, 355, 354, 332, 331, 356, 355, 331, 330, 357, 356, 330, 329, 358, 357, 329, 328, 359, 358, 328, 335, 352, 359, 335, 334, 361, 360, 368, 369, 362, 361, 369, 370, 363, 362, 370, 371, 364, 363, 371, 372, 365, 364, 372, 373, 366, 365, 373, 374, 367, 366, 374, 375, 360, 367, 375, 368, 369, 368, 342, 343, 370, 369, 343, 336, 371, 370, 336, 337, 372, 371, 337, 338, 373, 372, 338, 339, 374, 373, 339, 340, 375, 374, 340, 341, 368, 375, 341, 342, 377, 376, 350, 351, 378, 377, 351, 344, 379, 378, 344, 345, 380, 379, 345, 346, 381, 380, 346, 347, 382, 381, 347, 348, 383, 382, 348, 349, 376, 383, 349, 350, 384, 385, 421, 422, 385, 386, 420, 421, 386, 387, 419, 420, 387, 388, 418, 419, 388, 389, 417, 418, 389, 390, 416, 417, 390, 391, 423, 416, 391, 384, 422, 423, 385, 384, 426, 427, 386, 385, 427, 428, 387, 386, 428, 429, 388, 387, 429, 430, 389, 388, 430, 431, 390, 389, 431, 424, 391, 390, 424, 425, 384, 391, 425, 426, 401, 400, 442, 443, 402, 401, 443, 444, 403, 402, 444, 445, 404, 403, 445, 446, 405, 404, 446, 447, 406, 405, 447, 440, 407, 406, 440, 441, 400, 407, 441, 442, 417, 416, 398, 397, 418, 417, 397, 396, 419, 418, 396, 395, 420, 419, 395, 394, 421, 420, 394, 393, 422, 421, 393, 392, 423, 422, 392, 399, 416, 423, 399, 398, 425, 424, 432, 433, 426, 425, 433, 434, 427, 426, 434, 435, 428, 427, 435, 436, 429, 428, 436, 437, 430, 429, 437, 438, 431, 430, 438, 439, 424, 431, 439, 432, 433, 432, 406, 407, 434, 433, 407, 400, 435, 434, 400, 401, 436, 435, 401, 402, 437, 436, 402, 403, 438, 437, 403, 404, 439, 438, 404, 405, 432, 439, 405, 406, 441, 440, 414, 415, 442, 441, 415, 408, 443, 442, 408, 409, 444, 443, 409, 410, 445, 444, 410, 411, 446, 445, 411, 412, 447, 446, 412, 413, 440, 447, 413, 414, 448, 449, 485, 486, 449, 450, 484, 485, 450, 451, 483, 484, 451, 452, 482, 483, 452, 453, 481, 482, 453, 454, 480, 481, 454, 455, 487, 480, 455, 448, 486, 487, 449, 448, 490, 491, 450, 449, 491, 492, 451, 450, 492, 493, 452, 451, 493, 494, 453, 452, 494, 495, 454, 453, 495, 488, 455, 454, 488, 489, 448, 455, 489, 490, 465, 464, 506, 507, 466, 465, 507, 508, 467, 466, 508, 509, 468, 467, 509, 510, 469, 468, 510, 511, 470, 469, 511, 504, 471, 470, 504, 505, 464, 471, 505, 506, 481, 480, 462, 461, 482, 481, 461, 460, 483, 482, 460, 459, 484, 483, 459, 458, 485, 484, 458, 457, 486, 485, 457, 456, 487, 486, 456, 463, 480, 487, 463, 462, 489, 488, 496, 497, 490, 489, 497, 498, 491, 490, 498, 499, 492, 491, 499, 500, 493, 492, 500, 501, 494, 493, 501, 502, 495, 494, 502, 503, 488, 495, 503, 496, 497, 496, 470, 471, 498, 497, 471, 464, 499, 498, 464, 465, 500, 499, 465, 466, 501, 500, 466, 467, 502, 501, 467, 468, 503, 502, 468, 469, 496, 503, 469, 470, 505, 504, 478, 479, 506, 505, 479, 472, 507, 506, 472, 473, 508, 507, 473, 474, 509, 508, 474, 475, 510, 509, 475, 476, 511, 510, 476, 477, 504, 511, 477, 478, 512, 513, 549, 550, 513, 514, 548, 549, 514, 515, 547, 548, 515, 516, 546, 547, 516, 517, 545, 546, 517, 518, 544, 545, 518, 519, 551, 544, 519, 512, 550, 551, 513, 512, 554, 555, 514, 513, 555, 556, 515, 514, 556, 557, 516, 515, 557, 558, 517, 516, 558, 559, 518, 517, 559, 552, 519, 518, 552, 553, 512, 519, 553, 554, 529, 528, 570, 571, 530, 529, 571, 572, 531, 530, 572, 573, 532, 531, 573, 574, 533, 532, 574, 575, 534, 533, 575, 568, 535, 534, 568, 569, 528, 535, 569, 570, 545, 544, 526, 525, 546, 545, 525, 524, 547, 546, 524, 523, 548, 547, 523, 522, 549, 548, 522, 521, 550, 549, 521, 520, 551, 550, 520, 527, 544, 551, 527, 526, 553, 552, 560, 561, 554, 553, 561, 562, 555, 554, 562, 563, 556, 555, 563, 564, 557, 556, 564, 565, 558, 557, 565, 566, 559, 558, 566, 567, 552, 559, 567, 560, 561, 560, 534, 535, 562, 561, 535, 528, 563, 562, 528, 529, 564, 563, 529, 530, 565, 564, 530, 531, 566, 565, 531, 532, 567, 566, 532, 533, 560, 567, 533, 534, 569, 568, 542, 543, 570, 569, 543, 536, 571, 570, 536, 537, 572, 571, 537, 538, 573, 572, 538, 539, 574, 573, 539, 540, 575, 574, 540, 541, 568, 575, 541, 542, 636, 637, 602, 578, 625, 601, 576, 624, 617, 618, 581, 600, 605, 606, 583, 599, 584, 577, 627, 622, 621, 620, 622, 627, 585, 620, 621, 580, 586, 608, 609, 582, 587, 598, 599, 583, 606, 607, 587, 583, 618, 619, 588, 581, 576, 589, 623, 624, 590, 635, 636, 578, 578, 602, 603, 590, 639, 634, 591, 579, 638, 639, 579, 593, 594, 593, 579, 591, 596, 595, 586, 582, 609, 604, 596, 582, 621, 616, 597, 580, 577, 592, 626, 627, 599, 598, 645, 646, 647, 605, 599, 646, 650, 617, 600, 649, 651, 640, 601, 625, 602, 637, 642, 643, 603, 602, 643, 644, 648, 611, 605, 647, 611, 612, 606, 605, 612, 613, 607, 606, 609, 608, 614, 615, 615, 610, 604, 609, 649, 600, 611, 648, 600, 581, 612, 611, 581, 588, 613, 612, 615, 614, 585, 580, 580, 597, 610, 615, 618, 624, 623, 619, 625, 624, 618, 617, 650, 651, 625, 617, 621, 627, 626, 616, 630, 629, 589, 576, 576, 601, 631, 630, 641, 631, 601, 640, 592, 577, 633, 632, 577, 584, 628, 633, 636, 635, 629, 630, 630, 631, 637, 636, 642, 637, 631, 641, 632, 633, 639, 638, 633, 628, 634, 639, 702, 641, 640, 701, 703, 642, 641, 702, 643, 642, 703, 704, 644, 643, 704, 705, 646, 645, 694, 695, 696, 647, 646, 695, 697, 648, 647, 696, 698, 649, 648, 697, 699, 650, 649, 698, 699, 700, 651, 650, 700, 701, 640, 651, 622, 620, 652, 677, 653, 652, 620, 585, 614, 654, 653, 585, 608, 655, 654, 614, 656, 655, 608, 586, 595, 657, 656, 586, 645, 658, 693, 694, 598, 659, 658, 645, 660, 659, 598, 587, 607, 661, 660, 587, 613, 662, 661, 607, 588, 663, 662, 613, 619, 664, 663, 588, 619, 623, 665, 664, 589, 666, 665, 623, 629, 667, 666, 589, 635, 668, 667, 629, 669, 668, 635, 590, 590, 603, 670, 669, 671, 670, 603, 644, 705, 692, 671, 644, 673, 672, 594, 591, 591, 634, 674, 673, 634, 628, 675, 674, 628, 584, 676, 675, 677, 676, 584, 622, 680, 679, 657, 595, 681, 680, 595, 596, 604, 682, 681, 596, 610, 683, 682, 604, 597, 684, 683, 610, 616, 685, 684, 597, 616, 626, 686, 685, 626, 592, 687, 686, 632, 688, 687, 592, 638, 689, 688, 632, 690, 689, 638, 593, 691, 690, 593, 594, 672, 678, 691, 594, 694, 693, 679, 680, 695, 694, 680, 681, 682, 696, 695, 681, 683, 697, 696, 682, 684, 698, 697, 683, 685, 699, 698, 684, 685, 686, 700, 699, 686, 687, 701, 700, 688, 702, 701, 687, 689, 703, 702, 688, 704, 703, 689, 690, 705, 704, 690, 691, 691, 678, 692, 705, 706, 707, 734, 735, 707, 708, 733, 734, 708, 709, 732, 733, 709, 710, 731, 732, 710, 711, 738, 731, 711, 712, 737, 738, 712, 713, 736, 737, 713, 706, 735, 736, 714, 715, 723, 722, 715, 716, 724, 723, 716, 717, 725, 724, 717, 718, 726, 725, 718, 719, 727, 726, 719, 720, 728, 727, 720, 721, 729, 728, 721, 714, 722, 729, 730, 723, 724, 725, 730, 725, 726, 727, 730, 727, 728, 729, 730, 729, 722, 723, 732, 731, 718, 717, 733, 732, 717, 716, 734, 733, 716, 715, 735, 734, 715, 714, 736, 735, 714, 721, 737, 736, 721, 720, 738, 737, 720, 719, 731, 738, 719, 718, 739, 740, 767, 768, 740, 741, 766, 767, 741, 742, 765, 766, 742, 743, 764, 765, 743, 744, 771, 764, 744, 745, 770, 771, 745, 746, 769, 770, 746, 739, 768, 769, 747, 748, 756, 755, 748, 749, 757, 756, 749, 750, 758, 757, 750, 751, 759, 758, 751, 752, 760, 759, 752, 753, 761, 760, 753, 754, 762, 761, 754, 747, 755, 762, 763, 756, 757, 758, 763, 758, 759, 760, 763, 760, 761, 762, 763, 762, 755, 756, 765, 764, 751, 750, 766, 765, 750, 749, 767, 766, 749, 748, 768, 767, 748, 747, 769, 768, 747, 754, 770, 769, 754, 753, 771, 770, 753, 752, 764, 771, 752, 751, 772, 773, 800, 801, 773, 774, 799, 800, 774, 775, 798, 799, 775, 776, 797, 798, 776, 777, 804, 797, 777, 778, 803, 804, 778, 779, 802, 803, 779, 772, 801, 802, 780, 781, 789, 788, 781, 782, 790, 789, 782, 783, 791, 790, 783, 784, 792, 791, 784, 785, 793, 792, 785, 786, 794, 793, 786, 787, 795, 794, 787, 780, 788, 795, 796, 789, 790, 791, 796, 791, 792, 793, 796, 793, 794, 795, 796, 795, 788, 789, 798, 797, 784, 783, 799, 798, 783, 782, 800, 799, 782, 781, 801, 800, 781, 780, 802, 801, 780, 787, 803, 802, 787, 786, 804, 803, 786, 785, 797, 804, 785, 784, 805, 806, 833, 834, 806, 807, 832, 833, 807, 808, 831, 832, 808, 809, 830, 831, 809, 810, 837, 830, 810, 811, 836, 837, 811, 812, 835, 836, 812, 805, 834, 835, 813, 814, 822, 821, 814, 815, 823, 822, 815, 816, 824, 823, 816, 817, 825, 824, 817, 818, 826, 825, 818, 819, 827, 826, 819, 820, 828, 827, 820, 813, 821, 828, 829, 822, 823, 824, 829, 824, 825, 826, 829, 826, 827, 828, 829, 828, 821, 822, 831, 830, 817, 816, 832, 831, 816, 815, 833, 832, 815, 814, 834, 833, 814, 813, 835, 834, 813, 820, 836, 835, 820, 819, 837, 836, 819, 818, 830, 837, 818, 817, 862, 675, 676, 861, 863, 674, 675, 862, 673, 674, 863, 864, 672, 673, 864, 865, 656, 657, 854, 855, 856, 655, 656, 855, 857, 654, 655, 856, 858, 653, 654, 857, 859, 652, 653, 858, 859, 860, 677, 652, 860, 861, 676, 677, 657, 679, 853, 854, 865, 852, 678, 672, 854, 853, 839, 840, 855, 854, 840, 841, 842, 856, 855, 841, 843, 857, 856, 842, 844, 858, 857, 843, 845, 859, 858, 844, 845, 846, 860, 859, 846, 847, 861, 860, 848, 862, 861, 847, 849, 863, 862, 848, 864, 863, 849, 850, 865, 864, 850, 851, 851, 838, 852, 865, 866, 867, 894, 895, 867, 868, 893, 894, 868, 869, 892, 893, 869, 870, 891, 892, 870, 871, 898, 891, 871, 872, 897, 898, 872, 873, 896, 897, 873, 866, 895, 896, 874, 875, 883, 882, 875, 876, 884, 883, 876, 877, 885, 884, 877, 878, 886, 885, 878, 879, 887, 886, 879, 880, 888, 887, 880, 881, 889, 888, 881, 874, 882, 889, 890, 883, 884, 885, 890, 885, 886, 887, 890, 887, 888, 889, 890, 889, 882, 883, 892, 891, 878, 877, 893, 892, 877, 876, 894, 893, 876, 875, 895, 894, 875, 874, 896, 895, 874, 881, 897, 896, 881, 880, 898, 897, 880, 879, 891, 898, 879, 878, 899, 900, 927, 928, 900, 901, 926, 927, 901, 902, 925, 926, 902, 903, 924, 925, 903, 904, 931, 924, 904, 905, 930, 931, 905, 906, 929, 930, 906, 899, 928, 929, 907, 908, 916, 915, 908, 909, 917, 916, 909, 910, 918, 917, 910, 911, 919, 918, 911, 912, 920, 919, 912, 913, 921, 920, 913, 914, 922, 921, 914, 907, 915, 922, 923, 916, 917, 918, 923, 918, 919, 920, 923, 920, 921, 922, 923, 922, 915, 916, 925, 924, 911, 910, 926, 925, 910, 909, 927, 926, 909, 908, 928, 927, 908, 907, 929, 928, 907, 914, 930, 929, 914, 913, 931, 930, 913, 912, 924, 931, 912, 911, 956, 933, 932, 955, 957, 934, 933, 956, 935, 934, 957, 958, 936, 935, 958, 959, 938, 937, 948, 949, 950, 939, 938, 949, 951, 940, 939, 950, 952, 941, 940, 951, 953, 942, 941, 952, 953, 954, 943, 942, 954, 955, 932, 943, 937, 944, 947, 948, 959, 946, 945, 936, 948, 947, 658, 659, 949, 948, 659, 660, 661, 950, 949, 660, 662, 951, 950, 661, 663, 952, 951, 662, 664, 953, 952, 663, 664, 665, 954, 953, 665, 666, 955, 954, 667, 956, 955, 666, 668, 957, 956, 667, 958, 957, 668, 669, 959, 958, 669, 670, 670, 671, 946, 959, 960, 961, 988, 989, 961, 962, 987, 988, 962, 963, 986, 987, 963, 964, 985, 986, 964, 965, 992, 985, 965, 966, 991, 992, 966, 967, 990, 991, 967, 960, 989, 990, 968, 969, 977, 976, 969, 970, 978, 977, 970, 971, 979, 978, 971, 972, 980, 979, 972, 973, 981, 980, 973, 974, 982, 981, 974, 975, 983, 982, 975, 968, 976, 983, 984, 977, 978, 979, 984, 979, 980, 981, 984, 981, 982, 983, 984, 983, 976, 977, 986, 985, 972, 971, 987, 986, 971, 970, 988, 987, 970, 969, 989, 988, 969, 968, 990, 989, 968, 975, 991, 990, 975, 974, 992, 991, 974, 973, 985, 992, 973, 972, 993, 994, 1021, 1022, 994, 995, 1020, 1021, 995, 996, 1019, 1020, 996, 997, 1018, 1019, 997, 998, 1025, 1018, 998, 999, 1024, 1025, 999, 1000, 1023, 1024, 1000, 993, 1022, 1023, 1001, 1002, 1010, 1009, 1002, 1003, 1011, 1010, 1003, 1004, 1012, 1011, 1004, 1005, 1013, 1012, 1005, 1006, 1014, 1013, 1006, 1007, 1015, 1014, 1007, 1008, 1016, 1015, 1008, 1001, 1009, 1016, 1017, 1010, 1011, 1012, 1017, 1012, 1013, 1014, 1017, 1014, 1015, 1016, 1017, 1016, 1009, 1010, 1019, 1018, 1005, 1004, 1020, 1019, 1004, 1003, 1021, 1020, 1003, 1002, 1022, 1021, 1002, 1001, 1023, 1022, 1001, 1008, 1024, 1023, 1008, 1007, 1025, 1024, 1007, 1006, 1018, 1025, 1006, 1005, 1044, 1051, 1052, 1026, 1026, 1052, 1087, 1088, 1032, 1049, 1050, 1041, 1046, 1084, 1085, 1027, 1088, 1089, 1044, 1026, 1028, 1053, 1075, 1076, 1029, 1047, 1072, 1073, 1043, 1028, 1076, 1077, 1068, 1067, 1076, 1075, 1071, 1070, 1073, 1072, 1067, 1068, 1048, 1030, 1070, 1071, 1038, 1031, 1066, 1067, 1030, 1042, 1055, 1056, 1049, 1032, 1058, 1059, 1039, 1033, 1054, 1055, 1032, 1041, 1034, 1045, 1046, 1027, 1086, 1034, 1027, 1085, 1074, 1035, 1029, 1073, 1070, 1069, 1074, 1073, 1036, 1069, 1070, 1031, 1037, 1057, 1058, 1033, 1040, 1037, 1033, 1039, 1071, 845, 844, 1038, 1039, 1059, 842, 841, 840, 1040, 1039, 841, 1041, 1050, 937, 938, 939, 1054, 1041, 938, 942, 1066, 1042, 941, 932, 1043, 1077, 943, 1044, 1089, 934, 935, 935, 936, 1051, 1044, 1046, 1045, 851, 850, 850, 849, 1084, 1046, 1072, 1047, 847, 846, 845, 1071, 1072, 846, 1068, 1096, 1097, 1048, 1049, 1056, 1099, 1100, 1050, 1049, 1100, 1101, 937, 1050, 1101, 944, 1051, 936, 945, 1090, 1052, 1051, 1090, 1091, 1087, 1052, 1091, 1092, 1075, 1053, 1094, 1095, 1095, 1096, 1068, 1075, 940, 1060, 1054, 939, 1060, 1061, 1055, 1054, 1061, 1062, 1056, 1055, 1099, 1056, 1062, 1098, 1058, 1057, 1063, 1064, 1064, 1065, 1059, 1058, 842, 1059, 1065, 843, 941, 1042, 1060, 940, 1042, 1030, 1061, 1060, 1030, 1048, 1062, 1061, 1098, 1062, 1048, 1097, 1064, 1063, 1036, 1031, 1031, 1038, 1065, 1064, 843, 1065, 1038, 844, 1077, 1076, 1067, 1066, 942, 943, 1077, 1066, 848, 847, 1047, 1078, 1079, 1078, 1047, 1029, 1035, 1080, 1079, 1029, 1053, 1081, 1093, 1094, 1082, 1081, 1053, 1028, 1028, 1043, 1083, 1082, 933, 1083, 1043, 932, 849, 848, 1078, 1084, 1085, 1084, 1078, 1079, 1080, 1086, 1085, 1079, 1081, 1087, 1092, 1093, 1088, 1087, 1081, 1082, 1082, 1083, 1089, 1088, 934, 1089, 1083, 933, 1090, 945, 1114, 1115, 1091, 1090, 1115, 1116, 1092, 1091, 1116, 1117, 1093, 1092, 1117, 1118, 1094, 1093, 1118, 1119, 1095, 1094, 1119, 1120, 1120, 1121, 1096, 1095, 1097, 1096, 1121, 1122, 1123, 1098, 1097, 1122, 1124, 1099, 1098, 1123, 1100, 1099, 1124, 1125, 1101, 1100, 1125, 1126, 944, 1101, 1126, 1127, 1102, 838, 851, 1045, 1103, 1102, 1045, 1034, 1104, 1103, 1034, 1086, 1105, 1104, 1086, 1080, 1106, 1105, 1080, 1035, 1107, 1106, 1035, 1074, 1074, 1069, 1108, 1107, 1109, 1108, 1069, 1036, 1063, 1110, 1109, 1036, 1057, 1111, 1110, 1063, 1112, 1111, 1057, 1037, 1113, 1112, 1037, 1040, 839, 1113, 1040, 840, 1115, 1114, 838, 1102, 1116, 1115, 1102, 1103, 1117, 1116, 1103, 1104, 1118, 1117, 1104, 1105, 1119, 1118, 1105, 1106, 1120, 1119, 1106, 1107, 1107, 1108, 1121, 1120, 1122, 1121, 1108, 1109, 1110, 1123, 1122, 1109, 1111, 1124, 1123, 1110, 1125, 1124, 1111, 1112, 1126, 1125, 1112, 1113, 1127, 1126, 1113, 839, 1128, 1129, 1156, 1157, 1129, 1130, 1155, 1156, 1130, 1131, 1154, 1155, 1131, 1132, 1153, 1154, 1132, 1133, 1160, 1153, 1133, 1134, 1159, 1160, 1134, 1135, 1158, 1159, 1135, 1128, 1157, 1158, 1136, 1137, 1145, 1144, 1137, 1138, 1146, 1145, 1138, 1139, 1147, 1146, 1139, 1140, 1148, 1147, 1140, 1141, 1149, 1148, 1141, 1142, 1150, 1149, 1142, 1143, 1151, 1150, 1143, 1136, 1144, 1151, 1152, 1145, 1146, 1147, 1152, 1147, 1148, 1149, 1152, 1149, 1150, 1151, 1152, 1151, 1144, 1145, 1154, 1153, 1140, 1139, 1155, 1154, 1139, 1138, 1156, 1155, 1138, 1137, 1157, 1156, 1137, 1136, 1158, 1157, 1136, 1143, 1159, 1158, 1143, 1142, 1160, 1159, 1142, 1141, 1153, 1160, 1141, 1140, 1161, 1162, 1189, 1190, 1162, 1163, 1188, 1189, 1163, 1164, 1187, 1188, 1164, 1165, 1186, 1187, 1165, 1166, 1193, 1186, 1166, 1167, 1192, 1193, 1167, 1168, 1191, 1192, 1168, 1161, 1190, 1191, 1169, 1170, 1178, 1177, 1170, 1171, 1179, 1178, 1171, 1172, 1180, 1179, 1172, 1173, 1181, 1180, 1173, 1174, 1182, 1181, 1174, 1175, 1183, 1182, 1175, 1176, 1184, 1183, 1176, 1169, 1177, 1184, 1185, 1178, 1179, 1180, 1185, 1180, 1181, 1182, 1185, 1182, 1183, 1184, 1185, 1184, 1177, 1178, 1187, 1186, 1173, 1172, 1188, 1187, 1172, 1171, 1189, 1188, 1171, 1170, 1190, 1189, 1170, 1169, 1191, 1190, 1169, 1176, 1192, 1191, 1176, 1175, 1193, 1192, 1175, 1174, 1186, 1193, 1174, 1173, 1194, 1195, 1222, 1223, 1195, 1196, 1221, 1222, 1196, 1197, 1220, 1221, 1197, 1198, 1219, 1220, 1198, 1199, 1226, 1219, 1199, 1200, 1225, 1226, 1200, 1201, 1224, 1225, 1201, 1194, 1223, 1224, 1202, 1203, 1211, 1210, 1203, 1204, 1212, 1211, 1204, 1205, 1213, 1212, 1205, 1206, 1214, 1213, 1206, 1207, 1215, 1214, 1207, 1208, 1216, 1215, 1208, 1209, 1217, 1216, 1209, 1202, 1210, 1217, 1218, 1211, 1212, 1213, 1218, 1213, 1214, 1215, 1218, 1215, 1216, 1217, 1218, 1217, 1210, 1211, 1220, 1219, 1206, 1205, 1221, 1220, 1205, 1204, 1222, 1221, 1204, 1203, 1223, 1222, 1203, 1202, 1224, 1223, 1202, 1209, 1225, 1224, 1209, 1208, 1226, 1225, 1208, 1207, 1219, 1226, 1207, 1206, 1227, 1228, 1255, 1256, 1228, 1229, 1254, 1255, 1229, 1230, 1253, 1254, 1230, 1231, 1252, 1253, 1231, 1232, 1259, 1252, 1232, 1233, 1258, 1259, 1233, 1234, 1257, 1258, 1234, 1227, 1256, 1257, 1235, 1236, 1244, 1243, 1236, 1237, 1245, 1244, 1237, 1238, 1246, 1245, 1238, 1239, 1247, 1246, 1239, 1240, 1248, 1247, 1240, 1241, 1249, 1248, 1241, 1242, 1250, 1249, 1242, 1235, 1243, 1250, 1251, 1244, 1245, 1246, 1251, 1246, 1247, 1248, 1251, 1248, 1249, 1250, 1251, 1250, 1243, 1244, 1253, 1252, 1239, 1238, 1254, 1253, 1238, 1237, 1255, 1254, 1237, 1236, 1256, 1255, 1236, 1235, 1257, 1256, 1235, 1242, 1258, 1257, 1242, 1241, 1259, 1258, 1241, 1240, 1252, 1259, 1240, 1239, 1260, 852, 838, 1114, 853, 1261, 1127, 839, 946, 1260, 1114, 945, 692, 1260, 946, 671, 692, 678, 852, 1260, 1261, 947, 944, 1127, 693, 1261, 853, 679, 693, 658, 947, 1261, 1262, 1263, 1290, 1291, 1263, 1264, 1289, 1290, 1264, 1265, 1288, 1289, 1265, 1266, 1287, 1288, 1266, 1267, 1294, 1287, 1267, 1268, 1293, 1294, 1268, 1269, 1292, 1293, 1269, 1262, 1291, 1292, 1270, 1271, 1279, 1278, 1271, 1272, 1280, 1279, 1272, 1273, 1281, 1280, 1273, 1274, 1282, 1281, 1274, 1275, 1283, 1282, 1275, 1276, 1284, 1283, 1276, 1277, 1285, 1284, 1277, 1270, 1278, 1285, 1286, 1279, 1280, 1281, 1286, 1281, 1282, 1283, 1286, 1283, 1284, 1285, 1286, 1285, 1278, 1279, 1288, 1287, 1274, 1273, 1289, 1288, 1273, 1272, 1290, 1289, 1272, 1271, 1291, 1290, 1271, 1270, 1292, 1291, 1270, 1277, 1293, 1292, 1277, 1276, 1294, 1293, 1276, 1275, 1287, 1294, 1275, 1274, 1295, 1296, 1323, 1324, 1296, 1297, 1322, 1323, 1297, 1298, 1321, 1322, 1298, 1299, 1320, 1321, 1299, 1300, 1327, 1320, 1300, 1301, 1326, 1327, 1301, 1302, 1325, 1326, 1302, 1295, 1324, 1325, 1303, 1304, 1312, 1311, 1304, 1305, 1313, 1312, 1305, 1306, 1314, 1313, 1306, 1307, 1315, 1314, 1307, 1308, 1316, 1315, 1308, 1309, 1317, 1316, 1309, 1310, 1318, 1317, 1310, 1303, 1311, 1318, 1319, 1312, 1313, 1314, 1319, 1314, 1315, 1316, 1319, 1316, 1317, 1318, 1319, 1318, 1311, 1312, 1321, 1320, 1307, 1306, 1322, 1321, 1306, 1305, 1323, 1322, 1305, 1304, 1324, 1323, 1304, 1303, 1325, 1324, 1303, 1310, 1326, 1325, 1310, 1309, 1327, 1326, 1309, 1308, 1320, 1327, 1308, 1307, 1328, 1329, 1356, 1357, 1329, 1330, 1355, 1356, 1330, 1331, 1354, 1355, 1331, 1332, 1353, 1354, 1332, 1333, 1360, 1353, 1333, 1334, 1359, 1360, 1334, 1335, 1358, 1359, 1335, 1328, 1357, 1358, 1336, 1337, 1345, 1344, 1337, 1338, 1346, 1345, 1338, 1339, 1347, 1346, 1339, 1340, 1348, 1347, 1340, 1341, 1349, 1348, 1341, 1342, 1350, 1349, 1342, 1343, 1351, 1350, 1343, 1336, 1344, 1351, 1352, 1345, 1346, 1347, 1352, 1347, 1348, 1349, 1352, 1349, 1350, 1351, 1352, 1351, 1344, 1345, 1354, 1353, 1340, 1339, 1355, 1354, 1339, 1338, 1356, 1355, 1338, 1337, 1357, 1356, 1337, 1336, 1358, 1357, 1336, 1343, 1359, 1358, 1343, 1342, 1360, 1359, 1342, 1341, 1353, 1360, 1341, 1340, 1361, 1362, 1389, 1390, 1362, 1363, 1388, 1389, 1363, 1364, 1387, 1388, 1364, 1365, 1386, 1387, 1365, 1366, 1393, 1386, 1366, 1367, 1392, 1393, 1367, 1368, 1391, 1392, 1368, 1361, 1390, 1391, 1369, 1370, 1378, 1377, 1370, 1371, 1379, 1378, 1371, 1372, 1380, 1379, 1372, 1373, 1381, 1380, 1373, 1374, 1382, 1381, 1374, 1375, 1383, 1382, 1375, 1376, 1384, 1383, 1376, 1369, 1377, 1384, 1385, 1378, 1379, 1380, 1385, 1380, 1381, 1382, 1385, 1382, 1383, 1384, 1385, 1384, 1377, 1378, 1387, 1386, 1373, 1372, 1388, 1387, 1372, 1371, 1389, 1388, 1371, 1370, 1390, 1389, 1370, 1369, 1391, 1390, 1369, 1376, 1392, 1391, 1376, 1375, 1393, 1392, 1375, 1374, 1386, 1393, 1374, 1373]
                            rel material:binding = </Cache1/mtl/initialShadingGroup>
                            point3f[] points = [(1.0520017, 0, 1.3479984), (0.8, 0, 1.2436159), (0.5479983, 0, 1.3479984), (0.44361582, 0, 1.6), (0.5479983, 0, 1.8520017), (0.8, 0, 1.9563842), (1.0520017, 0, 1.8520017), (1.1563842, 0, 1.6), (1.0520017, 0.15882534, 1.3479984), (0.8, 0.15882534, 1.2436159), (0.5479983, 0.15882534, 1.3479984), (0.44361582, 0.15882534, 1.6), (0.5479983, 0.15882534, 1.8520017), (0.8, 0.15882534, 1.9563842), (1.0520017, 0.15882534, 1.8520017), (1.1563842, 0.15882534, 1.6), (0.98699343, 0, 1.4130067), (0.8, 0, 1.3355515), (0.61300665, 0, 1.4130067), (0.5355515, 0, 1.6), (0.61300665, 0, 1.7869935), (0.8, 0, 1.8644485), (0.98699343, 0, 1.7869935), (1.0644486, 0, 1.6), (0.98699343, 0.15882534, 1.4130067), (0.8, 0.15882534, 1.3355515), (0.61300665, 0.15882534, 1.4130067), (0.5355515, 0.15882534, 1.6), (0.61300665, 0.15882534, 1.7869935), (0.8, 0.15882534, 1.8644485), (0.98699343, 0.15882534, 1.7869935), (1.0644486, 0.15882534, 1.6), (1.0520017, 0.0075166663, 1.8520017), (0.8, 0.0075166663, 1.9563842), (0.5479983, 0.0075166663, 1.8520017), (0.44361582, 0.0075166663, 1.6), (0.5479983, 0.0075166663, 1.3479984), (0.8, 0.0075166663, 1.2436159), (1.0520017, 0.0075166663, 1.3479984), (1.1563842, 0.0075166663, 1.6), (1.0383878, 0, 1.8383877), (1.1371312, 0, 1.6), (1.0383878, 0, 1.3616123), (0.8, 0, 1.2628689), (0.5616123, 0, 1.3616123), (0.46286893, 0, 1.6), (0.5616123, 0, 1.8383877), (0.8, 0, 1.9371312), (1.000478, 0, 1.800478), (1.0835187, 0, 1.6), (1.000478, 0, 1.3995221), (0.8, 0, 1.3164814), (0.599522, 0, 1.3995221), (0.5164813, 0, 1.6), (0.599522, 0, 1.800478), (0.8, 0, 1.8835187), (0.98699343, 0.012202854, 1.7869935), (1.0644486, 0.012202854, 1.6), (0.98699343, 0.012202854, 1.4130067), (0.8, 0.012202854, 1.3355515), (0.61300665, 0.012202854, 1.4130067), (0.5355515, 0.012202854, 1.6), (0.61300665, 0.012202854, 1.7869935), (0.8, 0.012202854, 1.8644485), (1.8520017, 0, 1.3479984), (1.6, 0, 1.2436159), (1.3479984, 0, 1.3479984), (1.2436159, 0, 1.6), (1.3479984, 0, 1.8520017), (1.6, 0, 1.9563842), (1.8520017, 0, 1.8520017), (1.9563842, 0, 1.6), (1.8520017, 0.15882534, 1.3479984), (1.6, 0.15882534, 1.2436159), (1.3479984, 0.15882534, 1.3479984), (1.2436159, 0.15882534, 1.6), (1.3479984, 0.15882534, 1.8520017), (1.6, 0.15882534, 1.9563842), (1.8520017, 0.15882534, 1.8520017), (1.9563842, 0.15882534, 1.6), (1.7869935, 0, 1.4130067), (1.6, 0, 1.3355515), (1.4130067, 0, 1.4130067), (1.3355515, 0, 1.6), (1.4130067, 0, 1.7869935), (1.6, 0, 1.8644485), (1.7869935, 0, 1.7869935), (1.8644485, 0, 1.6), (1.7869935, 0.15882534, 1.4130067), (1.6, 0.15882534, 1.3355515), (1.4130067, 0.15882534, 1.4130067), (1.3355515, 0.15882534, 1.6), (1.4130067, 0.15882534, 1.7869935), (1.6, 0.15882534, 1.8644485), (1.7869935, 0.15882534, 1.7869935), (1.8644485, 0.15882534, 1.6), (1.8520017, 0.0075166663, 1.8520017), (1.6, 0.0075166663, 1.9563842), (1.3479984, 0.0075166663, 1.8520017), (1.2436159, 0.0075166663, 1.6), (1.3479984, 0.0075166663, 1.3479984), (1.6, 0.0075166663, 1.2436159), (1.8520017, 0.0075166663, 1.3479984), (1.9563842, 0.0075166663, 1.6), (1.8383877, 0, 1.8383877), (1.9371312, 0, 1.6), (1.8383877, 0, 1.3616123), (1.6, 0, 1.2628689), (1.3616123, 0, 1.3616123), (1.2628689, 0, 1.6), (1.3616123, 0, 1.8383877), (1.6, 0, 1.9371312), (1.800478, 0, 1.800478), (1.8835187, 0, 1.6), (1.800478, 0, 1.3995221), (1.6, 0, 1.3164814), (1.3995221, 0, 1.3995221), (1.3164814, 0, 1.6), (1.3995221, 0, 1.800478), (1.6, 0, 1.8835187), (1.7869935, 0.012202854, 1.7869935), (1.8644485, 0.012202854, 1.6), (1.7869935, 0.012202854, 1.4130067), (1.6, 0.012202854, 1.3355515), (1.4130067, 0.012202854, 1.4130067), (1.3355515, 0.012202854, 1.6), (1.4130067, 0.012202854, 1.7869935), (1.6, 0.012202854, 1.8644485), (2.6520019, 0, 1.3479984), (2.4, 0, 1.2436159), (2.1479983, 0, 1.3479984), (2.0436158, 0, 1.6), (2.1479983, 0, 1.8520017), (2.4, 0, 1.9563842), (2.6520019, 0, 1.8520017), (2.7563844, 0, 1.6), (2.6520019, 0.15882534, 1.3479984), (2.4, 0.15882534, 1.2436159), (2.1479983, 0.15882534, 1.3479984), (2.0436158, 0.15882534, 1.6), (2.1479983, 0.15882534, 1.8520017), (2.4, 0.15882534, 1.9563842), (2.6520019, 0.15882534, 1.8520017), (2.7563844, 0.15882534, 1.6), (2.5869935, 0, 1.4130067), (2.4, 0, 1.3355515), (2.2130067, 0, 1.4130067), (2.1355515, 0, 1.6), (2.2130067, 0, 1.7869935), (2.4, 0, 1.8644485), (2.5869935, 0, 1.7869935), (2.6644487, 0, 1.6), (2.5869935, 0.15882534, 1.4130067), (2.4, 0.15882534, 1.3355515), (2.2130067, 0.15882534, 1.4130067), (2.1355515, 0.15882534, 1.6), (2.2130067, 0.15882534, 1.7869935), (2.4, 0.15882534, 1.8644485), (2.5869935, 0.15882534, 1.7869935), (2.6644487, 0.15882534, 1.6), (2.6520019, 0.0075166663, 1.8520017), (2.4, 0.0075166663, 1.9563842), (2.1479983, 0.0075166663, 1.8520017), (2.0436158, 0.0075166663, 1.6), (2.1479983, 0.0075166663, 1.3479984), (2.4, 0.0075166663, 1.2436159), (2.6520019, 0.0075166663, 1.3479984), (2.7563844, 0.0075166663, 1.6), (2.6383877, 0, 1.8383877), (2.737131, 0, 1.6), (2.6383877, 0, 1.3616123), (2.4, 0, 1.2628689), (2.1616123, 0, 1.3616123), (2.062869, 0, 1.6), (2.1616123, 0, 1.8383877), (2.4, 0, 1.9371312), (2.6004782, 0, 1.800478), (2.683519, 0, 1.6), (2.6004782, 0, 1.3995221), (2.4, 0, 1.3164814), (2.199522, 0, 1.3995221), (2.1164813, 0, 1.6), (2.199522, 0, 1.800478), (2.4, 0, 1.8835187), (2.5869935, 0.012202854, 1.7869935), (2.6644487, 0.012202854, 1.6), (2.5869935, 0.012202854, 1.4130067), (2.4, 0.012202854, 1.3355515), (2.2130067, 0.012202854, 1.4130067), (2.1355515, 0.012202854, 1.6), (2.2130067, 0.012202854, 1.7869935), (2.4, 0.012202854, 1.8644485), (1.0520017, 0, 2.1479983), (0.8, 0, 2.0436158), (0.5479983, 0, 2.1479983), (0.44361582, 0, 2.4), (0.5479983, 0, 2.6520019), (0.8, 0, 2.7563844), (1.0520017, 0, 2.6520019), (1.1563842, 0, 2.4), (1.0520017, 0.15882534, 2.1479983), (0.8, 0.15882534, 2.0436158), (0.5479983, 0.15882534, 2.1479983), (0.44361582, 0.15882534, 2.4), (0.5479983, 0.15882534, 2.6520019), (0.8, 0.15882534, 2.7563844), (1.0520017, 0.15882534, 2.6520019), (1.1563842, 0.15882534, 2.4), (0.98699343, 0, 2.2130067), (0.8, 0, 2.1355515), (0.61300665, 0, 2.2130067), (0.5355515, 0, 2.4), (0.61300665, 0, 2.5869935), (0.8, 0, 2.6644487), (0.98699343, 0, 2.5869935), (1.0644486, 0, 2.4), (0.98699343, 0.15882534, 2.2130067), (0.8, 0.15882534, 2.1355515), (0.61300665, 0.15882534, 2.2130067), (0.5355515, 0.15882534, 2.4), (0.61300665, 0.15882534, 2.5869935), (0.8, 0.15882534, 2.6644487), (0.98699343, 0.15882534, 2.5869935), (1.0644486, 0.15882534, 2.4), (1.0520017, 0.0075166663, 2.6520019), (0.8, 0.0075166663, 2.7563844), (0.5479983, 0.0075166663, 2.6520019), (0.44361582, 0.0075166663, 2.4), (0.5479983, 0.0075166663, 2.1479983), (0.8, 0.0075166663, 2.0436158), (1.0520017, 0.0075166663, 2.1479983), (1.1563842, 0.0075166663, 2.4), (1.0383878, 0, 2.6383877), (1.1371312, 0, 2.4), (1.0383878, 0, 2.1616123), (0.8, 0, 2.062869), (0.5616123, 0, 2.1616123), (0.46286893, 0, 2.4), (0.5616123, 0, 2.6383877), (0.8, 0, 2.737131), (1.000478, 0, 2.6004782), (1.0835187, 0, 2.4), (1.000478, 0, 2.199522), (0.8, 0, 2.1164813), (0.599522, 0, 2.199522), (0.5164813, 0, 2.4), (0.599522, 0, 2.6004782), (0.8, 0, 2.683519), (0.98699343, 0.012202854, 2.5869935), (1.0644486, 0.012202854, 2.4), (0.98699343, 0.012202854, 2.2130067), (0.8, 0.012202854, 2.1355515), (0.61300665, 0.012202854, 2.2130067), (0.5355515, 0.012202854, 2.4), (0.61300665, 0.012202854, 2.5869935), (0.8, 0.012202854, 2.6644487), (1.8520017, 0, 2.1479983), (1.6, 0, 2.0436158), (1.3479984, 0, 2.1479983), (1.2436159, 0, 2.4), (1.3479984, 0, 2.6520019), (1.6, 0, 2.7563844), (1.8520017, 0, 2.6520019), (1.9563842, 0, 2.4), (1.8520017, 0.15882534, 2.1479983), (1.6, 0.15882534, 2.0436158), (1.3479984, 0.15882534, 2.1479983), (1.2436159, 0.15882534, 2.4), (1.3479984, 0.15882534, 2.6520019), (1.6, 0.15882534, 2.7563844), (1.8520017, 0.15882534, 2.6520019), (1.9563842, 0.15882534, 2.4), (1.7869935, 0, 2.2130067), (1.6, 0, 2.1355515), (1.4130067, 0, 2.2130067), (1.3355515, 0, 2.4), (1.4130067, 0, 2.5869935), (1.6, 0, 2.6644487), (1.7869935, 0, 2.5869935), (1.8644485, 0, 2.4), (1.7869935, 0.15882534, 2.2130067), (1.6, 0.15882534, 2.1355515), (1.4130067, 0.15882534, 2.2130067), (1.3355515, 0.15882534, 2.4), (1.4130067, 0.15882534, 2.5869935), (1.6, 0.15882534, 2.6644487), (1.7869935, 0.15882534, 2.5869935), (1.8644485, 0.15882534, 2.4), (1.8520017, 0.0075166663, 2.6520019), (1.6, 0.0075166663, 2.7563844), (1.3479984, 0.0075166663, 2.6520019), (1.2436159, 0.0075166663, 2.4), (1.3479984, 0.0075166663, 2.1479983), (1.6, 0.0075166663, 2.0436158), (1.8520017, 0.0075166663, 2.1479983), (1.9563842, 0.0075166663, 2.4), (1.8383877, 0, 2.6383877), (1.9371312, 0, 2.4), (1.8383877, 0, 2.1616123), (1.6, 0, 2.062869), (1.3616123, 0, 2.1616123), (1.2628689, 0, 2.4), (1.3616123, 0, 2.6383877), (1.6, 0, 2.737131), (1.800478, 0, 2.6004782), (1.8835187, 0, 2.4), (1.800478, 0, 2.199522), (1.6, 0, 2.1164813), (1.3995221, 0, 2.199522), (1.3164814, 0, 2.4), (1.3995221, 0, 2.6004782), (1.6, 0, 2.683519), (1.7869935, 0.012202854, 2.5869935), (1.8644485, 0.012202854, 2.4), (1.7869935, 0.012202854, 2.2130067), (1.6, 0.012202854, 2.1355515), (1.4130067, 0.012202854, 2.2130067), (1.3355515, 0.012202854, 2.4), (1.4130067, 0.012202854, 2.5869935), (1.6, 0.012202854, 2.6644487), (2.6520019, 0, 2.1479983), (2.4, 0, 2.0436158), (2.1479983, 0, 2.1479983), (2.0436158, 0, 2.4), (2.1479983, 0, 2.6520019), (2.4, 0, 2.7563844), (2.6520019, 0, 2.6520019), (2.7563844, 0, 2.4), (2.6520019, 0.15882534, 2.1479983), (2.4, 0.15882534, 2.0436158), (2.1479983, 0.15882534, 2.1479983), (2.0436158, 0.15882534, 2.4), (2.1479983, 0.15882534, 2.6520019), (2.4, 0.15882534, 2.7563844), (2.6520019, 0.15882534, 2.6520019), (2.7563844, 0.15882534, 2.4), (2.5869935, 0, 2.2130067), (2.4, 0, 2.1355515), (2.2130067, 0, 2.2130067), (2.1355515, 0, 2.4), (2.2130067, 0, 2.5869935), (2.4, 0, 2.6644487), (2.5869935, 0, 2.5869935), (2.6644487, 0, 2.4), (2.5869935, 0.15882534, 2.2130067), (2.4, 0.15882534, 2.1355515), (2.2130067, 0.15882534, 2.2130067), (2.1355515, 0.15882534, 2.4), (2.2130067, 0.15882534, 2.5869935), (2.4, 0.15882534, 2.6644487), (2.5869935, 0.15882534, 2.5869935), (2.6644487, 0.15882534, 2.4), (2.6520019, 0.0075166663, 2.6520019), (2.4, 0.0075166663, 2.7563844), (2.1479983, 0.0075166663, 2.6520019), (2.0436158, 0.0075166663, 2.4), (2.1479983, 0.0075166663, 2.1479983), (2.4, 0.0075166663, 2.0436158), (2.6520019, 0.0075166663, 2.1479983), (2.7563844, 0.0075166663, 2.4), (2.6383877, 0, 2.6383877), (2.737131, 0, 2.4), (2.6383877, 0, 2.1616123), (2.4, 0, 2.062869), (2.1616123, 0, 2.1616123), (2.062869, 0, 2.4), (2.1616123, 0, 2.6383877), (2.4, 0, 2.737131), (2.6004782, 0, 2.6004782), (2.683519, 0, 2.4), (2.6004782, 0, 2.199522), (2.4, 0, 2.1164813), (2.199522, 0, 2.199522), (2.1164813, 0, 2.4), (2.199522, 0, 2.6004782), (2.4, 0, 2.683519), (2.5869935, 0.012202854, 2.5869935), (2.6644487, 0.012202854, 2.4), (2.5869935, 0.012202854, 2.2130067), (2.4, 0.012202854, 2.1355515), (2.2130067, 0.012202854, 2.2130067), (2.1355515, 0.012202854, 2.4), (2.2130067, 0.012202854, 2.5869935), (2.4, 0.012202854, 2.6644487), (1.0520017, 0, 0.5479983), (0.8, 0, 0.44361582), (0.5479983, 0, 0.5479983), (0.44361582, 0, 0.8), (0.5479983, 0, 1.0520017), (0.8, 0, 1.1563842), (1.0520017, 0, 1.0520017), (1.1563842, 0, 0.8), (1.0520017, 0.15882534, 0.5479983), (0.8, 0.15882534, 0.44361582), (0.5479983, 0.15882534, 0.5479983), (0.44361582, 0.15882534, 0.8), (0.5479983, 0.15882534, 1.0520017), (0.8, 0.15882534, 1.1563842), (1.0520017, 0.15882534, 1.0520017), (1.1563842, 0.15882534, 0.8), (0.98699343, 0, 0.61300665), (0.8, 0, 0.5355515), (0.61300665, 0, 0.61300665), (0.5355515, 0, 0.8), (0.61300665, 0, 0.98699343), (0.8, 0, 1.0644486), (0.98699343, 0, 0.98699343), (1.0644486, 0, 0.8), (0.98699343, 0.15882534, 0.61300665), (0.8, 0.15882534, 0.5355515), (0.61300665, 0.15882534, 0.61300665), (0.5355515, 0.15882534, 0.8), (0.61300665, 0.15882534, 0.98699343), (0.8, 0.15882534, 1.0644486), (0.98699343, 0.15882534, 0.98699343), (1.0644486, 0.15882534, 0.8), (1.0520017, 0.0075166663, 1.0520017), (0.8, 0.0075166663, 1.1563842), (0.5479983, 0.0075166663, 1.0520017), (0.44361582, 0.0075166663, 0.8), (0.5479983, 0.0075166663, 0.5479983), (0.8, 0.0075166663, 0.44361582), (1.0520017, 0.0075166663, 0.5479983), (1.1563842, 0.0075166663, 0.8), (1.0383878, 0, 1.0383878), (1.1371312, 0, 0.8), (1.0383878, 0, 0.5616123), (0.8, 0, 0.46286893), (0.5616123, 0, 0.5616123), (0.46286893, 0, 0.8), (0.5616123, 0, 1.0383878), (0.8, 0, 1.1371312), (1.000478, 0, 1.000478), (1.0835187, 0, 0.8), (1.000478, 0, 0.599522), (0.8, 0, 0.5164813), (0.599522, 0, 0.599522), (0.5164813, 0, 0.8), (0.599522, 0, 1.000478), (0.8, 0, 1.0835187), (0.98699343, 0.012202854, 0.98699343), (1.0644486, 0.012202854, 0.8), (0.98699343, 0.012202854, 0.61300665), (0.8, 0.012202854, 0.5355515), (0.61300665, 0.012202854, 0.61300665), (0.5355515, 0.012202854, 0.8), (0.61300665, 0.012202854, 0.98699343), (0.8, 0.012202854, 1.0644486), (1.8520017, 0, 0.5479983), (1.6, 0, 0.44361582), (1.3479984, 0, 0.5479983), (1.2436159, 0, 0.8), (1.3479984, 0, 1.0520017), (1.6, 0, 1.1563842), (1.8520017, 0, 1.0520017), (1.9563842, 0, 0.8), (1.8520017, 0.15882534, 0.5479983), (1.6, 0.15882534, 0.44361582), (1.3479984, 0.15882534, 0.5479983), (1.2436159, 0.15882534, 0.8), (1.3479984, 0.15882534, 1.0520017), (1.6, 0.15882534, 1.1563842), (1.8520017, 0.15882534, 1.0520017), (1.9563842, 0.15882534, 0.8), (1.7869935, 0, 0.61300665), (1.6, 0, 0.5355515), (1.4130067, 0, 0.61300665), (1.3355515, 0, 0.8), (1.4130067, 0, 0.98699343), (1.6, 0, 1.0644486), (1.7869935, 0, 0.98699343), (1.8644485, 0, 0.8), (1.7869935, 0.15882534, 0.61300665), (1.6, 0.15882534, 0.5355515), (1.4130067, 0.15882534, 0.61300665), (1.3355515, 0.15882534, 0.8), (1.4130067, 0.15882534, 0.98699343), (1.6, 0.15882534, 1.0644486), (1.7869935, 0.15882534, 0.98699343), (1.8644485, 0.15882534, 0.8), (1.8520017, 0.0075166663, 1.0520017), (1.6, 0.0075166663, 1.1563842), (1.3479984, 0.0075166663, 1.0520017), (1.2436159, 0.0075166663, 0.8), (1.3479984, 0.0075166663, 0.5479983), (1.6, 0.0075166663, 0.44361582), (1.8520017, 0.0075166663, 0.5479983), (1.9563842, 0.0075166663, 0.8), (1.8383877, 0, 1.0383878), (1.9371312, 0, 0.8), (1.8383877, 0, 0.5616123), (1.6, 0, 0.46286893), (1.3616123, 0, 0.5616123), (1.2628689, 0, 0.8), (1.3616123, 0, 1.0383878), (1.6, 0, 1.1371312), (1.800478, 0, 1.000478), (1.8835187, 0, 0.8), (1.800478, 0, 0.599522), (1.6, 0, 0.5164813), (1.3995221, 0, 0.599522), (1.3164814, 0, 0.8), (1.3995221, 0, 1.000478), (1.6, 0, 1.0835187), (1.7869935, 0.012202854, 0.98699343), (1.8644485, 0.012202854, 0.8), (1.7869935, 0.012202854, 0.61300665), (1.6, 0.012202854, 0.5355515), (1.4130067, 0.012202854, 0.61300665), (1.3355515, 0.012202854, 0.8), (1.4130067, 0.012202854, 0.98699343), (1.6, 0.012202854, 1.0644486), (2.6520019, 0, 0.5479983), (2.4, 0, 0.44361582), (2.1479983, 0, 0.5479983), (2.0436158, 0, 0.8), (2.1479983, 0, 1.0520017), (2.4, 0, 1.1563842), (2.6520019, 0, 1.0520017), (2.7563844, 0, 0.8), (2.6520019, 0.15882534, 0.5479983), (2.4, 0.15882534, 0.44361582), (2.1479983, 0.15882534, 0.5479983), (2.0436158, 0.15882534, 0.8), (2.1479983, 0.15882534, 1.0520017), (2.4, 0.15882534, 1.1563842), (2.6520019, 0.15882534, 1.0520017), (2.7563844, 0.15882534, 0.8), (2.5869935, 0, 0.61300665), (2.4, 0, 0.5355515), (2.2130067, 0, 0.61300665), (2.1355515, 0, 0.8), (2.2130067, 0, 0.98699343), (2.4, 0, 1.0644486), (2.5869935, 0, 0.98699343), (2.6644487, 0, 0.8), (2.5869935, 0.15882534, 0.61300665), (2.4, 0.15882534, 0.5355515), (2.2130067, 0.15882534, 0.61300665), (2.1355515, 0.15882534, 0.8), (2.2130067, 0.15882534, 0.98699343), (2.4, 0.15882534, 1.0644486), (2.5869935, 0.15882534, 0.98699343), (2.6644487, 0.15882534, 0.8), (2.6520019, 0.0075166663, 1.0520017), (2.4, 0.0075166663, 1.1563842), (2.1479983, 0.0075166663, 1.0520017), (2.0436158, 0.0075166663, 0.8), (2.1479983, 0.0075166663, 0.5479983), (2.4, 0.0075166663, 0.44361582), (2.6520019, 0.0075166663, 0.5479983), (2.7563844, 0.0075166663, 0.8), (2.6383877, 0, 1.0383878), (2.737131, 0, 0.8), (2.6383877, 0, 0.5616123), (2.4, 0, 0.46286893), (2.1616123, 0, 0.5616123), (2.062869, 0, 0.8), (2.1616123, 0, 1.0383878), (2.4, 0, 1.1371312), (2.6004782, 0, 1.000478), (2.683519, 0, 0.8), (2.6004782, 0, 0.599522), (2.4, 0, 0.5164813), (2.199522, 0, 0.599522), (2.1164813, 0, 0.8), (2.199522, 0, 1.000478), (2.4, 0, 1.0835187), (2.5869935, 0.012202854, 0.98699343), (2.6644487, 0.012202854, 0.8), (2.5869935, 0.012202854, 0.61300665), (2.4, 0.012202854, 0.5355515), (2.2130067, 0.012202854, 0.61300665), (2.1355515, 0.012202854, 0.8), (2.2130067, 0.012202854, 0.98699343), (2.4, 0.012202854, 1.0644486), (0, 0, 3.2000427), (3.1998398, 0, 3.2000427), (0, 0.32, 3.2000427), (3.1998398, 0.32, 3.2000427), (3.0406375, 0, 3.0408401), (0.15920237, 0, 3.0408401), (3.0406375, 0.15882534, 3.0408401), (0.15920237, 0.15882534, 3.0408401), (3.1998398, 0, 3.1551738), (3.0406375, 0, 3.0371718), (3.0406375, 0.15882534, 3.0371718), (0.15920237, 0.15882534, 3.0371718), (0.15920237, 0, 3.0371718), (0, 0, 3.1551738), (0, 0.32, 3.1551738), (3.1998398, 0.32, 3.1551738), (3.1546302, 0, 3.2000427), (3.1546302, 0.32, 3.2000427), (3.1546302, 0.32, 3.1551738), (3.0367417, 0.15882534, 3.0371718), (3.0367417, 0.15882534, 3.0408401), (3.0367417, 0, 3.0408401), (0.16342261, 0.15882534, 3.0371718), (0.16342261, 0.15882534, 3.0408401), (0.16342261, 0, 3.0408401), (0.045695394, 0, 3.2000427), (0.045695394, 0.32, 3.2000427), (0.045695394, 0.32, 3.1551738), (3.0367417, 0.15451507, 3.0408401), (0.16342261, 0.15451507, 3.0408401), (0.15920237, 0.15451507, 3.0408401), (0.15920237, 0.15451507, 3.0371718), (3.0406375, 0.15451507, 3.0371718), (3.0406375, 0.15451507, 3.0408401), (3.0367417, 0.006479934, 3.0408401), (0.16342261, 0.006479934, 3.0408401), (0.15920237, 0.006479934, 3.0408401), (0.15920237, 0.006479934, 3.0371718), (3.0406375, 0.006479934, 3.0371718), (3.0406375, 0.006479934, 3.0408401), (3.0416954, 0, 3.0458755), (0.15847568, 0, 3.0458755), (0.1541672, 0, 3.0458755), (0.1541672, 0, 3.0421305), (3.0456727, 0, 3.0421305), (3.0456727, 0, 3.0458755), (3.1936288, 0, 3.1551738), (0.006211072, 0, 3.1551738), (0.006211072, 0, 3.1938314), (0.045695394, 0, 3.1938314), (3.1546302, 0, 3.1938314), (3.1936288, 0, 3.1938314), (3.1998398, 0.0117769465, 3.1551738), (0, 0.0117769465, 3.1551738), (0, 0.0117769465, 3.2000427), (0.045695394, 0.0117769465, 3.2000427), (3.1546302, 0.0117769465, 3.2000427), (3.1998398, 0.0117769465, 3.2000427), (3.1998398, 0.27258798, 3.1551738), (0, 0.27258798, 3.1551738), (0, 0.27258798, 3.2000427), (0.045695394, 0.27258798, 3.2000427), (3.1546302, 0.27258798, 3.2000427), (3.1998398, 0.27258798, 3.2000427), (0.8002218, 0, 3.2000427), (0.8002218, 0.0117769465, 3.2000427), (0.8002218, 0.27258798, 3.2000427), (0.8002218, 0.32, 3.2000427), (0.8002218, 0.32, 3.1551738), (0.80014104, 0.15882534, 3.0371718), (0.80014104, 0.15882534, 3.0408401), (0.80014104, 0.15451507, 3.0408401), (0.80014104, 0.006479934, 3.0408401), (0.80014104, 0, 3.0408401), (0.80014443, 0, 3.0458755), (0.8002218, 0, 3.1938314), (3.0457234, 7.450581e-9, 2.4000335), (3.040688, 7.450581e-9, 2.4000328), (3.040688, 0.0064799413, 2.4000328), (3.040688, 0.15451509, 2.4000328), (3.040688, 0.15882534, 2.4000328), (3.036906, 0.15882534, 2.4000328), (0.79990864, 0.15882535, 2.4001834), (0.16309603, 0.15882534, 2.4001834), (0.15915175, 0.15882534, 2.4001834), (0.15915175, 0.15451509, 2.4001834), (0.15915175, 0.0064799413, 2.4001834), (0.15915175, 7.450581e-9, 2.4001834), (0.15411659, 7.450581e-9, 2.400186), (0.006160453, 0, 2.400244), (-0.000050663948, 0, 2.400244), (-0.000050663948, 0.0117769465, 2.400244), (-0.000050663948, 0.272588, 2.400244), (-0.000050663948, 0.32, 2.400244), (0.045231566, 0.32, 2.400244), (0.79988843, 0.32, 2.400244), (3.1548512, 0.32, 2.400053), (3.1998906, 0.32, 2.400053), (3.1998906, 0.272588, 2.400053), (3.1998906, 0.0117769465, 2.400053), (3.1998906, 0, 2.400053), (3.1936793, 0, 2.400053), (2.4001424, 0.32, 2.400053), (2.4000819, 0.15882535, 2.4000328), (2.4, 0.15882534, 3.0371718), (2.4, 0.15882534, 3.0408401), (2.4, 0.15451507, 3.0408401), (2.4, 0.006479934, 3.0408401), (2.4, 0, 3.0408401), (2.4, 0, 3.0458755), (2.4, 0, 3.1938314), (2.4, 0, 3.2000427), (2.4, 0.0117769465, 3.2000427), (2.4, 0.27258798, 3.2000427), (2.4, 0.32, 3.2000427), (2.4, 0.32, 3.1551738), (1.6, 0.32, 2.4003863), (1.6, 0.15882535, 2.4002652), (1.6, 0.15882534, 3.0371718), (1.6, 0.15882534, 3.0408401), (1.6, 0.15451507, 3.0408401), (1.6, 0.006479934, 3.0408401), (1.6, 0, 3.0408401), (1.6, 0, 3.0458755), (1.6, 0, 3.1938314), (1.6, 0, 3.2000427), (1.6, 0.0117769465, 3.2000427), (1.6, 0.27258798, 3.2000427), (1.6, 0.32, 3.2000427), (1.6, 0.32, 3.1551738), (0.5876447, 0.32000014, 2.6123552), (0.4, 0.32000014, 2.5346303), (0.2123553, 0.32000014, 2.6123552), (0.13463032, 0.32000014, 2.8000002), (0.2123553, 0.32000014, 2.9876447), (0.4, 0.32000014, 3.0653696), (0.5876447, 0.32000014, 2.9876447), (0.66536975, 0.32000014, 2.8000002), (0.5876447, 0.48082992, 2.6123552), (0.4, 0.48082992, 2.5346303), (0.2123553, 0.48082992, 2.6123552), (0.13463032, 0.48082992, 2.8000002), (0.2123553, 0.48082992, 2.9876447), (0.4, 0.48082992, 3.0653696), (0.5876447, 0.48082992, 2.9876447), (0.66536975, 0.48082992, 2.8000002), (0.5679039, 0.48082992, 2.6320963), (0.4, 0.48082992, 2.5625482), (0.23209617, 0.48082992, 2.6320963), (0.16254814, 0.48082992, 2.8000002), (0.23209617, 0.48082992, 2.9679039), (0.4, 0.48082992, 3.0374517), (0.5679039, 0.48082992, 2.9679039), (0.63745195, 0.48082992, 2.8000002), (0.40000004, 0.48082992, 2.8000002), (0.2123553, 0.4642254, 2.9876447), (0.13463032, 0.4642254, 2.8000002), (0.2123553, 0.4642254, 2.6123552), (0.4, 0.4642254, 2.5346303), (0.5876447, 0.4642254, 2.6123552), (0.66536975, 0.4642254, 2.8000002), (0.5876447, 0.4642254, 2.9876447), (0.4, 0.4642254, 3.0653696), (1.3876448, 0.32000014, 2.6123552), (1.2, 0.32000014, 2.5346303), (1.0123553, 0.32000014, 2.6123552), (0.93463033, 0.32000014, 2.8000002), (1.0123553, 0.32000014, 2.9876447), (1.2, 0.32000014, 3.0653696), (1.3876448, 0.32000014, 2.9876447), (1.4653697, 0.32000014, 2.8000002), (1.3876448, 0.48082992, 2.6123552), (1.2, 0.48082992, 2.5346303), (1.0123553, 0.48082992, 2.6123552), (0.93463033, 0.48082992, 2.8000002), (1.0123553, 0.48082992, 2.9876447), (1.2, 0.48082992, 3.0653696), (1.3876448, 0.48082992, 2.9876447), (1.4653697, 0.48082992, 2.8000002), (1.367904, 0.48082992, 2.6320963), (1.2, 0.48082992, 2.5625482), (1.0320961, 0.48082992, 2.6320963), (0.96254814, 0.48082992, 2.8000002), (1.0320961, 0.48082992, 2.9679039), (1.2, 0.48082992, 3.0374517), (1.367904, 0.48082992, 2.9679039), (1.437452, 0.48082992, 2.8000002), (1.2, 0.48082992, 2.8000002), (1.0123553, 0.4642254, 2.9876447), (0.93463033, 0.4642254, 2.8000002), (1.0123553, 0.4642254, 2.6123552), (1.2, 0.4642254, 2.5346303), (1.3876448, 0.4642254, 2.6123552), (1.4653697, 0.4642254, 2.8000002), (1.3876448, 0.4642254, 2.9876447), (1.2, 0.4642254, 3.0653696), (2.1876447, 0.32000014, 2.6123552), (2, 0.32000014, 2.5346303), (1.8123553, 0.32000014, 2.6123552), (1.7346303, 0.32000014, 2.8000002), (1.8123553, 0.32000014, 2.9876447), (2, 0.32000014, 3.0653696), (2.1876447, 0.32000014, 2.9876447), (2.26537, 0.32000014, 2.8000002), (2.1876447, 0.48082992, 2.6123552), (2, 0.48082992, 2.5346303), (1.8123553, 0.48082992, 2.6123552), (1.7346303, 0.48082992, 2.8000002), (1.8123553, 0.48082992, 2.9876447), (2, 0.48082992, 3.0653696), (2.1876447, 0.48082992, 2.9876447), (2.26537, 0.48082992, 2.8000002), (2.167904, 0.48082992, 2.6320963), (2, 0.48082992, 2.5625482), (1.8320962, 0.48082992, 2.6320963), (1.7625482, 0.48082992, 2.8000002), (1.8320962, 0.48082992, 2.9679039), (2, 0.48082992, 3.0374517), (2.167904, 0.48082992, 2.9679039), (2.237452, 0.48082992, 2.8000002), (2, 0.48082992, 2.8000002), (1.8123553, 0.4642254, 2.9876447), (1.7346303, 0.4642254, 2.8000002), (1.8123553, 0.4642254, 2.6123552), (2, 0.4642254, 2.5346303), (2.1876447, 0.4642254, 2.6123552), (2.26537, 0.4642254, 2.8000002), (2.1876447, 0.4642254, 2.9876447), (2, 0.4642254, 3.0653696), (2.9876447, 0.32000014, 2.6123552), (2.8000002, 0.32000014, 2.5346303), (2.6123552, 0.32000014, 2.6123552), (2.5346303, 0.32000014, 2.8000002), (2.6123552, 0.32000014, 2.9876447), (2.8000002, 0.32000014, 3.0653696), (2.9876447, 0.32000014, 2.9876447), (3.0653696, 0.32000014, 2.8000002), (2.9876447, 0.48082992, 2.6123552), (2.8000002, 0.48082992, 2.5346303), (2.6123552, 0.48082992, 2.6123552), (2.5346303, 0.48082992, 2.8000002), (2.6123552, 0.48082992, 2.9876447), (2.8000002, 0.48082992, 3.0653696), (2.9876447, 0.48082992, 2.9876447), (3.0653696, 0.48082992, 2.8000002), (2.967904, 0.48082992, 2.6320963), (2.8000002, 0.48082992, 2.5625482), (2.6320963, 0.48082992, 2.6320963), (2.5625482, 0.48082992, 2.8000002), (2.6320963, 0.48082992, 2.9679039), (2.8000002, 0.48082992, 3.0374517), (2.967904, 0.48082992, 2.9679039), (3.037452, 0.48082992, 2.8000002), (2.8000002, 0.48082992, 2.8000002), (2.6123552, 0.4642254, 2.9876447), (2.5346303, 0.4642254, 2.8000002), (2.6123552, 0.4642254, 2.6123552), (2.8000002, 0.4642254, 2.5346303), (2.9876447, 0.4642254, 2.6123552), (3.0653696, 0.4642254, 2.8000002), (2.9876447, 0.4642254, 2.9876447), (2.8000002, 0.4642254, 3.0653696), (2.4001424, 0.32, 0.8001638), (2.4000819, 0.15882535, 0.8001032), (3.036906, 0.15882534, 0.8001032), (3.040688, 0.15882534, 0.8001032), (3.040688, 0.15451509, 0.8001032), (3.040688, 0.0064799413, 0.8001032), (3.040688, 7.450581e-9, 0.8001032), (3.0457234, 7.450581e-9, 0.80010575), (3.1936793, 0, 0.8001638), (3.1998906, 0, 0.8001638), (3.1998906, 0.0117769465, 0.8001638), (3.1998906, 0.272588, 0.8001638), (3.1998906, 0.32, 0.8001638), (3.1548512, 0.32, 0.8001638), (2.4002848, 0.32, 1.5999414), (2.4001637, 0.15882535, 1.5999414), (3.0370703, 0.15882534, 1.5999414), (3.0407386, 0.15882534, 1.5999414), (3.0407386, 0.15451507, 1.5999414), (3.0407386, 0.006479934, 1.5999414), (3.0407386, 0, 1.5999414), (3.045774, 0, 1.5999414), (3.1937299, 0, 1.5999414), (3.1999412, 0, 1.5999414), (3.1999412, 0.0117769465, 1.5999414), (3.1999412, 0.27258798, 1.5999414), (3.1999412, 0.32, 1.5999414), (3.1550722, 0.32, 1.5999414), (2.6122537, 0.32000014, 1.8122966), (2.5345287, 0.32000014, 1.9999413), (2.6122537, 0.32000014, 2.187586), (2.7998986, 0.32000014, 2.265311), (2.987543, 0.32000014, 2.187586), (3.065268, 0.32000014, 1.9999413), (2.987543, 0.32000014, 1.8122966), (2.7998986, 0.32000014, 1.7345717), (2.6122537, 0.48082992, 1.8122966), (2.5345287, 0.48082992, 1.9999413), (2.6122537, 0.48082992, 2.187586), (2.7998986, 0.48082992, 2.265311), (2.987543, 0.48082992, 2.187586), (3.065268, 0.48082992, 1.9999413), (2.987543, 0.48082992, 1.8122966), (2.7998986, 0.48082992, 1.7345717), (2.6319947, 0.48082992, 1.8320374), (2.5624466, 0.48082992, 1.9999413), (2.6319947, 0.48082992, 2.1678452), (2.7998986, 0.48082992, 2.2373934), (2.9678023, 0.48082992, 2.1678452), (3.0373502, 0.48082992, 1.9999413), (2.9678023, 0.48082992, 1.8320374), (2.7998986, 0.48082992, 1.7624894), (2.7998986, 0.48082992, 1.9999413), (2.987543, 0.4642254, 2.187586), (2.7998986, 0.4642254, 2.265311), (2.6122537, 0.4642254, 2.187586), (2.5345287, 0.4642254, 1.9999413), (2.6122537, 0.4642254, 1.8122966), (2.7998986, 0.4642254, 1.7345717), (2.987543, 0.4642254, 1.8122966), (3.065268, 0.4642254, 1.9999413), (2.6122537, 0.32000014, 1.0122967), (2.5345287, 0.32000014, 1.1999414), (2.6122537, 0.32000014, 1.3875861), (2.7998986, 0.32000014, 1.465311), (2.987543, 0.32000014, 1.3875861), (3.065268, 0.32000014, 1.1999414), (2.987543, 0.32000014, 1.0122967), (2.7998986, 0.32000014, 0.9345715), (2.6122537, 0.48082992, 1.0122967), (2.5345287, 0.48082992, 1.1999414), (2.6122537, 0.48082992, 1.3875861), (2.7998986, 0.48082992, 1.465311), (2.987543, 0.48082992, 1.3875861), (3.065268, 0.48082992, 1.1999414), (2.987543, 0.48082992, 1.0122967), (2.7998986, 0.48082992, 0.9345715), (2.6319947, 0.48082992, 1.0320375), (2.5624466, 0.48082992, 1.1999414), (2.6319947, 0.48082992, 1.3678452), (2.7998986, 0.48082992, 1.4373932), (2.9678023, 0.48082992, 1.3678452), (3.0373502, 0.48082992, 1.1999414), (2.9678023, 0.48082992, 1.0320375), (2.7998986, 0.48082992, 0.96248937), (2.7998986, 0.48082992, 1.1999414), (2.987543, 0.4642254, 1.3875861), (2.7998986, 0.4642254, 1.465311), (2.6122537, 0.4642254, 1.3875861), (2.5345287, 0.4642254, 1.1999414), (2.6122537, 0.4642254, 1.0122967), (2.7998986, 0.4642254, 0.9345715), (2.987543, 0.4642254, 1.0122967), (3.065268, 0.4642254, 1.1999414), (-0.000050663948, 0, 0.80035484), (-0.000050663948, 0.0117769465, 0.80035484), (-0.000050663948, 0.272588, 0.80035484), (-0.000050663948, 0.32, 0.80035484), (0.045231566, 0.32, 0.80035484), (0.16309603, 0.15882534, 0.80025387), (0.15915175, 0.15882534, 0.80025387), (0.15915175, 0.15451509, 0.80025387), (0.15915175, 0.0064799413, 0.80025387), (0.15915175, 7.450581e-9, 0.80025387), (0.15411659, 7.450581e-9, 0.80025804), (0.006160453, 0, 0.80035484), (0.79990864, 0.15882535, 0.80025387), (0.79988843, 0.32, 0.80035484), (0.79955506, 0.32, 1.6001015), (0.7996763, 0.15882535, 1.6001015), (0.16276944, 0.15882534, 1.6001015), (0.15910113, 0.15882534, 1.6001015), (0.15910113, 0.15451507, 1.6001015), (0.15910113, 0.006479934, 1.6001015), (0.15910113, 0, 1.6001015), (0.15406597, 0, 1.6001015), (0.0061098337, 0, 1.6001015), (-0.000101327896, 0, 1.6001015), (-0.000101327896, 0.0117769465, 1.6001015), (-0.000101327896, 0.27258798, 1.6001015), (-0.000101327896, 0.32, 1.6001015), (0.044767737, 0.32, 1.6001015), (0.58758605, 0.32000014, 1.3877462), (0.66531104, 0.32000014, 1.2001015), (0.58758605, 0.32000014, 1.0124568), (0.39994133, 0.32000014, 0.93473184), (0.2122966, 0.32000014, 1.0124568), (0.13457167, 0.32000014, 1.2001015), (0.2122966, 0.32000014, 1.3877462), (0.39994133, 0.32000014, 1.4654711), (0.58758605, 0.48082992, 1.3877462), (0.66531104, 0.48082992, 1.2001015), (0.58758605, 0.48082992, 1.0124568), (0.39994133, 0.48082992, 0.93473184), (0.2122966, 0.48082992, 1.0124568), (0.13457167, 0.48082992, 1.2001015), (0.2122966, 0.48082992, 1.3877462), (0.39994133, 0.48082992, 1.4654711), (0.5678452, 0.48082992, 1.3680054), (0.63739324, 0.48082992, 1.2001015), (0.5678452, 0.48082992, 1.0321976), (0.39994133, 0.48082992, 0.96264964), (0.23203754, 0.48082992, 1.0321976), (0.16248953, 0.48082992, 1.2001015), (0.23203754, 0.48082992, 1.3680054), (0.39994133, 0.48082992, 1.4375534), (0.39994133, 0.48082992, 1.2001015), (0.2122966, 0.4642254, 1.0124568), (0.39994133, 0.4642254, 0.93473184), (0.58758605, 0.4642254, 1.0124568), (0.66531104, 0.4642254, 1.2001015), (0.58758605, 0.4642254, 1.3877462), (0.39994133, 0.4642254, 1.4654711), (0.2122966, 0.4642254, 1.3877462), (0.13457167, 0.4642254, 1.2001015), (0.58758605, 0.32000014, 2.1877463), (0.66531104, 0.32000014, 2.0001016), (0.58758605, 0.32000014, 1.8124567), (0.39994133, 0.32000014, 1.7347318), (0.2122966, 0.32000014, 1.8124567), (0.13457167, 0.32000014, 2.0001016), (0.2122966, 0.32000014, 2.1877463), (0.39994133, 0.32000014, 2.2654715), (0.58758605, 0.48082992, 2.1877463), (0.66531104, 0.48082992, 2.0001016), (0.58758605, 0.48082992, 1.8124567), (0.39994133, 0.48082992, 1.7347318), (0.2122966, 0.48082992, 1.8124567), (0.13457167, 0.48082992, 2.0001016), (0.2122966, 0.48082992, 2.1877463), (0.39994133, 0.48082992, 2.2654715), (0.5678452, 0.48082992, 2.1680055), (0.63739324, 0.48082992, 2.0001016), (0.5678452, 0.48082992, 1.8321977), (0.39994133, 0.48082992, 1.7626497), (0.23203754, 0.48082992, 1.8321977), (0.16248953, 0.48082992, 2.0001016), (0.23203754, 0.48082992, 2.1680055), (0.39994133, 0.48082992, 2.2375536), (0.39994133, 0.48082992, 2.0001016), (0.2122966, 0.4642254, 1.8124567), (0.39994133, 0.4642254, 1.7347318), (0.58758605, 0.4642254, 1.8124567), (0.66531104, 0.4642254, 2.0001016), (0.58758605, 0.4642254, 2.1877463), (0.39994133, 0.4642254, 2.2654715), (0.2122966, 0.4642254, 2.1877463), (0.13457167, 0.4642254, 2.0001016), (0, 0.32000002, 1.1920929e-7), (3.1998398, 0.32000002, 1.1920929e-7), (0, 0, 1.1920929e-7), (3.1998398, 0, 1.1920929e-7), (0.15920237, 2.9802322e-8, 0.15920249), (3.0406375, 2.9802322e-8, 0.15920249), (0.15920237, 0.15882537, 0.15920249), (3.0406375, 0.15882537, 0.15920249), (3.1546302, 0.32000002, 1.1920929e-7), (3.1546302, 0, 1.1920929e-7), (3.0367417, 2.9802322e-8, 0.15920249), (3.0367417, 0.15882537, 0.15920249), (3.0406375, 2.9802322e-8, 0.16335832), (3.0406375, 0.15882537, 0.16335832), (3.0367417, 0.15882537, 0.16335832), (0.15920237, 0.15882537, 0.16335832), (0.15920237, 2.9802322e-8, 0.16335832), (0, 0, 0.045599043), (0, 0.32000002, 0.045599043), (3.1546302, 0.32000002, 0.045599043), (3.1998398, 0.32000002, 0.045599043), (3.1998398, 0, 0.045599043), (0.16342261, 2.9802322e-8, 0.15920249), (0.16342261, 0.15882537, 0.15920249), (0.16342261, 0.15882537, 0.16335832), (0.045695394, 0.32000002, 0.045599043), (0.045695394, 0.32000002, 1.1920929e-7), (0.045695394, 0, 1.1920929e-7), (0.15920237, 0.1545151, 0.16335832), (0.15920237, 0.1545151, 0.15920249), (0.16342261, 0.1545151, 0.15920249), (3.0367417, 0.1545151, 0.15920249), (3.0406375, 0.1545151, 0.15920249), (3.0406375, 0.1545151, 0.16335832), (0.15920237, 0.0064799637, 0.16335832), (0.15920237, 0.0064799637, 0.15920249), (0.16342261, 0.0064799637, 0.15920249), (3.0367417, 0.0064799637, 0.15920249), (3.0406375, 0.0064799637, 0.15920249), (3.0406375, 0.0064799637, 0.16335832), (0.1541672, 2.9802322e-8, 0.15841003), (0.1541672, 2.9802322e-8, 0.15416732), (0.15847568, 2.9802322e-8, 0.15416732), (3.0416954, 2.9802322e-8, 0.15416732), (3.0456727, 2.9802322e-8, 0.15416732), (3.0456727, 2.9802322e-8, 0.15841003), (3.1936288, 0, 0.045599043), (3.1936288, 0, 0.0062111914), (3.1546302, 0, 0.0062111914), (0.045695394, 0, 0.0062111914), (0.006211072, 0, 0.0062111914), (0.006211072, 0, 0.045599043), (3.1998398, 0.0117769465, 0.045599043), (3.1998398, 0.0117769465, 1.1920929e-7), (3.1546302, 0.0117769465, 1.1920929e-7), (0.045695394, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 0.045599043), (3.1998398, 0.272588, 0.045599043), (3.1998398, 0.272588, 1.1920929e-7), (3.1546302, 0.272588, 1.1920929e-7), (0.045695394, 0.272588, 1.1920929e-7), (0, 0.272588, 1.1920929e-7), (0, 0.272588, 0.045599043), (0.8002218, 0.32000002, 0.045599043), (0.8002218, 0.32000002, 1.1920929e-7), (0.8002218, 0.272588, 1.1920929e-7), (0.8002218, 0.0117769465, 1.1920929e-7), (0.8002218, 0, 1.1920929e-7), (0.8002218, 0, 0.0062111914), (0.80014443, 2.9802322e-8, 0.15416732), (0.80014104, 2.9802322e-8, 0.15920249), (0.80014104, 0.0064799637, 0.15920249), (0.80014104, 0.1545151, 0.15920249), (0.80014104, 0.15882537, 0.15920249), (0.80014104, 0.15882537, 0.16335832), (2.4, 0.32000002, 0.045599043), (2.4, 0.32000002, 1.1920929e-7), (2.4, 0.272588, 1.1920929e-7), (2.4, 0.0117769465, 1.1920929e-7), (2.4, 0, 1.1920929e-7), (2.4, 0, 0.0062111914), (2.4, 2.9802322e-8, 0.15416732), (2.4, 2.9802322e-8, 0.15920249), (2.4, 0.0064799637, 0.15920249), (2.4, 0.1545151, 0.15920249), (2.4, 0.15882537, 0.15920249), (2.4, 0.15882537, 0.16335832), (1.6, 0.32, 0.8003863), (1.6, 0.32000002, 0.045599043), (1.6, 0.32000002, 1.1920929e-7), (1.6, 0.272588, 1.1920929e-7), (1.6, 0.0117769465, 1.1920929e-7), (1.6, 0, 1.1920929e-7), (1.6, 0, 0.0062111914), (1.6, 2.9802322e-8, 0.15416732), (1.6, 2.9802322e-8, 0.15920249), (1.6, 0.0064799637, 0.15920249), (1.6, 0.1545151, 0.15920249), (1.6, 0.15882537, 0.15920249), (1.6, 0.15882537, 0.16335832), (1.6, 0.15882535, 0.8002651), (0.5876447, 0.32000014, 0.2123553), (0.4, 0.32000014, 0.13463032), (0.2123553, 0.32000014, 0.2123553), (0.13463032, 0.32000014, 0.4), (0.2123553, 0.32000014, 0.5876447), (0.4, 0.32000014, 0.6653697), (0.5876447, 0.32000014, 0.5876447), (0.66536975, 0.32000014, 0.4), (0.5876447, 0.48082992, 0.2123553), (0.4, 0.48082992, 0.13463032), (0.2123553, 0.48082992, 0.2123553), (0.13463032, 0.48082992, 0.4), (0.2123553, 0.48082992, 0.5876447), (0.4, 0.48082992, 0.6653697), (0.5876447, 0.48082992, 0.5876447), (0.66536975, 0.48082992, 0.4), (0.5679039, 0.48082992, 0.23209617), (0.4, 0.48082992, 0.16254812), (0.23209617, 0.48082992, 0.23209617), (0.16254814, 0.48082992, 0.4), (0.23209617, 0.48082992, 0.5679038), (0.4, 0.48082992, 0.6374518), (0.5679039, 0.48082992, 0.5679038), (0.63745195, 0.48082992, 0.4), (0.40000004, 0.48082992, 0.4), (0.2123553, 0.4642254, 0.5876447), (0.13463032, 0.4642254, 0.4), (0.2123553, 0.4642254, 0.2123553), (0.4, 0.4642254, 0.13463032), (0.5876447, 0.4642254, 0.2123553), (0.66536975, 0.4642254, 0.4), (0.5876447, 0.4642254, 0.5876447), (0.4, 0.4642254, 0.6653697), (1.3876448, 0.32000014, 0.2123553), (1.2, 0.32000014, 0.13463032), (1.0123553, 0.32000014, 0.2123553), (0.93463033, 0.32000014, 0.4), (1.0123553, 0.32000014, 0.5876447), (1.2, 0.32000014, 0.6653697), (1.3876448, 0.32000014, 0.5876447), (1.4653697, 0.32000014, 0.4), (1.3876448, 0.48082992, 0.2123553), (1.2, 0.48082992, 0.13463032), (1.0123553, 0.48082992, 0.2123553), (0.93463033, 0.48082992, 0.4), (1.0123553, 0.48082992, 0.5876447), (1.2, 0.48082992, 0.6653697), (1.3876448, 0.48082992, 0.5876447), (1.4653697, 0.48082992, 0.4), (1.367904, 0.48082992, 0.23209617), (1.2, 0.48082992, 0.16254812), (1.0320961, 0.48082992, 0.23209617), (0.96254814, 0.48082992, 0.4), (1.0320961, 0.48082992, 0.5679038), (1.2, 0.48082992, 0.6374518), (1.367904, 0.48082992, 0.5679038), (1.437452, 0.48082992, 0.4), (1.2, 0.48082992, 0.4), (1.0123553, 0.4642254, 0.5876447), (0.93463033, 0.4642254, 0.4), (1.0123553, 0.4642254, 0.2123553), (1.2, 0.4642254, 0.13463032), (1.3876448, 0.4642254, 0.2123553), (1.4653697, 0.4642254, 0.4), (1.3876448, 0.4642254, 0.5876447), (1.2, 0.4642254, 0.6653697), (2.1876447, 0.32000014, 0.2123553), (2, 0.32000014, 0.13463032), (1.8123553, 0.32000014, 0.2123553), (1.7346303, 0.32000014, 0.4), (1.8123553, 0.32000014, 0.5876447), (2, 0.32000014, 0.6653697), (2.1876447, 0.32000014, 0.5876447), (2.26537, 0.32000014, 0.4), (2.1876447, 0.48082992, 0.2123553), (2, 0.48082992, 0.13463032), (1.8123553, 0.48082992, 0.2123553), (1.7346303, 0.48082992, 0.4), (1.8123553, 0.48082992, 0.5876447), (2, 0.48082992, 0.6653697), (2.1876447, 0.48082992, 0.5876447), (2.26537, 0.48082992, 0.4), (2.167904, 0.48082992, 0.23209617), (2, 0.48082992, 0.16254812), (1.8320962, 0.48082992, 0.23209617), (1.7625482, 0.48082992, 0.4), (1.8320962, 0.48082992, 0.5679038), (2, 0.48082992, 0.6374518), (2.167904, 0.48082992, 0.5679038), (2.237452, 0.48082992, 0.4), (2, 0.48082992, 0.4), (1.8123553, 0.4642254, 0.5876447), (1.7346303, 0.4642254, 0.4), (1.8123553, 0.4642254, 0.2123553), (2, 0.4642254, 0.13463032), (2.1876447, 0.4642254, 0.2123553), (2.26537, 0.4642254, 0.4), (2.1876447, 0.4642254, 0.5876447), (2, 0.4642254, 0.6653697), (2.9876447, 0.32000014, 0.2123553), (2.8000002, 0.32000014, 0.13463032), (2.6123552, 0.32000014, 0.2123553), (2.5346303, 0.32000014, 0.4), (2.6123552, 0.32000014, 0.5876447), (2.8000002, 0.32000014, 0.6653697), (2.9876447, 0.32000014, 0.5876447), (3.0653696, 0.32000014, 0.4), (2.9876447, 0.48082992, 0.2123553), (2.8000002, 0.48082992, 0.13463032), (2.6123552, 0.48082992, 0.2123553), (2.5346303, 0.48082992, 0.4), (2.6123552, 0.48082992, 0.5876447), (2.8000002, 0.48082992, 0.6653697), (2.9876447, 0.48082992, 0.5876447), (3.0653696, 0.48082992, 0.4), (2.967904, 0.48082992, 0.23209617), (2.8000002, 0.48082992, 0.16254812), (2.6320963, 0.48082992, 0.23209617), (2.5625482, 0.48082992, 0.4), (2.6320963, 0.48082992, 0.5679038), (2.8000002, 0.48082992, 0.6374518), (2.967904, 0.48082992, 0.5679038), (3.037452, 0.48082992, 0.4), (2.8000002, 0.48082992, 0.4), (2.6123552, 0.4642254, 0.5876447), (2.5346303, 0.4642254, 0.4), (2.6123552, 0.4642254, 0.2123553), (2.8000002, 0.4642254, 0.13463032), (2.9876447, 0.4642254, 0.2123553), (3.0653696, 0.4642254, 0.4), (2.9876447, 0.4642254, 0.5876447), (2.8000002, 0.4642254, 0.6653697), (1.6, 0.32, 1.6000215), (1.6, 0.15882535, 1.600022), (2.187586, 0.32000014, 1.3877462), (2.265311, 0.32000014, 1.2001015), (2.187586, 0.32000014, 1.0124568), (1.9999413, 0.32000014, 0.93473184), (1.8122966, 0.32000014, 1.0124568), (1.7345717, 0.32000014, 1.2001015), (1.8122966, 0.32000014, 1.3877462), (1.9999413, 0.32000014, 1.4654711), (2.187586, 0.48082992, 1.3877462), (2.265311, 0.48082992, 1.2001015), (2.187586, 0.48082992, 1.0124568), (1.9999413, 0.48082992, 0.93473184), (1.8122966, 0.48082992, 1.0124568), (1.7345717, 0.48082992, 1.2001015), (1.8122966, 0.48082992, 1.3877462), (1.9999413, 0.48082992, 1.4654711), (2.1678452, 0.48082992, 1.3680054), (2.2373934, 0.48082992, 1.2001015), (2.1678452, 0.48082992, 1.0321976), (1.9999413, 0.48082992, 0.96264964), (1.8320376, 0.48082992, 1.0321976), (1.7624896, 0.48082992, 1.2001015), (1.8320376, 0.48082992, 1.3680054), (1.9999413, 0.48082992, 1.4375534), (1.9999413, 0.48082992, 1.2001015), (1.8122966, 0.4642254, 1.0124568), (1.9999413, 0.4642254, 0.93473184), (2.187586, 0.4642254, 1.0124568), (2.265311, 0.4642254, 1.2001015), (2.187586, 0.4642254, 1.3877462), (1.9999413, 0.4642254, 1.4654711), (1.8122966, 0.4642254, 1.3877462), (1.7345717, 0.4642254, 1.2001015), (2.187586, 0.32000014, 2.1877463), (2.265311, 0.32000014, 2.0001016), (2.187586, 0.32000014, 1.8124567), (1.9999413, 0.32000014, 1.7347318), (1.8122966, 0.32000014, 1.8124567), (1.7345717, 0.32000014, 2.0001016), (1.8122966, 0.32000014, 2.1877463), (1.9999413, 0.32000014, 2.2654715), (2.187586, 0.48082992, 2.1877463), (2.265311, 0.48082992, 2.0001016), (2.187586, 0.48082992, 1.8124567), (1.9999413, 0.48082992, 1.7347318), (1.8122966, 0.48082992, 1.8124567), (1.7345717, 0.48082992, 2.0001016), (1.8122966, 0.48082992, 2.1877463), (1.9999413, 0.48082992, 2.2654715), (2.1678452, 0.48082992, 2.1680055), (2.2373934, 0.48082992, 2.0001016), (2.1678452, 0.48082992, 1.8321977), (1.9999413, 0.48082992, 1.7626497), (1.8320376, 0.48082992, 1.8321977), (1.7624896, 0.48082992, 2.0001016), (1.8320376, 0.48082992, 2.1680055), (1.9999413, 0.48082992, 2.2375536), (1.9999413, 0.48082992, 2.0001016), (1.8122966, 0.4642254, 1.8124567), (1.9999413, 0.4642254, 1.7347318), (2.187586, 0.4642254, 1.8124567), (2.265311, 0.4642254, 2.0001016), (2.187586, 0.4642254, 2.1877463), (1.9999413, 0.4642254, 2.2654715), (1.8122966, 0.4642254, 2.1877463), (1.7345717, 0.4642254, 2.0001016), (1.3875861, 0.32000014, 1.3877462), (1.465311, 0.32000014, 1.2001015), (1.3875861, 0.32000014, 1.0124568), (1.1999414, 0.32000014, 0.93473184), (1.0122967, 0.32000014, 1.0124568), (0.9345717, 0.32000014, 1.2001015), (1.0122967, 0.32000014, 1.3877462), (1.1999414, 0.32000014, 1.4654711), (1.3875861, 0.48082992, 1.3877462), (1.465311, 0.48082992, 1.2001015), (1.3875861, 0.48082992, 1.0124568), (1.1999414, 0.48082992, 0.93473184), (1.0122967, 0.48082992, 1.0124568), (0.9345717, 0.48082992, 1.2001015), (1.0122967, 0.48082992, 1.3877462), (1.1999414, 0.48082992, 1.4654711), (1.3678453, 0.48082992, 1.3680054), (1.4373932, 0.48082992, 1.2001015), (1.3678453, 0.48082992, 1.0321976), (1.1999414, 0.48082992, 0.96264964), (1.0320375, 0.48082992, 1.0321976), (0.96248955, 0.48082992, 1.2001015), (1.0320375, 0.48082992, 1.3680054), (1.1999414, 0.48082992, 1.4375534), (1.1999414, 0.48082992, 1.2001015), (1.0122967, 0.4642254, 1.0124568), (1.1999414, 0.4642254, 0.93473184), (1.3875861, 0.4642254, 1.0124568), (1.465311, 0.4642254, 1.2001015), (1.3875861, 0.4642254, 1.3877462), (1.1999414, 0.4642254, 1.4654711), (1.0122967, 0.4642254, 1.3877462), (0.9345717, 0.4642254, 1.2001015), (1.3875861, 0.32000014, 2.1877463), (1.465311, 0.32000014, 2.0001016), (1.3875861, 0.32000014, 1.8124567), (1.1999414, 0.32000014, 1.7347318), (1.0122967, 0.32000014, 1.8124567), (0.9345717, 0.32000014, 2.0001016), (1.0122967, 0.32000014, 2.1877463), (1.1999414, 0.32000014, 2.2654715), (1.3875861, 0.48082992, 2.1877463), (1.465311, 0.48082992, 2.0001016), (1.3875861, 0.48082992, 1.8124567), (1.1999414, 0.48082992, 1.7347318), (1.0122967, 0.48082992, 1.8124567), (0.9345717, 0.48082992, 2.0001016), (1.0122967, 0.48082992, 2.1877463), (1.1999414, 0.48082992, 2.2654715), (1.3678453, 0.48082992, 2.1680055), (1.4373932, 0.48082992, 2.0001016), (1.3678453, 0.48082992, 1.8321977), (1.1999414, 0.48082992, 1.7626497), (1.0320375, 0.48082992, 1.8321977), (0.96248955, 0.48082992, 2.0001016), (1.0320375, 0.48082992, 2.1680055), (1.1999414, 0.48082992, 2.2375536), (1.1999414, 0.48082992, 2.0001016), (1.0122967, 0.4642254, 1.8124567), (1.1999414, 0.4642254, 1.7347318), (1.3875861, 0.4642254, 1.8124567), (1.465311, 0.4642254, 2.0001016), (1.3875861, 0.4642254, 2.1877463), (1.1999414, 0.4642254, 2.2654715), (1.0122967, 0.4642254, 2.1877463), (0.9345717, 0.4642254, 2.0001016)]
                            float3 xformOp:translate:pivot = (1.5999199, 0.24041496, 1.6000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_4x6_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_4x6_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (2.39992, 0.24041496, 1.6000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_4x8_grp"
                    {
                        def Mesh "Wall_e_RIG_v001_plate_4x8_001_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(-0.000101327896, -4.349679e-19, 1.1920929e-7), (6.3999414, 0.48082992, 3.2000427)]
                            int[] faceVertexCounts
                            int[] faceVertexIndices = [4, 0, 25, 23, 22, 21, 23, 25, 5, 21, 22, 2, 6, 15, 16, 3, 31, 29, 7, 1, 30, 31, 1, 9, 10, 9, 1, 7, 12, 11, 6, 3, 16, 14, 12, 3, 22, 20, 13, 2, 0, 8, 24, 25, 16, 15, 18, 19, 19, 17, 14, 16, 19, 18, 5, 2, 2, 13, 17, 19, 22, 25, 24, 20, 8, 0, 28, 27, 0, 4, 26, 28, 27, 28, 31, 30, 28, 26, 29, 31, 23, 21, 32, 43, 33, 32, 21, 5, 18, 34, 33, 5, 15, 35, 34, 18, 36, 35, 15, 6, 11, 37, 36, 6, 39, 38, 10, 7, 7, 29, 40, 39, 29, 26, 41, 40, 26, 4, 42, 41, 43, 42, 4, 23, 100, 101, 37, 11, 102, 100, 11, 12, 14, 103, 102, 12, 17, 104, 103, 14, 13, 105, 104, 17, 20, 106, 105, 13, 20, 24, 107, 106, 24, 8, 108, 107, 27, 109, 108, 8, 30, 110, 109, 27, 111, 110, 30, 9, 112, 111, 9, 10, 38, 113, 112, 10, 64, 41, 42, 63, 65, 40, 41, 64, 39, 40, 65, 66, 38, 39, 66, 67, 36, 37, 56, 57, 58, 35, 36, 57, 59, 34, 35, 58, 60, 33, 34, 59, 61, 32, 33, 60, 61, 62, 43, 32, 62, 63, 42, 43, 37, 101, 114, 56, 67, 115, 113, 38, 56, 114, 116, 44, 57, 56, 44, 45, 46, 58, 57, 45, 47, 59, 58, 46, 48, 60, 59, 47, 49, 61, 60, 48, 49, 50, 62, 61, 50, 51, 63, 62, 52, 64, 63, 51, 53, 65, 64, 52, 66, 65, 53, 54, 67, 66, 54, 55, 55, 117, 115, 67, 80, 97, 98, 68, 69, 81, 91, 92, 90, 89, 92, 91, 89, 90, 76, 70, 83, 84, 77, 71, 72, 79, 80, 68, 99, 72, 68, 98, 93, 73, 69, 92, 89, 88, 93, 92, 74, 88, 89, 70, 75, 82, 83, 71, 78, 75, 71, 77, 90, 49, 48, 76, 77, 84, 46, 45, 44, 78, 77, 45, 80, 79, 55, 54, 54, 53, 97, 80, 91, 81, 51, 50, 49, 90, 91, 50, 83, 82, 85, 86, 86, 87, 84, 83, 46, 84, 87, 47, 86, 85, 74, 70, 70, 76, 87, 86, 47, 87, 76, 48, 52, 51, 81, 94, 95, 94, 81, 69, 73, 96, 95, 69, 53, 52, 94, 97, 98, 97, 94, 95, 96, 99, 98, 95, 118, 117, 55, 79, 119, 118, 79, 72, 120, 119, 72, 99, 121, 120, 99, 96, 122, 121, 96, 73, 123, 122, 73, 93, 93, 88, 124, 123, 125, 124, 88, 74, 85, 126, 125, 74, 82, 127, 126, 85, 128, 127, 82, 75, 129, 128, 75, 78, 116, 129, 78, 44, 130, 131, 167, 168, 131, 132, 166, 167, 132, 133, 165, 166, 133, 134, 164, 165, 134, 135, 163, 164, 135, 136, 162, 163, 136, 137, 169, 162, 137, 130, 168, 169, 131, 130, 172, 173, 132, 131, 173, 174, 133, 132, 174, 175, 134, 133, 175, 176, 135, 134, 176, 177, 136, 135, 177, 170, 137, 136, 170, 171, 130, 137, 171, 172, 147, 146, 188, 189, 148, 147, 189, 190, 149, 148, 190, 191, 150, 149, 191, 192, 151, 150, 192, 193, 152, 151, 193, 186, 153, 152, 186, 187, 146, 153, 187, 188, 163, 162, 144, 143, 164, 163, 143, 142, 165, 164, 142, 141, 166, 165, 141, 140, 167, 166, 140, 139, 168, 167, 139, 138, 169, 168, 138, 145, 162, 169, 145, 144, 171, 170, 178, 179, 172, 171, 179, 180, 173, 172, 180, 181, 174, 173, 181, 182, 175, 174, 182, 183, 176, 175, 183, 184, 177, 176, 184, 185, 170, 177, 185, 178, 179, 178, 152, 153, 180, 179, 153, 146, 181, 180, 146, 147, 182, 181, 147, 148, 183, 182, 148, 149, 184, 183, 149, 150, 185, 184, 150, 151, 178, 185, 151, 152, 187, 186, 160, 161, 188, 187, 161, 154, 189, 188, 154, 155, 190, 189, 155, 156, 191, 190, 156, 157, 192, 191, 157, 158, 193, 192, 158, 159, 186, 193, 159, 160, 194, 195, 231, 232, 195, 196, 230, 231, 196, 197, 229, 230, 197, 198, 228, 229, 198, 199, 227, 228, 199, 200, 226, 227, 200, 201, 233, 226, 201, 194, 232, 233, 195, 194, 236, 237, 196, 195, 237, 238, 197, 196, 238, 239, 198, 197, 239, 240, 199, 198, 240, 241, 200, 199, 241, 234, 201, 200, 234, 235, 194, 201, 235, 236, 211, 210, 252, 253, 212, 211, 253, 254, 213, 212, 254, 255, 214, 213, 255, 256, 215, 214, 256, 257, 216, 215, 257, 250, 217, 216, 250, 251, 210, 217, 251, 252, 227, 226, 208, 207, 228, 227, 207, 206, 229, 228, 206, 205, 230, 229, 205, 204, 231, 230, 204, 203, 232, 231, 203, 202, 233, 232, 202, 209, 226, 233, 209, 208, 235, 234, 242, 243, 236, 235, 243, 244, 237, 236, 244, 245, 238, 237, 245, 246, 239, 238, 246, 247, 240, 239, 247, 248, 241, 240, 248, 249, 234, 241, 249, 242, 243, 242, 216, 217, 244, 243, 217, 210, 245, 244, 210, 211, 246, 245, 211, 212, 247, 246, 212, 213, 248, 247, 213, 214, 249, 248, 214, 215, 242, 249, 215, 216, 251, 250, 224, 225, 252, 251, 225, 218, 253, 252, 218, 219, 254, 253, 219, 220, 255, 254, 220, 221, 256, 255, 221, 222, 257, 256, 222, 223, 250, 257, 223, 224, 258, 259, 295, 296, 259, 260, 294, 295, 260, 261, 293, 294, 261, 262, 292, 293, 262, 263, 291, 292, 263, 264, 290, 291, 264, 265, 297, 290, 265, 258, 296, 297, 259, 258, 300, 301, 260, 259, 301, 302, 261, 260, 302, 303, 262, 261, 303, 304, 263, 262, 304, 305, 264, 263, 305, 298, 265, 264, 298, 299, 258, 265, 299, 300, 275, 274, 316, 317, 276, 275, 317, 318, 277, 276, 318, 319, 278, 277, 319, 320, 279, 278, 320, 321, 280, 279, 321, 314, 281, 280, 314, 315, 274, 281, 315, 316, 291, 290, 272, 271, 292, 291, 271, 270, 293, 292, 270, 269, 294, 293, 269, 268, 295, 294, 268, 267, 296, 295, 267, 266, 297, 296, 266, 273, 290, 297, 273, 272, 299, 298, 306, 307, 300, 299, 307, 308, 301, 300, 308, 309, 302, 301, 309, 310, 303, 302, 310, 311, 304, 303, 311, 312, 305, 304, 312, 313, 298, 305, 313, 306, 307, 306, 280, 281, 308, 307, 281, 274, 309, 308, 274, 275, 310, 309, 275, 276, 311, 310, 276, 277, 312, 311, 277, 278, 313, 312, 278, 279, 306, 313, 279, 280, 315, 314, 288, 289, 316, 315, 289, 282, 317, 316, 282, 283, 318, 317, 283, 284, 319, 318, 284, 285, 320, 319, 285, 286, 321, 320, 286, 287, 314, 321, 287, 288, 322, 323, 350, 351, 323, 324, 349, 350, 324, 325, 348, 349, 325, 326, 347, 348, 326, 327, 354, 347, 327, 328, 353, 354, 328, 329, 352, 353, 329, 322, 351, 352, 330, 331, 339, 338, 331, 332, 340, 339, 332, 333, 341, 340, 333, 334, 342, 341, 334, 335, 343, 342, 335, 336, 344, 343, 336, 337, 345, 344, 337, 330, 338, 345, 346, 339, 340, 341, 346, 341, 342, 343, 346, 343, 344, 345, 346, 345, 338, 339, 348, 347, 334, 333, 349, 348, 333, 332, 350, 349, 332, 331, 351, 350, 331, 330, 352, 351, 330, 337, 353, 352, 337, 336, 354, 353, 336, 335, 347, 354, 335, 334, 355, 356, 383, 384, 356, 357, 382, 383, 357, 358, 381, 382, 358, 359, 380, 381, 359, 360, 387, 380, 360, 361, 386, 387, 361, 362, 385, 386, 362, 355, 384, 385, 363, 364, 372, 371, 364, 365, 373, 372, 365, 366, 374, 373, 366, 367, 375, 374, 367, 368, 376, 375, 368, 369, 377, 376, 369, 370, 378, 377, 370, 363, 371, 378, 379, 372, 373, 374, 379, 374, 375, 376, 379, 376, 377, 378, 379, 378, 371, 372, 381, 380, 367, 366, 382, 381, 366, 365, 383, 382, 365, 364, 384, 383, 364, 363, 385, 384, 363, 370, 386, 385, 370, 369, 387, 386, 369, 368, 380, 387, 368, 367, 388, 389, 416, 417, 389, 390, 415, 416, 390, 391, 414, 415, 391, 392, 413, 414, 392, 393, 420, 413, 393, 394, 419, 420, 394, 395, 418, 419, 395, 388, 417, 418, 396, 397, 405, 404, 397, 398, 406, 405, 398, 399, 407, 406, 399, 400, 408, 407, 400, 401, 409, 408, 401, 402, 410, 409, 402, 403, 411, 410, 403, 396, 404, 411, 412, 405, 406, 407, 412, 407, 408, 409, 412, 409, 410, 411, 412, 411, 404, 405, 414, 413, 400, 399, 415, 414, 399, 398, 416, 415, 398, 397, 417, 416, 397, 396, 418, 417, 396, 403, 419, 418, 403, 402, 420, 419, 402, 401, 413, 420, 401, 400, 421, 422, 449, 450, 422, 423, 448, 449, 423, 424, 447, 448, 424, 425, 446, 447, 425, 426, 453, 446, 426, 427, 452, 453, 427, 428, 451, 452, 428, 421, 450, 451, 429, 430, 438, 437, 430, 431, 439, 438, 431, 432, 440, 439, 432, 433, 441, 440, 433, 434, 442, 441, 434, 435, 443, 442, 435, 436, 444, 443, 436, 429, 437, 444, 445, 438, 439, 440, 445, 440, 441, 442, 445, 442, 443, 444, 445, 444, 437, 438, 447, 446, 433, 432, 448, 447, 432, 431, 449, 448, 431, 430, 450, 449, 430, 429, 451, 450, 429, 436, 452, 451, 436, 435, 453, 452, 435, 434, 446, 453, 434, 433, 454, 455, 482, 483, 455, 456, 481, 482, 456, 457, 480, 481, 457, 458, 479, 480, 458, 459, 486, 479, 459, 460, 485, 486, 460, 461, 484, 485, 461, 454, 483, 484, 462, 463, 471, 470, 463, 464, 472, 471, 464, 465, 473, 472, 465, 466, 474, 473, 466, 467, 475, 474, 467, 468, 476, 475, 468, 469, 477, 476, 469, 462, 470, 477, 478, 471, 472, 473, 478, 473, 474, 475, 478, 475, 476, 477, 478, 477, 470, 471, 480, 479, 466, 465, 481, 480, 465, 464, 482, 481, 464, 463, 483, 482, 463, 462, 484, 483, 462, 469, 485, 484, 469, 468, 486, 485, 468, 467, 479, 486, 467, 466, 511, 547, 548, 510, 512, 549, 547, 511, 550, 549, 512, 513, 551, 550, 513, 514, 552, 553, 503, 504, 505, 554, 552, 504, 506, 555, 554, 505, 507, 556, 555, 506, 508, 557, 556, 507, 508, 509, 558, 557, 509, 510, 548, 558, 553, 559, 502, 503, 514, 501, 560, 551, 503, 502, 488, 489, 504, 503, 489, 490, 491, 505, 504, 490, 492, 506, 505, 491, 493, 507, 506, 492, 494, 508, 507, 493, 494, 495, 509, 508, 495, 496, 510, 509, 497, 511, 510, 496, 498, 512, 511, 497, 513, 512, 498, 499, 514, 513, 499, 500, 500, 487, 501, 514, 561, 562, 531, 532, 563, 561, 532, 533, 564, 563, 533, 534, 565, 564, 534, 535, 566, 565, 535, 536, 567, 566, 536, 537, 537, 538, 568, 567, 569, 568, 538, 539, 540, 570, 569, 539, 541, 571, 570, 540, 572, 571, 541, 542, 573, 572, 542, 543, 574, 573, 543, 544, 532, 531, 515, 519, 533, 532, 519, 520, 534, 533, 520, 521, 535, 534, 521, 522, 536, 535, 522, 523, 537, 536, 523, 524, 524, 525, 538, 537, 539, 538, 525, 526, 527, 540, 539, 526, 528, 541, 540, 527, 542, 541, 528, 529, 543, 542, 529, 530, 544, 543, 530, 516, 545, 517, 515, 531, 518, 546, 544, 516, 575, 545, 531, 562, 501, 545, 575, 560, 501, 487, 517, 545, 546, 576, 574, 544, 502, 546, 518, 488, 502, 559, 576, 546, 577, 578, 614, 615, 578, 579, 613, 614, 579, 580, 612, 613, 580, 581, 611, 612, 581, 582, 610, 611, 582, 583, 609, 610, 583, 584, 616, 609, 584, 577, 615, 616, 578, 577, 619, 620, 579, 578, 620, 621, 580, 579, 621, 622, 581, 580, 622, 623, 582, 581, 623, 624, 583, 582, 624, 617, 584, 583, 617, 618, 577, 584, 618, 619, 594, 593, 635, 636, 595, 594, 636, 637, 596, 595, 637, 638, 597, 596, 638, 639, 598, 597, 639, 640, 599, 598, 640, 633, 600, 599, 633, 634, 593, 600, 634, 635, 610, 609, 591, 590, 611, 610, 590, 589, 612, 611, 589, 588, 613, 612, 588, 587, 614, 613, 587, 586, 615, 614, 586, 585, 616, 615, 585, 592, 609, 616, 592, 591, 618, 617, 625, 626, 619, 618, 626, 627, 620, 619, 627, 628, 621, 620, 628, 629, 622, 621, 629, 630, 623, 622, 630, 631, 624, 623, 631, 632, 617, 624, 632, 625, 626, 625, 599, 600, 627, 626, 600, 593, 628, 627, 593, 594, 629, 628, 594, 595, 630, 629, 595, 596, 631, 630, 596, 597, 632, 631, 597, 598, 625, 632, 598, 599, 634, 633, 607, 608, 635, 634, 608, 601, 636, 635, 601, 602, 637, 636, 602, 603, 638, 637, 603, 604, 639, 638, 604, 605, 640, 639, 605, 606, 633, 640, 606, 607, 641, 642, 678, 679, 642, 643, 677, 678, 643, 644, 676, 677, 644, 645, 675, 676, 645, 646, 674, 675, 646, 647, 673, 674, 647, 648, 680, 673, 648, 641, 679, 680, 642, 641, 683, 684, 643, 642, 684, 685, 644, 643, 685, 686, 645, 644, 686, 687, 646, 645, 687, 688, 647, 646, 688, 681, 648, 647, 681, 682, 641, 648, 682, 683, 658, 657, 699, 700, 659, 658, 700, 701, 660, 659, 701, 702, 661, 660, 702, 703, 662, 661, 703, 704, 663, 662, 704, 697, 664, 663, 697, 698, 657, 664, 698, 699, 674, 673, 655, 654, 675, 674, 654, 653, 676, 675, 653, 652, 677, 676, 652, 651, 678, 677, 651, 650, 679, 678, 650, 649, 680, 679, 649, 656, 673, 680, 656, 655, 682, 681, 689, 690, 683, 682, 690, 691, 684, 683, 691, 692, 685, 684, 692, 693, 686, 685, 693, 694, 687, 686, 694, 695, 688, 687, 695, 696, 681, 688, 696, 689, 690, 689, 663, 664, 691, 690, 664, 657, 692, 691, 657, 658, 693, 692, 658, 659, 694, 693, 659, 660, 695, 694, 660, 661, 696, 695, 661, 662, 689, 696, 662, 663, 698, 697, 671, 672, 699, 698, 672, 665, 700, 699, 665, 666, 701, 700, 666, 667, 702, 701, 667, 668, 703, 702, 668, 669, 704, 703, 669, 670, 697, 704, 670, 671, 705, 706, 742, 743, 706, 707, 741, 742, 707, 708, 740, 741, 708, 709, 739, 740, 709, 710, 738, 739, 710, 711, 737, 738, 711, 712, 744, 737, 712, 705, 743, 744, 706, 705, 747, 748, 707, 706, 748, 749, 708, 707, 749, 750, 709, 708, 750, 751, 710, 709, 751, 752, 711, 710, 752, 745, 712, 711, 745, 746, 705, 712, 746, 747, 722, 721, 763, 764, 723, 722, 764, 765, 724, 723, 765, 766, 725, 724, 766, 767, 726, 725, 767, 768, 727, 726, 768, 761, 728, 727, 761, 762, 721, 728, 762, 763, 738, 737, 719, 718, 739, 738, 718, 717, 740, 739, 717, 716, 741, 740, 716, 715, 742, 741, 715, 714, 743, 742, 714, 713, 744, 743, 713, 720, 737, 744, 720, 719, 746, 745, 753, 754, 747, 746, 754, 755, 748, 747, 755, 756, 749, 748, 756, 757, 750, 749, 757, 758, 751, 750, 758, 759, 752, 751, 759, 760, 745, 752, 760, 753, 754, 753, 727, 728, 755, 754, 728, 721, 756, 755, 721, 722, 757, 756, 722, 723, 758, 757, 723, 724, 759, 758, 724, 725, 760, 759, 725, 726, 753, 760, 726, 727, 762, 761, 735, 736, 763, 762, 736, 729, 764, 763, 729, 730, 765, 764, 730, 731, 766, 765, 731, 732, 767, 766, 732, 733, 768, 767, 733, 734, 761, 768, 734, 735, 769, 770, 806, 807, 770, 771, 805, 806, 771, 772, 804, 805, 772, 773, 803, 804, 773, 774, 802, 803, 774, 775, 801, 802, 775, 776, 808, 801, 776, 769, 807, 808, 770, 769, 811, 812, 771, 770, 812, 813, 772, 771, 813, 814, 773, 772, 814, 815, 774, 773, 815, 816, 775, 774, 816, 809, 776, 775, 809, 810, 769, 776, 810, 811, 786, 785, 827, 828, 787, 786, 828, 829, 788, 787, 829, 830, 789, 788, 830, 831, 790, 789, 831, 832, 791, 790, 832, 825, 792, 791, 825, 826, 785, 792, 826, 827, 802, 801, 783, 782, 803, 802, 782, 781, 804, 803, 781, 780, 805, 804, 780, 779, 806, 805, 779, 778, 807, 806, 778, 777, 808, 807, 777, 784, 801, 808, 784, 783, 810, 809, 817, 818, 811, 810, 818, 819, 812, 811, 819, 820, 813, 812, 820, 821, 814, 813, 821, 822, 815, 814, 822, 823, 816, 815, 823, 824, 809, 816, 824, 817, 818, 817, 791, 792, 819, 818, 792, 785, 820, 819, 785, 786, 821, 820, 786, 787, 822, 821, 787, 788, 823, 822, 788, 789, 824, 823, 789, 790, 817, 824, 790, 791, 826, 825, 799, 800, 827, 826, 800, 793, 828, 827, 793, 794, 829, 828, 794, 795, 830, 829, 795, 796, 831, 830, 796, 797, 832, 831, 797, 798, 825, 832, 798, 799, 833, 834, 870, 871, 834, 835, 869, 870, 835, 836, 868, 869, 836, 837, 867, 868, 837, 838, 866, 867, 838, 839, 865, 866, 839, 840, 872, 865, 840, 833, 871, 872, 834, 833, 875, 876, 835, 834, 876, 877, 836, 835, 877, 878, 837, 836, 878, 879, 838, 837, 879, 880, 839, 838, 880, 873, 840, 839, 873, 874, 833, 840, 874, 875, 850, 849, 891, 892, 851, 850, 892, 893, 852, 851, 893, 894, 853, 852, 894, 895, 854, 853, 895, 896, 855, 854, 896, 889, 856, 855, 889, 890, 849, 856, 890, 891, 866, 865, 847, 846, 867, 866, 846, 845, 868, 867, 845, 844, 869, 868, 844, 843, 870, 869, 843, 842, 871, 870, 842, 841, 872, 871, 841, 848, 865, 872, 848, 847, 874, 873, 881, 882, 875, 874, 882, 883, 876, 875, 883, 884, 877, 876, 884, 885, 878, 877, 885, 886, 879, 878, 886, 887, 880, 879, 887, 888, 873, 880, 888, 881, 882, 881, 855, 856, 883, 882, 856, 849, 884, 883, 849, 850, 885, 884, 850, 851, 886, 885, 851, 852, 887, 886, 852, 853, 888, 887, 853, 854, 881, 888, 854, 855, 890, 889, 863, 864, 891, 890, 864, 857, 892, 891, 857, 858, 893, 892, 858, 859, 894, 893, 859, 860, 895, 894, 860, 861, 896, 895, 861, 862, 889, 896, 862, 863, 897, 898, 934, 935, 898, 899, 933, 934, 899, 900, 932, 933, 900, 901, 931, 932, 901, 902, 930, 931, 902, 903, 929, 930, 903, 904, 936, 929, 904, 897, 935, 936, 898, 897, 939, 940, 899, 898, 940, 941, 900, 899, 941, 942, 901, 900, 942, 943, 902, 901, 943, 944, 903, 902, 944, 937, 904, 903, 937, 938, 897, 904, 938, 939, 914, 913, 955, 956, 915, 914, 956, 957, 916, 915, 957, 958, 917, 916, 958, 959, 918, 917, 959, 960, 919, 918, 960, 953, 920, 919, 953, 954, 913, 920, 954, 955, 930, 929, 911, 910, 931, 930, 910, 909, 932, 931, 909, 908, 933, 932, 908, 907, 934, 933, 907, 906, 935, 934, 906, 905, 936, 935, 905, 912, 929, 936, 912, 911, 938, 937, 945, 946, 939, 938, 946, 947, 940, 939, 947, 948, 941, 940, 948, 949, 942, 941, 949, 950, 943, 942, 950, 951, 944, 943, 951, 952, 937, 944, 952, 945, 946, 945, 919, 920, 947, 946, 920, 913, 948, 947, 913, 914, 949, 948, 914, 915, 950, 949, 915, 916, 951, 950, 916, 917, 952, 951, 917, 918, 945, 952, 918, 919, 954, 953, 927, 928, 955, 954, 928, 921, 956, 955, 921, 922, 957, 956, 922, 923, 958, 957, 923, 924, 959, 958, 924, 925, 960, 959, 925, 926, 953, 960, 926, 927, 961, 962, 987, 988, 962, 963, 986, 987, 963, 964, 985, 986, 964, 965, 984, 985, 965, 966, 991, 984, 966, 967, 990, 991, 967, 968, 989, 990, 968, 961, 988, 989, 969, 970, 976, 975, 970, 971, 977, 976, 971, 972, 978, 977, 972, 973, 979, 978, 973, 992, 980, 979, 992, 993, 981, 980, 993, 974, 982, 981, 974, 969, 975, 982, 983, 976, 977, 978, 983, 978, 979, 980, 983, 980, 981, 982, 983, 982, 975, 976, 985, 984, 973, 972, 986, 985, 972, 971, 987, 986, 971, 970, 988, 987, 970, 969, 989, 988, 969, 974, 990, 989, 974, 993, 984, 991, 992, 973, 994, 995, 1022, 1023, 995, 996, 1021, 1022, 996, 997, 1020, 1021, 997, 998, 1019, 1020, 998, 999, 1026, 1019, 999, 1000, 1025, 1026, 1000, 1001, 1024, 1025, 1001, 994, 1023, 1024, 1002, 1003, 1011, 1010, 1003, 1004, 1012, 1011, 1004, 1005, 1013, 1012, 1005, 1006, 1014, 1013, 1006, 1007, 1015, 1014, 1007, 1008, 1016, 1015, 1008, 1009, 1017, 1016, 1009, 1002, 1010, 1017, 1018, 1011, 1012, 1013, 1018, 1013, 1014, 1015, 1018, 1015, 1016, 1017, 1018, 1017, 1010, 1011, 1020, 1019, 1006, 1005, 1021, 1020, 1005, 1004, 1022, 1021, 1004, 1003, 1023, 1022, 1003, 1002, 1024, 1023, 1002, 1009, 1025, 1024, 1009, 1008, 1026, 1025, 1008, 1007, 1019, 1026, 1007, 1006, 1027, 1028, 1055, 1056, 1028, 1029, 1054, 1055, 1029, 1030, 1053, 1054, 1030, 1031, 1052, 1053, 1031, 1032, 1059, 1052, 1032, 1033, 1058, 1059, 1033, 1034, 1057, 1058, 1034, 1027, 1056, 1057, 1035, 1036, 1044, 1043, 1036, 1037, 1045, 1044, 1037, 1038, 1046, 1045, 1038, 1039, 1047, 1046, 1039, 1040, 1048, 1047, 1040, 1041, 1049, 1048, 1041, 1042, 1050, 1049, 1042, 1035, 1043, 1050, 1051, 1044, 1045, 1046, 1051, 1046, 1047, 1048, 1051, 1048, 1049, 1050, 1051, 1050, 1043, 1044, 1053, 1052, 1039, 1038, 1054, 1053, 1038, 1037, 1055, 1054, 1037, 1036, 1056, 1055, 1036, 1035, 1057, 1056, 1035, 1042, 1058, 1057, 1042, 1041, 1059, 1058, 1041, 1040, 1052, 1059, 1040, 1039, 1060, 1061, 1088, 1089, 1061, 1062, 1087, 1088, 1062, 1063, 1086, 1087, 1063, 1064, 1085, 1086, 1064, 1065, 1092, 1085, 1065, 1066, 1091, 1092, 1066, 1067, 1090, 1091, 1067, 1060, 1089, 1090, 1068, 1069, 1077, 1076, 1069, 1070, 1078, 1077, 1070, 1071, 1079, 1078, 1071, 1072, 1080, 1079, 1072, 1073, 1081, 1080, 1073, 1074, 1082, 1081, 1074, 1075, 1083, 1082, 1075, 1068, 1076, 1083, 1084, 1077, 1078, 1079, 1084, 1079, 1080, 1081, 1084, 1081, 1082, 1083, 1084, 1083, 1076, 1077, 1086, 1085, 1072, 1071, 1087, 1086, 1071, 1070, 1088, 1087, 1070, 1069, 1089, 1088, 1069, 1068, 1090, 1089, 1068, 1075, 1091, 1090, 1075, 1074, 1092, 1091, 1074, 1073, 1085, 1092, 1073, 1072, 1093, 1094, 1121, 1122, 1094, 1095, 1120, 1121, 1095, 1096, 1119, 1120, 1096, 1097, 1118, 1119, 1097, 1098, 1125, 1118, 1098, 1099, 1124, 1125, 1099, 1100, 1123, 1124, 1100, 1093, 1122, 1123, 1101, 1102, 1110, 1109, 1102, 1103, 1111, 1110, 1103, 1104, 1112, 1111, 1104, 1105, 1113, 1112, 1105, 1106, 1114, 1113, 1106, 1107, 1115, 1114, 1107, 1108, 1116, 1115, 1108, 1101, 1109, 1116, 1117, 1110, 1111, 1112, 1117, 1112, 1113, 1114, 1117, 1114, 1115, 1116, 1117, 1116, 1109, 1110, 1119, 1118, 1105, 1104, 1120, 1119, 1104, 1103, 1121, 1120, 1103, 1102, 1122, 1121, 1102, 1101, 1123, 1122, 1101, 1108, 1124, 1123, 1108, 1107, 1125, 1124, 1107, 1106, 1118, 1125, 1106, 1105, 1126, 1127, 1154, 1155, 1127, 1128, 1153, 1154, 1128, 1129, 1152, 1153, 1129, 1130, 1151, 1152, 1130, 1131, 1158, 1151, 1131, 1132, 1157, 1158, 1132, 1133, 1156, 1157, 1133, 1126, 1155, 1156, 1134, 1135, 1143, 1142, 1135, 1136, 1144, 1143, 1136, 1137, 1145, 1144, 1137, 1138, 1146, 1145, 1138, 1139, 1147, 1146, 1139, 1140, 1148, 1147, 1140, 1141, 1149, 1148, 1141, 1134, 1142, 1149, 1150, 1143, 1144, 1145, 1150, 1145, 1146, 1147, 1150, 1147, 1148, 1149, 1150, 1149, 1142, 1143, 1152, 1151, 1138, 1137, 1153, 1152, 1137, 1136, 1154, 1153, 1136, 1135, 1155, 1154, 1135, 1134, 1156, 1155, 1134, 1141, 1157, 1156, 1141, 1140, 1158, 1157, 1140, 1139, 1151, 1158, 1139, 1138, 1159, 1160, 1187, 1188, 1160, 1161, 1186, 1187, 1161, 1162, 1185, 1186, 1162, 1163, 1184, 1185, 1163, 1164, 1191, 1184, 1164, 1165, 1190, 1191, 1165, 1166, 1189, 1190, 1166, 1159, 1188, 1189, 1167, 1168, 1176, 1175, 1168, 1169, 1177, 1176, 1169, 1170, 1178, 1177, 1170, 1171, 1179, 1178, 1171, 1172, 1180, 1179, 1172, 1173, 1181, 1180, 1173, 1174, 1182, 1181, 1174, 1167, 1175, 1182, 1183, 1176, 1177, 1178, 1183, 1178, 1179, 1180, 1183, 1180, 1181, 1182, 1183, 1182, 1175, 1176, 1185, 1184, 1171, 1170, 1186, 1185, 1170, 1169, 1187, 1186, 1169, 1168, 1188, 1187, 1168, 1167, 1189, 1188, 1167, 1174, 1190, 1189, 1174, 1173, 1191, 1190, 1173, 1172, 1184, 1191, 1172, 1171, 1192, 1193, 1220, 1221, 1193, 1194, 1219, 1220, 1194, 1195, 1218, 1219, 1195, 1196, 1217, 1218, 1196, 1197, 1224, 1217, 1197, 1198, 1223, 1224, 1198, 1199, 1222, 1223, 1199, 1192, 1221, 1222, 1200, 1201, 1209, 1208, 1201, 1202, 1210, 1209, 1202, 1203, 1211, 1210, 1203, 1204, 1212, 1211, 1204, 1205, 1213, 1212, 1205, 1206, 1214, 1213, 1206, 1207, 1215, 1214, 1207, 1200, 1208, 1215, 1216, 1209, 1210, 1211, 1216, 1211, 1212, 1213, 1216, 1213, 1214, 1215, 1216, 1215, 1208, 1209, 1218, 1217, 1204, 1203, 1219, 1218, 1203, 1202, 1220, 1219, 1202, 1201, 1221, 1220, 1201, 1200, 1222, 1221, 1200, 1207, 1223, 1222, 1207, 1206, 1224, 1223, 1206, 1205, 1217, 1224, 1205, 1204, 1249, 497, 496, 1248, 1250, 498, 497, 1249, 499, 498, 1250, 1251, 500, 499, 1251, 1252, 490, 489, 1241, 1242, 1243, 491, 490, 1242, 1244, 492, 491, 1243, 1245, 493, 492, 1244, 1246, 494, 493, 1245, 1246, 1247, 495, 494, 1247, 1248, 496, 495, 489, 488, 1240, 1241, 1252, 1239, 487, 500, 1241, 1240, 1226, 1227, 1242, 1241, 1227, 1228, 1229, 1243, 1242, 1228, 1230, 1244, 1243, 1229, 1231, 1245, 1244, 1230, 1232, 1246, 1245, 1231, 1232, 1233, 1247, 1246, 1233, 1234, 1248, 1247, 1235, 1249, 1248, 1234, 1236, 1250, 1249, 1235, 1251, 1250, 1236, 1237, 1252, 1251, 1237, 1238, 1238, 1225, 1239, 1252, 519, 515, 1269, 1270, 520, 519, 1270, 1271, 521, 520, 1271, 1272, 522, 521, 1272, 1273, 523, 522, 1273, 1274, 524, 523, 1274, 1275, 1275, 1276, 525, 524, 526, 525, 1276, 1277, 1278, 527, 526, 1277, 1279, 528, 527, 1278, 529, 528, 1279, 1280, 530, 529, 1280, 1281, 516, 530, 1281, 1282, 1270, 1269, 1253, 1257, 1271, 1270, 1257, 1258, 1272, 1271, 1258, 1259, 1273, 1272, 1259, 1260, 1274, 1273, 1260, 1261, 1275, 1274, 1261, 1262, 1262, 1263, 1276, 1275, 1277, 1276, 1263, 1264, 1265, 1278, 1277, 1264, 1266, 1279, 1278, 1265, 1280, 1279, 1266, 1267, 1281, 1280, 1267, 1268, 1282, 1281, 1268, 1254, 1283, 1255, 1253, 1269, 1256, 1284, 1282, 1254, 517, 1283, 1269, 515, 1239, 1283, 517, 487, 1239, 1225, 1255, 1283, 1284, 518, 516, 1282, 1240, 1284, 1256, 1226, 1240, 488, 518, 1284, 1285, 1286, 1322, 1323, 1286, 1287, 1321, 1322, 1287, 1288, 1320, 1321, 1288, 1289, 1319, 1320, 1289, 1290, 1318, 1319, 1290, 1291, 1317, 1318, 1291, 1292, 1324, 1317, 1292, 1285, 1323, 1324, 1286, 1285, 1327, 1328, 1287, 1286, 1328, 1329, 1288, 1287, 1329, 1330, 1289, 1288, 1330, 1331, 1290, 1289, 1331, 1332, 1291, 1290, 1332, 1325, 1292, 1291, 1325, 1326, 1285, 1292, 1326, 1327, 1302, 1301, 1343, 1344, 1303, 1302, 1344, 1345, 1304, 1303, 1345, 1346, 1305, 1304, 1346, 1347, 1306, 1305, 1347, 1348, 1307, 1306, 1348, 1341, 1308, 1307, 1341, 1342, 1301, 1308, 1342, 1343, 1318, 1317, 1299, 1298, 1319, 1318, 1298, 1297, 1320, 1319, 1297, 1296, 1321, 1320, 1296, 1295, 1322, 1321, 1295, 1294, 1323, 1322, 1294, 1293, 1324, 1323, 1293, 1300, 1317, 1324, 1300, 1299, 1326, 1325, 1333, 1334, 1327, 1326, 1334, 1335, 1328, 1327, 1335, 1336, 1329, 1328, 1336, 1337, 1330, 1329, 1337, 1338, 1331, 1330, 1338, 1339, 1332, 1331, 1339, 1340, 1325, 1332, 1340, 1333, 1334, 1333, 1307, 1308, 1335, 1334, 1308, 1301, 1336, 1335, 1301, 1302, 1337, 1336, 1302, 1303, 1338, 1337, 1303, 1304, 1339, 1338, 1304, 1305, 1340, 1339, 1305, 1306, 1333, 1340, 1306, 1307, 1342, 1341, 1315, 1316, 1343, 1342, 1316, 1309, 1344, 1343, 1309, 1310, 1345, 1344, 1310, 1311, 1346, 1345, 1311, 1312, 1347, 1346, 1312, 1313, 1348, 1347, 1313, 1314, 1341, 1348, 1314, 1315, 1349, 1350, 1386, 1387, 1350, 1351, 1385, 1386, 1351, 1352, 1384, 1385, 1352, 1353, 1383, 1384, 1353, 1354, 1382, 1383, 1354, 1355, 1381, 1382, 1355, 1356, 1388, 1381, 1356, 1349, 1387, 1388, 1350, 1349, 1391, 1392, 1351, 1350, 1392, 1393, 1352, 1351, 1393, 1394, 1353, 1352, 1394, 1395, 1354, 1353, 1395, 1396, 1355, 1354, 1396, 1389, 1356, 1355, 1389, 1390, 1349, 1356, 1390, 1391, 1366, 1365, 1407, 1408, 1367, 1366, 1408, 1409, 1368, 1367, 1409, 1410, 1369, 1368, 1410, 1411, 1370, 1369, 1411, 1412, 1371, 1370, 1412, 1405, 1372, 1371, 1405, 1406, 1365, 1372, 1406, 1407, 1382, 1381, 1363, 1362, 1383, 1382, 1362, 1361, 1384, 1383, 1361, 1360, 1385, 1384, 1360, 1359, 1386, 1385, 1359, 1358, 1387, 1386, 1358, 1357, 1388, 1387, 1357, 1364, 1381, 1388, 1364, 1363, 1390, 1389, 1397, 1398, 1391, 1390, 1398, 1399, 1392, 1391, 1399, 1400, 1393, 1392, 1400, 1401, 1394, 1393, 1401, 1402, 1395, 1394, 1402, 1403, 1396, 1395, 1403, 1404, 1389, 1396, 1404, 1397, 1398, 1397, 1371, 1372, 1399, 1398, 1372, 1365, 1400, 1399, 1365, 1366, 1401, 1400, 1366, 1367, 1402, 1401, 1367, 1368, 1403, 1402, 1368, 1369, 1404, 1403, 1369, 1370, 1397, 1404, 1370, 1371, 1406, 1405, 1379, 1380, 1407, 1406, 1380, 1373, 1408, 1407, 1373, 1374, 1409, 1408, 1374, 1375, 1410, 1409, 1375, 1376, 1411, 1410, 1376, 1377, 1412, 1411, 1377, 1378, 1405, 1412, 1378, 1379, 1413, 1414, 1450, 1451, 1414, 1415, 1449, 1450, 1415, 1416, 1448, 1449, 1416, 1417, 1447, 1448, 1417, 1418, 1446, 1447, 1418, 1419, 1445, 1446, 1419, 1420, 1452, 1445, 1420, 1413, 1451, 1452, 1414, 1413, 1455, 1456, 1415, 1414, 1456, 1457, 1416, 1415, 1457, 1458, 1417, 1416, 1458, 1459, 1418, 1417, 1459, 1460, 1419, 1418, 1460, 1453, 1420, 1419, 1453, 1454, 1413, 1420, 1454, 1455, 1430, 1429, 1471, 1472, 1431, 1430, 1472, 1473, 1432, 1431, 1473, 1474, 1433, 1432, 1474, 1475, 1434, 1433, 1475, 1476, 1435, 1434, 1476, 1469, 1436, 1435, 1469, 1470, 1429, 1436, 1470, 1471, 1446, 1445, 1427, 1426, 1447, 1446, 1426, 1425, 1448, 1447, 1425, 1424, 1449, 1448, 1424, 1423, 1450, 1449, 1423, 1422, 1451, 1450, 1422, 1421, 1452, 1451, 1421, 1428, 1445, 1452, 1428, 1427, 1454, 1453, 1461, 1462, 1455, 1454, 1462, 1463, 1456, 1455, 1463, 1464, 1457, 1456, 1464, 1465, 1458, 1457, 1465, 1466, 1459, 1458, 1466, 1467, 1460, 1459, 1467, 1468, 1453, 1460, 1468, 1461, 1462, 1461, 1435, 1436, 1463, 1462, 1436, 1429, 1464, 1463, 1429, 1430, 1465, 1464, 1430, 1431, 1466, 1465, 1431, 1432, 1467, 1466, 1432, 1433, 1468, 1467, 1433, 1434, 1461, 1468, 1434, 1435, 1470, 1469, 1443, 1444, 1471, 1470, 1444, 1437, 1472, 1471, 1437, 1438, 1473, 1472, 1438, 1439, 1474, 1473, 1439, 1440, 1475, 1474, 1440, 1441, 1476, 1475, 1441, 1442, 1469, 1476, 1442, 1443, 1477, 1478, 1514, 1515, 1478, 1479, 1513, 1514, 1479, 1480, 1512, 1513, 1480, 1481, 1511, 1512, 1481, 1482, 1510, 1511, 1482, 1483, 1509, 1510, 1483, 1484, 1516, 1509, 1484, 1477, 1515, 1516, 1478, 1477, 1519, 1520, 1479, 1478, 1520, 1521, 1480, 1479, 1521, 1522, 1481, 1480, 1522, 1523, 1482, 1481, 1523, 1524, 1483, 1482, 1524, 1517, 1484, 1483, 1517, 1518, 1477, 1484, 1518, 1519, 1494, 1493, 1535, 1536, 1495, 1494, 1536, 1537, 1496, 1495, 1537, 1538, 1497, 1496, 1538, 1539, 1498, 1497, 1539, 1540, 1499, 1498, 1540, 1533, 1500, 1499, 1533, 1534, 1493, 1500, 1534, 1535, 1510, 1509, 1491, 1490, 1511, 1510, 1490, 1489, 1512, 1511, 1489, 1488, 1513, 1512, 1488, 1487, 1514, 1513, 1487, 1486, 1515, 1514, 1486, 1485, 1516, 1515, 1485, 1492, 1509, 1516, 1492, 1491, 1518, 1517, 1525, 1526, 1519, 1518, 1526, 1527, 1520, 1519, 1527, 1528, 1521, 1520, 1528, 1529, 1522, 1521, 1529, 1530, 1523, 1522, 1530, 1531, 1524, 1523, 1531, 1532, 1517, 1524, 1532, 1525, 1526, 1525, 1499, 1500, 1527, 1526, 1500, 1493, 1528, 1527, 1493, 1494, 1529, 1528, 1494, 1495, 1530, 1529, 1495, 1496, 1531, 1530, 1496, 1497, 1532, 1531, 1497, 1498, 1525, 1532, 1498, 1499, 1534, 1533, 1507, 1508, 1535, 1534, 1508, 1501, 1536, 1535, 1501, 1502, 1537, 1536, 1502, 1503, 1538, 1537, 1503, 1504, 1539, 1538, 1504, 1505, 1540, 1539, 1505, 1506, 1533, 1540, 1506, 1507, 1541, 1542, 1578, 1579, 1542, 1543, 1577, 1578, 1543, 1544, 1576, 1577, 1544, 1545, 1575, 1576, 1545, 1546, 1574, 1575, 1546, 1547, 1573, 1574, 1547, 1548, 1580, 1573, 1548, 1541, 1579, 1580, 1542, 1541, 1583, 1584, 1543, 1542, 1584, 1585, 1544, 1543, 1585, 1586, 1545, 1544, 1586, 1587, 1546, 1545, 1587, 1588, 1547, 1546, 1588, 1581, 1548, 1547, 1581, 1582, 1541, 1548, 1582, 1583, 1558, 1557, 1599, 1600, 1559, 1558, 1600, 1601, 1560, 1559, 1601, 1602, 1561, 1560, 1602, 1603, 1562, 1561, 1603, 1604, 1563, 1562, 1604, 1597, 1564, 1563, 1597, 1598, 1557, 1564, 1598, 1599, 1574, 1573, 1555, 1554, 1575, 1574, 1554, 1553, 1576, 1575, 1553, 1552, 1577, 1576, 1552, 1551, 1578, 1577, 1551, 1550, 1579, 1578, 1550, 1549, 1580, 1579, 1549, 1556, 1573, 1580, 1556, 1555, 1582, 1581, 1589, 1590, 1583, 1582, 1590, 1591, 1584, 1583, 1591, 1592, 1585, 1584, 1592, 1593, 1586, 1585, 1593, 1594, 1587, 1586, 1594, 1595, 1588, 1587, 1595, 1596, 1581, 1588, 1596, 1589, 1590, 1589, 1563, 1564, 1591, 1590, 1564, 1557, 1592, 1591, 1557, 1558, 1593, 1592, 1558, 1559, 1594, 1593, 1559, 1560, 1595, 1594, 1560, 1561, 1596, 1595, 1561, 1562, 1589, 1596, 1562, 1563, 1598, 1597, 1571, 1572, 1599, 1598, 1572, 1565, 1600, 1599, 1565, 1566, 1601, 1600, 1566, 1567, 1602, 1601, 1567, 1568, 1603, 1602, 1568, 1569, 1604, 1603, 1569, 1570, 1597, 1604, 1570, 1571, 1605, 1606, 1642, 1643, 1606, 1607, 1641, 1642, 1607, 1608, 1640, 1641, 1608, 1609, 1639, 1640, 1609, 1610, 1638, 1639, 1610, 1611, 1637, 1638, 1611, 1612, 1644, 1637, 1612, 1605, 1643, 1644, 1606, 1605, 1647, 1648, 1607, 1606, 1648, 1649, 1608, 1607, 1649, 1650, 1609, 1608, 1650, 1651, 1610, 1609, 1651, 1652, 1611, 1610, 1652, 1645, 1612, 1611, 1645, 1646, 1605, 1612, 1646, 1647, 1622, 1621, 1663, 1664, 1623, 1622, 1664, 1665, 1624, 1623, 1665, 1666, 1625, 1624, 1666, 1667, 1626, 1625, 1667, 1668, 1627, 1626, 1668, 1661, 1628, 1627, 1661, 1662, 1621, 1628, 1662, 1663, 1638, 1637, 1619, 1618, 1639, 1638, 1618, 1617, 1640, 1639, 1617, 1616, 1641, 1640, 1616, 1615, 1642, 1641, 1615, 1614, 1643, 1642, 1614, 1613, 1644, 1643, 1613, 1620, 1637, 1644, 1620, 1619, 1646, 1645, 1653, 1654, 1647, 1646, 1654, 1655, 1648, 1647, 1655, 1656, 1649, 1648, 1656, 1657, 1650, 1649, 1657, 1658, 1651, 1650, 1658, 1659, 1652, 1651, 1659, 1660, 1645, 1652, 1660, 1653, 1654, 1653, 1627, 1628, 1655, 1654, 1628, 1621, 1656, 1655, 1621, 1622, 1657, 1656, 1622, 1623, 1658, 1657, 1623, 1624, 1659, 1658, 1624, 1625, 1660, 1659, 1625, 1626, 1653, 1660, 1626, 1627, 1662, 1661, 1635, 1636, 1663, 1662, 1636, 1629, 1664, 1663, 1629, 1630, 1665, 1664, 1630, 1631, 1666, 1665, 1631, 1632, 1667, 1666, 1632, 1633, 1668, 1667, 1633, 1634, 1661, 1668, 1634, 1635, 1669, 1670, 1695, 1696, 1670, 1671, 1694, 1695, 1671, 1672, 1693, 1694, 1672, 1673, 1692, 1693, 1673, 1674, 1699, 1692, 1674, 1675, 1698, 1699, 1675, 1676, 1697, 1698, 1676, 1669, 1696, 1697, 1677, 1678, 1684, 1683, 1678, 1679, 1685, 1684, 1679, 1680, 1686, 1685, 1680, 1681, 1687, 1686, 1681, 1700, 1688, 1687, 1700, 1701, 1689, 1688, 1701, 1682, 1690, 1689, 1682, 1677, 1683, 1690, 1691, 1684, 1685, 1686, 1691, 1686, 1687, 1688, 1691, 1688, 1689, 1690, 1691, 1690, 1683, 1684, 1693, 1692, 1681, 1680, 1694, 1693, 1680, 1679, 1695, 1694, 1679, 1678, 1696, 1695, 1678, 1677, 1697, 1696, 1677, 1682, 1698, 1697, 1682, 1701, 1692, 1699, 1700, 1681, 1702, 1703, 1730, 1731, 1703, 1704, 1729, 1730, 1704, 1705, 1728, 1729, 1705, 1706, 1727, 1728, 1706, 1707, 1734, 1727, 1707, 1708, 1733, 1734, 1708, 1709, 1732, 1733, 1709, 1702, 1731, 1732, 1710, 1711, 1719, 1718, 1711, 1712, 1720, 1719, 1712, 1713, 1721, 1720, 1713, 1714, 1722, 1721, 1714, 1715, 1723, 1722, 1715, 1716, 1724, 1723, 1716, 1717, 1725, 1724, 1717, 1710, 1718, 1725, 1726, 1719, 1720, 1721, 1726, 1721, 1722, 1723, 1726, 1723, 1724, 1725, 1726, 1725, 1718, 1719, 1728, 1727, 1714, 1713, 1729, 1728, 1713, 1712, 1730, 1729, 1712, 1711, 1731, 1730, 1711, 1710, 1732, 1731, 1710, 1717, 1733, 1732, 1717, 1716, 1734, 1733, 1716, 1715, 1727, 1734, 1715, 1714, 1735, 1736, 1763, 1764, 1736, 1737, 1762, 1763, 1737, 1738, 1761, 1762, 1738, 1739, 1760, 1761, 1739, 1740, 1767, 1760, 1740, 1741, 1766, 1767, 1741, 1742, 1765, 1766, 1742, 1735, 1764, 1765, 1743, 1744, 1752, 1751, 1744, 1745, 1753, 1752, 1745, 1746, 1754, 1753, 1746, 1747, 1755, 1754, 1747, 1748, 1756, 1755, 1748, 1749, 1757, 1756, 1749, 1750, 1758, 1757, 1750, 1743, 1751, 1758, 1759, 1752, 1753, 1754, 1759, 1754, 1755, 1756, 1759, 1756, 1757, 1758, 1759, 1758, 1751, 1752, 1761, 1760, 1747, 1746, 1762, 1761, 1746, 1745, 1763, 1762, 1745, 1744, 1764, 1763, 1744, 1743, 1765, 1764, 1743, 1750, 1766, 1765, 1750, 1749, 1767, 1766, 1749, 1748, 1760, 1767, 1748, 1747, 1768, 1769, 1796, 1797, 1769, 1770, 1795, 1796, 1770, 1771, 1794, 1795, 1771, 1772, 1793, 1794, 1772, 1773, 1800, 1793, 1773, 1774, 1799, 1800, 1774, 1775, 1798, 1799, 1775, 1768, 1797, 1798, 1776, 1777, 1785, 1784, 1777, 1778, 1786, 1785, 1778, 1779, 1787, 1786, 1779, 1780, 1788, 1787, 1780, 1781, 1789, 1788, 1781, 1782, 1790, 1789, 1782, 1783, 1791, 1790, 1783, 1776, 1784, 1791, 1792, 1785, 1786, 1787, 1792, 1787, 1788, 1789, 1792, 1789, 1790, 1791, 1792, 1791, 1784, 1785, 1794, 1793, 1780, 1779, 1795, 1794, 1779, 1778, 1796, 1795, 1778, 1777, 1797, 1796, 1777, 1776, 1798, 1797, 1776, 1783, 1799, 1798, 1783, 1782, 1800, 1799, 1782, 1781, 1793, 1800, 1781, 1780, 1801, 1802, 1829, 1830, 1802, 1803, 1828, 1829, 1803, 1804, 1827, 1828, 1804, 1805, 1826, 1827, 1805, 1806, 1833, 1826, 1806, 1807, 1832, 1833, 1807, 1808, 1831, 1832, 1808, 1801, 1830, 1831, 1809, 1810, 1818, 1817, 1810, 1811, 1819, 1818, 1811, 1812, 1820, 1819, 1812, 1813, 1821, 1820, 1813, 1814, 1822, 1821, 1814, 1815, 1823, 1822, 1815, 1816, 1824, 1823, 1816, 1809, 1817, 1824, 1825, 1818, 1819, 1820, 1825, 1820, 1821, 1822, 1825, 1822, 1823, 1824, 1825, 1824, 1817, 1818, 1827, 1826, 1813, 1812, 1828, 1827, 1812, 1811, 1829, 1828, 1811, 1810, 1830, 1829, 1810, 1809, 1831, 1830, 1809, 1816, 1832, 1831, 1816, 1815, 1833, 1832, 1815, 1814, 1826, 1833, 1814, 1813, 1834, 1835, 1862, 1863, 1835, 1836, 1861, 1862, 1836, 1837, 1860, 1861, 1837, 1838, 1859, 1860, 1838, 1839, 1866, 1859, 1839, 1840, 1865, 1866, 1840, 1841, 1864, 1865, 1841, 1834, 1863, 1864, 1842, 1843, 1851, 1850, 1843, 1844, 1852, 1851, 1844, 1845, 1853, 1852, 1845, 1846, 1854, 1853, 1846, 1847, 1855, 1854, 1847, 1848, 1856, 1855, 1848, 1849, 1857, 1856, 1849, 1842, 1850, 1857, 1858, 1851, 1852, 1853, 1858, 1853, 1854, 1855, 1858, 1855, 1856, 1857, 1858, 1857, 1850, 1851, 1860, 1859, 1846, 1845, 1861, 1860, 1845, 1844, 1862, 1861, 1844, 1843, 1863, 1862, 1843, 1842, 1864, 1863, 1842, 1849, 1865, 1864, 1849, 1848, 1866, 1865, 1848, 1847, 1859, 1866, 1847, 1846, 1867, 1868, 1895, 1896, 1868, 1869, 1894, 1895, 1869, 1870, 1893, 1894, 1870, 1871, 1892, 1893, 1871, 1872, 1899, 1892, 1872, 1873, 1898, 1899, 1873, 1874, 1897, 1898, 1874, 1867, 1896, 1897, 1875, 1876, 1884, 1883, 1876, 1877, 1885, 1884, 1877, 1878, 1886, 1885, 1878, 1879, 1887, 1886, 1879, 1880, 1888, 1887, 1880, 1881, 1889, 1888, 1881, 1882, 1890, 1889, 1882, 1875, 1883, 1890, 1891, 1884, 1885, 1886, 1891, 1886, 1887, 1888, 1891, 1888, 1889, 1890, 1891, 1890, 1883, 1884, 1893, 1892, 1879, 1878, 1894, 1893, 1878, 1877, 1895, 1894, 1877, 1876, 1896, 1895, 1876, 1875, 1897, 1896, 1875, 1882, 1898, 1897, 1882, 1881, 1899, 1898, 1881, 1880, 1892, 1899, 1880, 1879, 1930, 1931, 1912, 1901, 1925, 1911, 1900, 1924, 1920, 1921, 1902, 1910, 1914, 1915, 1903, 1909, 1904, 1908, 1909, 1903, 1915, 1916, 1904, 1903, 1921, 1922, 1905, 1902, 1900, 1906, 1923, 1924, 1907, 1929, 1930, 1901, 1901, 1912, 1913, 1907, 1909, 1908, 553, 552, 554, 1914, 1909, 552, 557, 1920, 1910, 556, 558, 548, 1911, 1925, 1912, 1931, 549, 550, 1913, 1912, 550, 551, 555, 1917, 1914, 554, 1917, 1918, 1915, 1914, 1918, 1919, 1916, 1915, 556, 1910, 1917, 555, 1910, 1902, 1918, 1917, 1902, 1905, 1919, 1918, 1921, 1924, 1923, 1922, 1925, 1924, 1921, 1920, 557, 558, 1925, 1920, 1927, 1926, 1906, 1900, 1900, 1911, 1928, 1927, 547, 1928, 1911, 548, 1930, 1929, 1926, 1927, 1927, 1928, 1931, 1930, 549, 1931, 1928, 547, 1908, 1932, 559, 553, 1933, 1932, 1908, 1904, 1916, 1934, 1933, 1904, 1919, 1935, 1934, 1916, 1905, 1936, 1935, 1919, 1922, 1937, 1936, 1905, 1922, 1923, 1938, 1937, 1906, 1939, 1938, 1923, 1926, 1940, 1939, 1906, 1929, 1941, 1940, 1926, 1942, 1941, 1929, 1907, 1907, 1913, 1943, 1942, 560, 1943, 1913, 551, 1944, 1945, 1972, 1973, 1945, 1946, 1971, 1972, 1946, 1947, 1970, 1971, 1947, 1948, 1969, 1970, 1948, 1949, 1976, 1969, 1949, 1950, 1975, 1976, 1950, 1951, 1974, 1975, 1951, 1944, 1973, 1974, 1952, 1953, 1961, 1960, 1953, 1954, 1962, 1961, 1954, 1955, 1963, 1962, 1955, 1956, 1964, 1963, 1956, 1957, 1965, 1964, 1957, 1958, 1966, 1965, 1958, 1959, 1967, 1966, 1959, 1952, 1960, 1967, 1968, 1961, 1962, 1963, 1968, 1963, 1964, 1965, 1968, 1965, 1966, 1967, 1968, 1967, 1960, 1961, 1970, 1969, 1956, 1955, 1971, 1970, 1955, 1954, 1972, 1971, 1954, 1953, 1973, 1972, 1953, 1952, 1974, 1973, 1952, 1959, 1975, 1974, 1959, 1958, 1976, 1975, 1958, 1957, 1969, 1976, 1957, 1956, 1997, 1978, 1977, 1996, 1998, 1979, 1978, 1997, 1980, 1979, 1998, 1999, 1981, 1980, 1999, 2000, 1983, 1982, 1989, 1990, 1991, 1984, 1983, 1990, 1992, 1985, 1984, 1991, 1993, 1986, 1985, 1992, 1994, 1987, 1986, 1993, 1994, 1995, 1988, 1987, 1995, 1996, 1977, 1988, 1982, 574, 576, 1989, 2000, 575, 562, 1981, 1989, 576, 559, 1932, 1990, 1989, 1932, 1933, 1934, 1991, 1990, 1933, 1935, 1992, 1991, 1934, 1936, 1993, 1992, 1935, 1937, 1994, 1993, 1936, 1937, 1938, 1995, 1994, 1938, 1939, 1996, 1995, 1940, 1997, 1996, 1939, 1941, 1998, 1997, 1940, 1999, 1998, 1941, 1942, 2000, 1999, 1942, 1943, 1943, 560, 575, 2000, 2001, 2002, 2029, 2030, 2002, 2003, 2028, 2029, 2003, 2004, 2027, 2028, 2004, 2005, 2026, 2027, 2005, 2006, 2033, 2026, 2006, 2007, 2032, 2033, 2007, 2008, 2031, 2032, 2008, 2001, 2030, 2031, 2009, 2010, 2018, 2017, 2010, 2011, 2019, 2018, 2011, 2012, 2020, 2019, 2012, 2013, 2021, 2020, 2013, 2014, 2022, 2021, 2014, 2015, 2023, 2022, 2015, 2016, 2024, 2023, 2016, 2009, 2017, 2024, 2025, 2018, 2019, 2020, 2025, 2020, 2021, 2022, 2025, 2022, 2023, 2024, 2025, 2024, 2017, 2018, 2027, 2026, 2013, 2012, 2028, 2027, 2012, 2011, 2029, 2028, 2011, 2010, 2030, 2029, 2010, 2009, 2031, 2030, 2009, 2016, 2032, 2031, 2016, 2015, 2033, 2032, 2015, 2014, 2026, 2033, 2014, 2013, 2034, 2035, 2062, 2063, 2035, 2036, 2061, 2062, 2036, 2037, 2060, 2061, 2037, 2038, 2059, 2060, 2038, 2039, 2066, 2059, 2039, 2040, 2065, 2066, 2040, 2041, 2064, 2065, 2041, 2034, 2063, 2064, 2042, 2043, 2051, 2050, 2043, 2044, 2052, 2051, 2044, 2045, 2053, 2052, 2045, 2046, 2054, 2053, 2046, 2047, 2055, 2054, 2047, 2048, 2056, 2055, 2048, 2049, 2057, 2056, 2049, 2042, 2050, 2057, 2058, 2051, 2052, 2053, 2058, 2053, 2054, 2055, 2058, 2055, 2056, 2057, 2058, 2057, 2050, 2051, 2060, 2059, 2046, 2045, 2061, 2060, 2045, 2044, 2062, 2061, 2044, 2043, 2063, 2062, 2043, 2042, 2064, 2063, 2042, 2049, 2065, 2064, 2049, 2048, 2066, 2065, 2048, 2047, 2059, 2066, 2047, 2046, 2074, 2078, 2079, 2067, 2067, 2079, 2096, 2097, 2070, 2076, 2077, 2071, 2097, 2098, 2074, 2067, 2068, 2080, 2090, 2091, 2073, 2068, 2091, 2092, 2089, 2088, 2091, 2090, 2088, 2089, 2075, 2069, 2087, 2088, 2069, 2072, 2082, 2083, 2076, 2070, 2081, 2082, 2070, 2071, 2071, 2077, 1982, 1983, 1984, 2081, 2071, 1983, 1987, 2087, 2072, 1986, 1977, 2073, 2092, 1988, 2074, 2098, 1979, 1980, 1980, 1981, 2078, 2074, 2089, 568, 569, 2075, 2076, 2083, 571, 572, 2077, 2076, 572, 573, 1982, 2077, 573, 574, 2078, 1981, 562, 561, 2079, 2078, 561, 563, 2096, 2079, 563, 564, 2090, 2080, 566, 567, 567, 568, 2089, 2090, 1985, 2084, 2081, 1984, 2084, 2085, 2082, 2081, 2085, 2086, 2083, 2082, 571, 2083, 2086, 570, 1986, 2072, 2084, 1985, 2072, 2069, 2085, 2084, 2069, 2075, 2086, 2085, 570, 2086, 2075, 569, 2092, 2091, 2088, 2087, 1987, 1988, 2092, 2087, 2080, 2093, 565, 566, 2094, 2093, 2080, 2068, 2068, 2073, 2095, 2094, 1978, 2095, 2073, 1977, 2093, 2096, 564, 565, 2097, 2096, 2093, 2094, 2094, 2095, 2098, 2097, 1979, 2098, 2095, 1978, 2099, 2100, 2127, 2128, 2100, 2101, 2126, 2127, 2101, 2102, 2125, 2126, 2102, 2103, 2124, 2125, 2103, 2104, 2131, 2124, 2104, 2105, 2130, 2131, 2105, 2106, 2129, 2130, 2106, 2099, 2128, 2129, 2107, 2108, 2116, 2115, 2108, 2109, 2117, 2116, 2109, 2110, 2118, 2117, 2110, 2111, 2119, 2118, 2111, 2112, 2120, 2119, 2112, 2113, 2121, 2120, 2113, 2114, 2122, 2121, 2114, 2107, 2115, 2122, 2123, 2116, 2117, 2118, 2123, 2118, 2119, 2120, 2123, 2120, 2121, 2122, 2123, 2122, 2115, 2116, 2125, 2124, 2111, 2110, 2126, 2125, 2110, 2109, 2127, 2126, 2109, 2108, 2128, 2127, 2108, 2107, 2129, 2128, 2107, 2114, 2130, 2129, 2114, 2113, 2131, 2130, 2113, 2112, 2124, 2131, 2112, 2111, 991, 990, 993, 992, 2132, 2133, 2160, 2161, 2133, 2134, 2159, 2160, 2134, 2135, 2158, 2159, 2135, 2136, 2157, 2158, 2136, 2137, 2164, 2157, 2137, 2138, 2163, 2164, 2138, 2139, 2162, 2163, 2139, 2132, 2161, 2162, 2140, 2141, 2149, 2148, 2141, 2142, 2150, 2149, 2142, 2143, 2151, 2150, 2143, 2144, 2152, 2151, 2144, 2145, 2153, 2152, 2145, 2146, 2154, 2153, 2146, 2147, 2155, 2154, 2147, 2140, 2148, 2155, 2156, 2149, 2150, 2151, 2156, 2151, 2152, 2153, 2156, 2153, 2154, 2155, 2156, 2155, 2148, 2149, 2158, 2157, 2144, 2143, 2159, 2158, 2143, 2142, 2160, 2159, 2142, 2141, 2161, 2160, 2141, 2140, 2162, 2161, 2140, 2147, 2163, 2162, 2147, 2146, 2164, 2163, 2146, 2145, 2157, 2164, 2145, 2144, 2175, 1235, 1234, 2174, 2176, 1236, 1235, 2175, 1237, 1236, 2176, 2177, 1238, 1237, 2177, 2178, 1228, 1227, 2167, 2168, 2169, 1229, 1228, 2168, 2170, 1230, 1229, 2169, 2171, 1231, 1230, 2170, 2172, 1232, 1231, 2171, 2172, 2173, 1233, 1232, 2173, 2174, 1234, 1233, 1227, 1226, 2166, 2167, 2178, 2165, 1225, 1238, 2167, 2166, 101, 100, 2168, 2167, 100, 102, 103, 2169, 2168, 102, 104, 2170, 2169, 103, 105, 2171, 2170, 104, 106, 2172, 2171, 105, 106, 107, 2173, 2172, 107, 108, 2174, 2173, 109, 2175, 2174, 108, 110, 2176, 2175, 109, 2177, 2176, 110, 111, 2178, 2177, 111, 112, 112, 113, 2165, 2178, 1257, 1253, 2179, 2180, 1258, 1257, 2180, 2181, 1259, 1258, 2181, 2182, 1260, 1259, 2182, 2183, 1261, 1260, 2183, 2184, 1262, 1261, 2184, 2185, 2185, 2186, 1263, 1262, 1264, 1263, 2186, 2187, 2188, 1265, 1264, 2187, 2189, 1266, 1265, 2188, 1267, 1266, 2189, 2190, 1268, 1267, 2190, 2191, 1254, 1268, 2191, 2192, 2180, 2179, 117, 118, 2181, 2180, 118, 119, 2182, 2181, 119, 120, 2183, 2182, 120, 121, 2184, 2183, 121, 122, 2185, 2184, 122, 123, 123, 124, 2186, 2185, 2187, 2186, 124, 125, 126, 2188, 2187, 125, 127, 2189, 2188, 126, 2190, 2189, 127, 128, 2191, 2190, 128, 129, 2192, 2191, 129, 116, 2193, 115, 117, 2179, 114, 2194, 2192, 116, 1255, 2193, 2179, 1253, 2165, 2193, 1255, 1225, 2165, 113, 115, 2193, 2194, 1256, 1254, 2192, 2166, 2194, 114, 101, 2166, 1226, 1256, 2194, 2195, 2196, 2232, 2233, 2196, 2197, 2231, 2232, 2197, 2198, 2230, 2231, 2198, 2199, 2229, 2230, 2199, 2200, 2228, 2229, 2200, 2201, 2227, 2228, 2201, 2202, 2234, 2227, 2202, 2195, 2233, 2234, 2196, 2195, 2237, 2238, 2197, 2196, 2238, 2239, 2198, 2197, 2239, 2240, 2199, 2198, 2240, 2241, 2200, 2199, 2241, 2242, 2201, 2200, 2242, 2235, 2202, 2201, 2235, 2236, 2195, 2202, 2236, 2237, 2212, 2211, 2253, 2254, 2213, 2212, 2254, 2255, 2214, 2213, 2255, 2256, 2215, 2214, 2256, 2257, 2216, 2215, 2257, 2258, 2217, 2216, 2258, 2251, 2218, 2217, 2251, 2252, 2211, 2218, 2252, 2253, 2228, 2227, 2209, 2208, 2229, 2228, 2208, 2207, 2230, 2229, 2207, 2206, 2231, 2230, 2206, 2205, 2232, 2231, 2205, 2204, 2233, 2232, 2204, 2203, 2234, 2233, 2203, 2210, 2227, 2234, 2210, 2209, 2236, 2235, 2243, 2244, 2237, 2236, 2244, 2245, 2238, 2237, 2245, 2246, 2239, 2238, 2246, 2247, 2240, 2239, 2247, 2248, 2241, 2240, 2248, 2249, 2242, 2241, 2249, 2250, 2235, 2242, 2250, 2243, 2244, 2243, 2217, 2218, 2245, 2244, 2218, 2211, 2246, 2245, 2211, 2212, 2247, 2246, 2212, 2213, 2248, 2247, 2213, 2214, 2249, 2248, 2214, 2215, 2250, 2249, 2215, 2216, 2243, 2250, 2216, 2217, 2252, 2251, 2225, 2226, 2253, 2252, 2226, 2219, 2254, 2253, 2219, 2220, 2255, 2254, 2220, 2221, 2256, 2255, 2221, 2222, 2257, 2256, 2222, 2223, 2258, 2257, 2223, 2224, 2251, 2258, 2224, 2225, 2259, 2260, 2296, 2297, 2260, 2261, 2295, 2296, 2261, 2262, 2294, 2295, 2262, 2263, 2293, 2294, 2263, 2264, 2292, 2293, 2264, 2265, 2291, 2292, 2265, 2266, 2298, 2291, 2266, 2259, 2297, 2298, 2260, 2259, 2301, 2302, 2261, 2260, 2302, 2303, 2262, 2261, 2303, 2304, 2263, 2262, 2304, 2305, 2264, 2263, 2305, 2306, 2265, 2264, 2306, 2299, 2266, 2265, 2299, 2300, 2259, 2266, 2300, 2301, 2276, 2275, 2317, 2318, 2277, 2276, 2318, 2319, 2278, 2277, 2319, 2320, 2279, 2278, 2320, 2321, 2280, 2279, 2321, 2322, 2281, 2280, 2322, 2315, 2282, 2281, 2315, 2316, 2275, 2282, 2316, 2317, 2292, 2291, 2273, 2272, 2293, 2292, 2272, 2271, 2294, 2293, 2271, 2270, 2295, 2294, 2270, 2269, 2296, 2295, 2269, 2268, 2297, 2296, 2268, 2267, 2298, 2297, 2267, 2274, 2291, 2298, 2274, 2273, 2300, 2299, 2307, 2308, 2301, 2300, 2308, 2309, 2302, 2301, 2309, 2310, 2303, 2302, 2310, 2311, 2304, 2303, 2311, 2312, 2305, 2304, 2312, 2313, 2306, 2305, 2313, 2314, 2299, 2306, 2314, 2307, 2308, 2307, 2281, 2282, 2309, 2308, 2282, 2275, 2310, 2309, 2275, 2276, 2311, 2310, 2276, 2277, 2312, 2311, 2277, 2278, 2313, 2312, 2278, 2279, 2314, 2313, 2279, 2280, 2307, 2314, 2280, 2281, 2316, 2315, 2289, 2290, 2317, 2316, 2290, 2283, 2318, 2317, 2283, 2284, 2319, 2318, 2284, 2285, 2320, 2319, 2285, 2286, 2321, 2320, 2286, 2287, 2322, 2321, 2287, 2288, 2315, 2322, 2288, 2289, 2323, 2324, 2360, 2361, 2324, 2325, 2359, 2360, 2325, 2326, 2358, 2359, 2326, 2327, 2357, 2358, 2327, 2328, 2356, 2357, 2328, 2329, 2355, 2356, 2329, 2330, 2362, 2355, 2330, 2323, 2361, 2362, 2324, 2323, 2365, 2366, 2325, 2324, 2366, 2367, 2326, 2325, 2367, 2368, 2327, 2326, 2368, 2369, 2328, 2327, 2369, 2370, 2329, 2328, 2370, 2363, 2330, 2329, 2363, 2364, 2323, 2330, 2364, 2365, 2340, 2339, 2381, 2382, 2341, 2340, 2382, 2383, 2342, 2341, 2383, 2384, 2343, 2342, 2384, 2385, 2344, 2343, 2385, 2386, 2345, 2344, 2386, 2379, 2346, 2345, 2379, 2380, 2339, 2346, 2380, 2381, 2356, 2355, 2337, 2336, 2357, 2356, 2336, 2335, 2358, 2357, 2335, 2334, 2359, 2358, 2334, 2333, 2360, 2359, 2333, 2332, 2361, 2360, 2332, 2331, 2362, 2361, 2331, 2338, 2355, 2362, 2338, 2337, 2364, 2363, 2371, 2372, 2365, 2364, 2372, 2373, 2366, 2365, 2373, 2374, 2367, 2366, 2374, 2375, 2368, 2367, 2375, 2376, 2369, 2368, 2376, 2377, 2370, 2369, 2377, 2378, 2363, 2370, 2378, 2371, 2372, 2371, 2345, 2346, 2373, 2372, 2346, 2339, 2374, 2373, 2339, 2340, 2375, 2374, 2340, 2341, 2376, 2375, 2341, 2342, 2377, 2376, 2342, 2343, 2378, 2377, 2343, 2344, 2371, 2378, 2344, 2345, 2380, 2379, 2353, 2354, 2381, 2380, 2354, 2347, 2382, 2381, 2347, 2348, 2383, 2382, 2348, 2349, 2384, 2383, 2349, 2350, 2385, 2384, 2350, 2351, 2386, 2385, 2351, 2352, 2379, 2386, 2352, 2353, 2387, 2388, 2424, 2425, 2388, 2389, 2423, 2424, 2389, 2390, 2422, 2423, 2390, 2391, 2421, 2422, 2391, 2392, 2420, 2421, 2392, 2393, 2419, 2420, 2393, 2394, 2426, 2419, 2394, 2387, 2425, 2426, 2388, 2387, 2429, 2430, 2389, 2388, 2430, 2431, 2390, 2389, 2431, 2432, 2391, 2390, 2432, 2433, 2392, 2391, 2433, 2434, 2393, 2392, 2434, 2427, 2394, 2393, 2427, 2428, 2387, 2394, 2428, 2429, 2404, 2403, 2445, 2446, 2405, 2404, 2446, 2447, 2406, 2405, 2447, 2448, 2407, 2406, 2448, 2449, 2408, 2407, 2449, 2450, 2409, 2408, 2450, 2443, 2410, 2409, 2443, 2444, 2403, 2410, 2444, 2445, 2420, 2419, 2401, 2400, 2421, 2420, 2400, 2399, 2422, 2421, 2399, 2398, 2423, 2422, 2398, 2397, 2424, 2423, 2397, 2396, 2425, 2424, 2396, 2395, 2426, 2425, 2395, 2402, 2419, 2426, 2402, 2401, 2428, 2427, 2435, 2436, 2429, 2428, 2436, 2437, 2430, 2429, 2437, 2438, 2431, 2430, 2438, 2439, 2432, 2431, 2439, 2440, 2433, 2432, 2440, 2441, 2434, 2433, 2441, 2442, 2427, 2434, 2442, 2435, 2436, 2435, 2409, 2410, 2437, 2436, 2410, 2403, 2438, 2437, 2403, 2404, 2439, 2438, 2404, 2405, 2440, 2439, 2405, 2406, 2441, 2440, 2406, 2407, 2442, 2441, 2407, 2408, 2435, 2442, 2408, 2409, 2444, 2443, 2417, 2418, 2445, 2444, 2418, 2411, 2446, 2445, 2411, 2412, 2447, 2446, 2412, 2413, 2448, 2447, 2413, 2414, 2449, 2448, 2414, 2415, 2450, 2449, 2415, 2416, 2443, 2450, 2416, 2417, 2451, 2452, 2488, 2489, 2452, 2453, 2487, 2488, 2453, 2454, 2486, 2487, 2454, 2455, 2485, 2486, 2455, 2456, 2484, 2485, 2456, 2457, 2483, 2484, 2457, 2458, 2490, 2483, 2458, 2451, 2489, 2490, 2452, 2451, 2493, 2494, 2453, 2452, 2494, 2495, 2454, 2453, 2495, 2496, 2455, 2454, 2496, 2497, 2456, 2455, 2497, 2498, 2457, 2456, 2498, 2491, 2458, 2457, 2491, 2492, 2451, 2458, 2492, 2493, 2468, 2467, 2509, 2510, 2469, 2468, 2510, 2511, 2470, 2469, 2511, 2512, 2471, 2470, 2512, 2513, 2472, 2471, 2513, 2514, 2473, 2472, 2514, 2507, 2474, 2473, 2507, 2508, 2467, 2474, 2508, 2509, 2484, 2483, 2465, 2464, 2485, 2484, 2464, 2463, 2486, 2485, 2463, 2462, 2487, 2486, 2462, 2461, 2488, 2487, 2461, 2460, 2489, 2488, 2460, 2459, 2490, 2489, 2459, 2466, 2483, 2490, 2466, 2465, 2492, 2491, 2499, 2500, 2493, 2492, 2500, 2501, 2494, 2493, 2501, 2502, 2495, 2494, 2502, 2503, 2496, 2495, 2503, 2504, 2497, 2496, 2504, 2505, 2498, 2497, 2505, 2506, 2491, 2498, 2506, 2499, 2500, 2499, 2473, 2474, 2501, 2500, 2474, 2467, 2502, 2501, 2467, 2468, 2503, 2502, 2468, 2469, 2504, 2503, 2469, 2470, 2505, 2504, 2470, 2471, 2506, 2505, 2471, 2472, 2499, 2506, 2472, 2473, 2508, 2507, 2481, 2482, 2509, 2508, 2482, 2475, 2510, 2509, 2475, 2476, 2511, 2510, 2476, 2477, 2512, 2511, 2477, 2478, 2513, 2512, 2478, 2479, 2514, 2513, 2479, 2480, 2507, 2514, 2480, 2481, 2515, 2516, 2552, 2553, 2516, 2517, 2551, 2552, 2517, 2518, 2550, 2551, 2518, 2519, 2549, 2550, 2519, 2520, 2548, 2549, 2520, 2521, 2547, 2548, 2521, 2522, 2554, 2547, 2522, 2515, 2553, 2554, 2516, 2515, 2557, 2558, 2517, 2516, 2558, 2559, 2518, 2517, 2559, 2560, 2519, 2518, 2560, 2561, 2520, 2519, 2561, 2562, 2521, 2520, 2562, 2555, 2522, 2521, 2555, 2556, 2515, 2522, 2556, 2557, 2532, 2531, 2573, 2574, 2533, 2532, 2574, 2575, 2534, 2533, 2575, 2576, 2535, 2534, 2576, 2577, 2536, 2535, 2577, 2578, 2537, 2536, 2578, 2571, 2538, 2537, 2571, 2572, 2531, 2538, 2572, 2573, 2548, 2547, 2529, 2528, 2549, 2548, 2528, 2527, 2550, 2549, 2527, 2526, 2551, 2550, 2526, 2525, 2552, 2551, 2525, 2524, 2553, 2552, 2524, 2523, 2554, 2553, 2523, 2530, 2547, 2554, 2530, 2529, 2556, 2555, 2563, 2564, 2557, 2556, 2564, 2565, 2558, 2557, 2565, 2566, 2559, 2558, 2566, 2567, 2560, 2559, 2567, 2568, 2561, 2560, 2568, 2569, 2562, 2561, 2569, 2570, 2555, 2562, 2570, 2563, 2564, 2563, 2537, 2538, 2565, 2564, 2538, 2531, 2566, 2565, 2531, 2532, 2567, 2566, 2532, 2533, 2568, 2567, 2533, 2534, 2569, 2568, 2534, 2535, 2570, 2569, 2535, 2536, 2563, 2570, 2536, 2537, 2572, 2571, 2545, 2546, 2573, 2572, 2546, 2539, 2574, 2573, 2539, 2540, 2575, 2574, 2540, 2541, 2576, 2575, 2541, 2542, 2577, 2576, 2542, 2543, 2578, 2577, 2543, 2544, 2571, 2578, 2544, 2545, 2579, 2580, 2605, 2606, 2580, 2581, 2604, 2605, 2581, 2582, 2603, 2604, 2582, 2583, 2602, 2603, 2583, 2584, 2609, 2602, 2584, 2585, 2608, 2609, 2585, 2586, 2607, 2608, 2586, 2579, 2606, 2607, 2587, 2588, 2594, 2593, 2588, 2589, 2595, 2594, 2589, 2590, 2596, 2595, 2590, 2591, 2597, 2596, 2591, 2610, 2598, 2597, 2610, 2611, 2599, 2598, 2611, 2592, 2600, 2599, 2592, 2587, 2593, 2600, 2601, 2594, 2595, 2596, 2601, 2596, 2597, 2598, 2601, 2598, 2599, 2600, 2601, 2600, 2593, 2594, 2603, 2602, 2591, 2590, 2604, 2603, 2590, 2589, 2605, 2604, 2589, 2588, 2606, 2605, 2588, 2587, 2607, 2606, 2587, 2592, 2608, 2607, 2592, 2611, 2602, 2609, 2610, 2591, 2612, 2613, 2640, 2641, 2613, 2614, 2639, 2640, 2614, 2615, 2638, 2639, 2615, 2616, 2637, 2638, 2616, 2617, 2644, 2637, 2617, 2618, 2643, 2644, 2618, 2619, 2642, 2643, 2619, 2612, 2641, 2642, 2620, 2621, 2629, 2628, 2621, 2622, 2630, 2629, 2622, 2623, 2631, 2630, 2623, 2624, 2632, 2631, 2624, 2625, 2633, 2632, 2625, 2626, 2634, 2633, 2626, 2627, 2635, 2634, 2627, 2620, 2628, 2635, 2636, 2629, 2630, 2631, 2636, 2631, 2632, 2633, 2636, 2633, 2634, 2635, 2636, 2635, 2628, 2629, 2638, 2637, 2624, 2623, 2639, 2638, 2623, 2622, 2640, 2639, 2622, 2621, 2641, 2640, 2621, 2620, 2642, 2641, 2620, 2627, 2643, 2642, 2627, 2626, 2644, 2643, 2626, 2625, 2637, 2644, 2625, 2624, 2645, 2646, 2673, 2674, 2646, 2647, 2672, 2673, 2647, 2648, 2671, 2672, 2648, 2649, 2670, 2671, 2649, 2650, 2677, 2670, 2650, 2651, 2676, 2677, 2651, 2652, 2675, 2676, 2652, 2645, 2674, 2675, 2653, 2654, 2662, 2661, 2654, 2655, 2663, 2662, 2655, 2656, 2664, 2663, 2656, 2657, 2665, 2664, 2657, 2658, 2666, 2665, 2658, 2659, 2667, 2666, 2659, 2660, 2668, 2667, 2660, 2653, 2661, 2668, 2669, 2662, 2663, 2664, 2669, 2664, 2665, 2666, 2669, 2666, 2667, 2668, 2669, 2668, 2661, 2662, 2671, 2670, 2657, 2656, 2672, 2671, 2656, 2655, 2673, 2672, 2655, 2654, 2674, 2673, 2654, 2653, 2675, 2674, 2653, 2660, 2676, 2675, 2660, 2659, 2677, 2676, 2659, 2658, 2670, 2677, 2658, 2657, 2678, 2679, 2706, 2707, 2679, 2680, 2705, 2706, 2680, 2681, 2704, 2705, 2681, 2682, 2703, 2704, 2682, 2683, 2710, 2703, 2683, 2684, 2709, 2710, 2684, 2685, 2708, 2709, 2685, 2678, 2707, 2708, 2686, 2687, 2695, 2694, 2687, 2688, 2696, 2695, 2688, 2689, 2697, 2696, 2689, 2690, 2698, 2697, 2690, 2691, 2699, 2698, 2691, 2692, 2700, 2699, 2692, 2693, 2701, 2700, 2693, 2686, 2694, 2701, 2702, 2695, 2696, 2697, 2702, 2697, 2698, 2699, 2702, 2699, 2700, 2701, 2702, 2701, 2694, 2695, 2704, 2703, 2690, 2689, 2705, 2704, 2689, 2688, 2706, 2705, 2688, 2687, 2707, 2706, 2687, 2686, 2708, 2707, 2686, 2693, 2709, 2708, 2693, 2692, 2710, 2709, 2692, 2691, 2703, 2710, 2691, 2690, 2711, 2712, 2739, 2740, 2712, 2713, 2738, 2739, 2713, 2714, 2737, 2738, 2714, 2715, 2736, 2737, 2715, 2716, 2743, 2736, 2716, 2717, 2742, 2743, 2717, 2718, 2741, 2742, 2718, 2711, 2740, 2741, 2719, 2720, 2728, 2727, 2720, 2721, 2729, 2728, 2721, 2722, 2730, 2729, 2722, 2723, 2731, 2730, 2723, 2724, 2732, 2731, 2724, 2725, 2733, 2732, 2725, 2726, 2734, 2733, 2726, 2719, 2727, 2734, 2735, 2728, 2729, 2730, 2735, 2730, 2731, 2732, 2735, 2732, 2733, 2734, 2735, 2734, 2727, 2728, 2737, 2736, 2723, 2722, 2738, 2737, 2722, 2721, 2739, 2738, 2721, 2720, 2740, 2739, 2720, 2719, 2741, 2740, 2719, 2726, 2742, 2741, 2726, 2725, 2743, 2742, 2725, 2724, 2736, 2743, 2724, 2723, 2744, 2745, 2772, 2773, 2745, 2746, 2771, 2772, 2746, 2747, 2770, 2771, 2747, 2748, 2769, 2770, 2748, 2749, 2776, 2769, 2749, 2750, 2775, 2776, 2750, 2751, 2774, 2775, 2751, 2744, 2773, 2774, 2752, 2753, 2761, 2760, 2753, 2754, 2762, 2761, 2754, 2755, 2763, 2762, 2755, 2756, 2764, 2763, 2756, 2757, 2765, 2764, 2757, 2758, 2766, 2765, 2758, 2759, 2767, 2766, 2759, 2752, 2760, 2767, 2768, 2761, 2762, 2763, 2768, 2763, 2764, 2765, 2768, 2765, 2766, 2767, 2768, 2767, 2760, 2761, 2770, 2769, 2756, 2755, 2771, 2770, 2755, 2754, 2772, 2771, 2754, 2753, 2773, 2772, 2753, 2752, 2774, 2773, 2752, 2759, 2775, 2774, 2759, 2758, 2776, 2775, 2758, 2757, 2769, 2776, 2757, 2756, 2777, 2778, 2805, 2806, 2778, 2779, 2804, 2805, 2779, 2780, 2803, 2804, 2780, 2781, 2802, 2803, 2781, 2782, 2809, 2802, 2782, 2783, 2808, 2809, 2783, 2784, 2807, 2808, 2784, 2777, 2806, 2807, 2785, 2786, 2794, 2793, 2786, 2787, 2795, 2794, 2787, 2788, 2796, 2795, 2788, 2789, 2797, 2796, 2789, 2790, 2798, 2797, 2790, 2791, 2799, 2798, 2791, 2792, 2800, 2799, 2792, 2785, 2793, 2800, 2801, 2794, 2795, 2796, 2801, 2796, 2797, 2798, 2801, 2798, 2799, 2800, 2801, 2800, 2793, 2794, 2803, 2802, 2789, 2788, 2804, 2803, 2788, 2787, 2805, 2804, 2787, 2786, 2806, 2805, 2786, 2785, 2807, 2806, 2785, 2792, 2808, 2807, 2792, 2791, 2809, 2808, 2791, 2790, 2802, 2809, 2790, 2789, 1699, 1698, 1701, 1700, 2609, 2608, 2611, 2610]
                            rel material:binding = </Cache1/mtl/initialShadingGroup>
                            point3f[] points = [(6.39984, -4.349679e-19, 3.2000427), (6.39984, 0.32, 3.2000427), (6.240638, -3.5797337e-19, 3.0408401), (6.240638, 0.15882534, 3.0408401), (6.39984, -1.0371612e-19, 3.1551738), (6.240638, -2.8573558e-19, 3.0371718), (6.240638, 0.15882534, 3.0371718), (6.39984, 0.32, 3.1551738), (6.3546305, -3.444875e-19, 3.2000427), (6.3546305, 0.32, 3.2000427), (6.3546305, 0.32, 3.1551738), (6.236742, 0.15882534, 3.0371718), (6.236742, 0.15882534, 3.0408401), (6.236742, -1.6462209e-19, 3.0408401), (6.236742, 0.15451507, 3.0408401), (6.240638, 0.15451507, 3.0371718), (6.240638, 0.15451507, 3.0408401), (6.236742, 0.006479934, 3.0408401), (6.240638, 0.006479934, 3.0371718), (6.240638, 0.006479934, 3.0408401), (6.2416954, 0, 3.0458755), (6.2456727, -3.3945383e-24, 3.0421305), (6.2456727, 0, 3.0458755), (6.393629, -1.0143662e-24, 3.1551738), (6.3546305, 0, 3.1938314), (6.393629, 0, 3.1938314), (6.39984, 0.0117769465, 3.1551738), (6.3546305, 0.0117769465, 3.2000427), (6.39984, 0.0117769465, 3.2000427), (6.39984, 0.27258798, 3.1551738), (6.3546305, 0.27258798, 3.2000427), (6.39984, 0.27258798, 3.2000427), (6.2457237, 7.450581e-9, 2.4000335), (6.2406883, 7.450581e-9, 2.4000328), (6.2406883, 0.0064799413, 2.4000328), (6.2406883, 0.15451509, 2.4000328), (6.2406883, 0.15882534, 2.4000328), (6.236906, 0.15882534, 2.4000328), (6.3548512, 0.32, 2.400053), (6.399891, 0.32, 2.400053), (6.399891, 0.272588, 2.400053), (6.399891, 0.0117769465, 2.400053), (6.399891, 2.4978776e-19, 2.400053), (6.3936796, -4.9631933e-25, 2.400053), (6.236906, 0.15882534, 0.8001032), (6.2406883, 0.15882534, 0.8001032), (6.2406883, 0.15451509, 0.8001032), (6.2406883, 0.0064799413, 0.8001032), (6.2406883, 7.450581e-9, 0.8001032), (6.2457237, 7.450581e-9, 0.80010575), (6.3936796, -1.3028095e-23, 0.8001638), (6.399891, -4.3066923e-20, 0.8001638), (6.399891, 0.0117769465, 0.8001638), (6.399891, 0.272588, 0.8001638), (6.399891, 0.32, 0.8001638), (6.3548512, 0.32, 0.8001638), (6.23707, 0.15882534, 1.5999414), (6.240739, 0.15882534, 1.5999414), (6.240739, 0.15451507, 1.5999414), (6.240739, 0.006479934, 1.5999414), (6.240739, 1.6176145e-20, 1.5999414), (6.2457743, -1.4992649e-24, 1.5999414), (6.39373, -6.7208425e-25, 1.5999414), (6.3999414, 3.478385e-21, 1.5999414), (6.3999414, 0.0117769465, 1.5999414), (6.3999414, 0.27258798, 1.5999414), (6.3999414, 0.32, 1.5999414), (6.355072, 0.32, 1.5999414), (6.39984, 0.32000002, 1.1920929e-7), (6.39984, 1.7346366e-19, 1.1920929e-7), (6.240638, 2.9802322e-8, 0.15920249), (6.240638, 0.15882537, 0.15920249), (6.3546305, 0.32000002, 1.1920929e-7), (6.3546305, 0, 1.1920929e-7), (6.236742, 2.9802322e-8, 0.15920249), (6.236742, 0.15882537, 0.15920249), (6.240638, 2.9802322e-8, 0.16335832), (6.240638, 0.15882537, 0.16335832), (6.236742, 0.15882537, 0.16335832), (6.3546305, 0.32000002, 0.045599043), (6.39984, 0.32000002, 0.045599043), (6.39984, 1.7346337e-19, 0.045599043), (6.236742, 0.1545151, 0.15920249), (6.240638, 0.1545151, 0.15920249), (6.240638, 0.1545151, 0.16335832), (6.236742, 0.0064799637, 0.15920249), (6.240638, 0.0064799637, 0.15920249), (6.240638, 0.0064799637, 0.16335832), (6.2416954, 2.9802322e-8, 0.15416732), (6.2456727, 2.9802322e-8, 0.15416732), (6.2456727, 2.9802322e-8, 0.15841003), (6.393629, 9.098987e-24, 0.045599043), (6.393629, 2.1753532e-23, 0.0062111914), (6.3546305, 1.7183146e-24, 0.0062111914), (6.39984, 0.0117769465, 0.045599043), (6.39984, 0.0117769465, 1.1920929e-7), (6.3546305, 0.0117769465, 1.1920929e-7), (6.39984, 0.272588, 0.045599043), (6.39984, 0.272588, 1.1920929e-7), (6.3546305, 0.272588, 1.1920929e-7), (5.6000004, 0.15882534, 3.0371718), (5.600082, 0.15882535, 2.4000328), (5.6000004, 0.15882534, 3.0408401), (5.6000004, 0.15451507, 3.0408401), (5.6000004, 0.006479934, 3.0408401), (5.6000004, 1.3010427e-19, 3.0408401), (5.6000004, 0, 3.0458755), (5.6000004, 0, 3.1938314), (5.6000004, 4.3368097e-20, 3.2000427), (5.6000004, 0.0117769465, 3.2000427), (5.6000004, 0.27258798, 3.2000427), (5.6000004, 0.32, 3.2000427), (5.6000004, 0.32, 3.1551738), (5.6001425, 0.32, 2.400053), (5.6001635, 0.15882535, 1.5999414), (5.6002846, 0.32, 1.5999414), (5.600082, 0.15882535, 0.8001032), (5.6001425, 0.32, 0.8001638), (5.6000004, 0.32000002, 0.045599043), (5.6000004, 0.32000002, 1.1920929e-7), (5.6000004, 0.272588, 1.1920929e-7), (5.6000004, 0.0117769465, 1.1920929e-7), (5.6000004, 0, 1.1920929e-7), (5.6000004, 1.7370792e-24, 0.0062111914), (5.6000004, 2.9802322e-8, 0.15416732), (5.6000004, 2.9802322e-8, 0.15920249), (5.6000004, 0.0064799637, 0.15920249), (5.6000004, 0.1545151, 0.15920249), (5.6000004, 0.15882537, 0.15920249), (5.6000004, 0.15882537, 0.16335832), (5.852002, -6.657989e-20, 2.1479983), (5.6000004, -2.3629345e-20, 2.0436158), (5.3479986, -3.0668613e-20, 2.1479983), (5.243616, -1.02351665e-19, 2.4), (5.3479986, -8.045739e-20, 2.6520019), (5.6000004, -1.180887e-19, 2.7563844), (5.852002, -1.183206e-19, 2.6520019), (5.9563847, -8.153001e-20, 2.4), (5.852002, 0.15882534, 2.1479983), (5.6000004, 0.15882534, 2.0436158), (5.3479986, 0.15882534, 2.1479983), (5.243616, 0.15882534, 2.4), (5.3479986, 0.15882534, 2.6520019), (5.6000004, 0.15882534, 2.7563844), (5.852002, 0.15882534, 2.6520019), (5.9563847, 0.15882534, 2.4), (5.7869935, -5.3084574e-21, 2.2130067), (5.6000004, 5.8532913e-19, 2.1355515), (5.413007, 7.471707e-19, 2.2130067), (5.3355513, 0, 2.4), (5.413007, -3.8134386e-19, 2.5869935), (5.6000004, -1.5341216e-19, 2.6644487), (5.7869935, 1.1167871e-19, 2.5869935), (5.8644485, 7.3636135e-21, 2.4), (5.7869935, 0.15882534, 2.2130067), (5.6000004, 0.15882534, 2.1355515), (5.413007, 0.15882534, 2.2130067), (5.3355513, 0.15882534, 2.4), (5.413007, 0.15882534, 2.5869935), (5.6000004, 0.15882534, 2.6644487), (5.7869935, 0.15882534, 2.5869935), (5.8644485, 0.15882534, 2.4), (5.852002, 0.0075166663, 2.6520019), (5.6000004, 0.0075166663, 2.7563844), (5.3479986, 0.0075166663, 2.6520019), (5.243616, 0.0075166663, 2.4), (5.3479986, 0.0075166663, 2.1479983), (5.6000004, 0.0075166663, 2.0436158), (5.852002, 0.0075166663, 2.1479983), (5.9563847, 0.0075166663, 2.4), (5.8383875, 0, 2.6383877), (5.937131, 0, 2.4), (5.8383875, 0, 2.1616123), (5.6000004, 0, 2.062869), (5.3616123, 0, 2.1616123), (5.262869, 0, 2.4), (5.3616123, 0, 2.6383877), (5.6000004, 0, 2.737131), (5.800478, 0, 2.6004782), (5.883519, 0, 2.4), (5.800478, 0, 2.199522), (5.6000004, 0, 2.1164813), (5.399522, 0, 2.199522), (5.3164816, 0, 2.4), (5.399522, 0, 2.6004782), (5.6000004, 0, 2.683519), (5.7869935, 0.012202854, 2.5869935), (5.8644485, 0.012202854, 2.4), (5.7869935, 0.012202854, 2.2130067), (5.6000004, 0.012202854, 2.1355515), (5.413007, 0.012202854, 2.2130067), (5.3355513, 0.012202854, 2.4), (5.413007, 0.012202854, 2.5869935), (5.6000004, 0.012202854, 2.6644487), (5.852002, 5.1453555e-20, 1.3479984), (5.6000004, 1.3017149e-19, 1.2436159), (5.3479986, 1.068463e-19, 1.3479984), (5.243616, -6.9159156e-20, 1.6), (5.3479986, -1.91062e-19, 1.8520017), (5.6000004, -1.3668944e-19, 1.9563842), (5.852002, -1.8869163e-20, 1.8520017), (5.9563847, 5.3619014e-20, 1.6), (5.852002, 0.15882534, 1.3479984), (5.6000004, 0.15882534, 1.2436159), (5.3479986, 0.15882534, 1.3479984), (5.243616, 0.15882534, 1.6), (5.3479986, 0.15882534, 1.8520017), (5.6000004, 0.15882534, 1.9563842), (5.852002, 0.15882534, 1.8520017), (5.9563847, 0.15882534, 1.6), (5.7869935, -1.6335163e-20, 1.4130067), (5.6000004, -1.1667801e-19, 1.3355515), (5.413007, -1.1667801e-19, 1.4130067), (5.3355513, 9.240397e-20, 1.6), (5.413007, 1.6040555e-19, 1.7869935), (5.6000004, -2.4461695e-20, 1.8644485), (5.7869935, -4.9159344e-21, 1.7869935), (5.8644485, 8.767038e-20, 1.6), (5.7869935, 0.15882534, 1.4130067), (5.6000004, 0.15882534, 1.3355515), (5.413007, 0.15882534, 1.4130067), (5.3355513, 0.15882534, 1.6), (5.413007, 0.15882534, 1.7869935), (5.6000004, 0.15882534, 1.8644485), (5.7869935, 0.15882534, 1.7869935), (5.8644485, 0.15882534, 1.6), (5.852002, 0.0075166663, 1.8520017), (5.6000004, 0.0075166663, 1.9563842), (5.3479986, 0.0075166663, 1.8520017), (5.243616, 0.0075166663, 1.6), (5.3479986, 0.0075166663, 1.3479984), (5.6000004, 0.0075166663, 1.2436159), (5.852002, 0.0075166663, 1.3479984), (5.9563847, 0.0075166663, 1.6), (5.8383875, 0, 1.8383877), (5.937131, 0, 1.6), (5.8383875, 0, 1.3616123), (5.6000004, 0, 1.2628689), (5.3616123, 0, 1.3616123), (5.262869, 0, 1.6), (5.3616123, 0, 1.8383877), (5.6000004, 0, 1.9371312), (5.800478, 0, 1.800478), (5.883519, 0, 1.6), (5.800478, 0, 1.3995221), (5.6000004, 0, 1.3164814), (5.399522, 0, 1.3995221), (5.3164816, 0, 1.6), (5.399522, 0, 1.800478), (5.6000004, 0, 1.8835187), (5.7869935, 0.012202854, 1.7869935), (5.8644485, 0.012202854, 1.6), (5.7869935, 0.012202854, 1.4130067), (5.6000004, 0.012202854, 1.3355515), (5.413007, 0.012202854, 1.4130067), (5.3355513, 0.012202854, 1.6), (5.413007, 0.012202854, 1.7869935), (5.6000004, 0.012202854, 1.8644485), (5.852002, 1.4070002e-19, 0.5479983), (5.6000004, -9.775504e-21, 0.44361582), (5.3479986, 1.22090824e-20, 0.5479983), (5.243616, 5.979752e-20, 0.8), (5.3479986, -5.481948e-20, 1.0520017), (5.6000004, -2.9425368e-19, 1.1563842), (5.852002, -5.6429835e-20, 1.0520017), (5.9563847, 2.7849812e-19, 0.8), (5.852002, 0.15882534, 0.5479983), (5.6000004, 0.15882534, 0.44361582), (5.3479986, 0.15882534, 0.5479983), (5.243616, 0.15882534, 0.8), (5.3479986, 0.15882534, 1.0520017), (5.6000004, 0.15882534, 1.1563842), (5.852002, 0.15882534, 1.0520017), (5.9563847, 0.15882534, 0.8), (5.7869935, 3.0121007e-19, 0.61300665), (5.6000004, 1.3405496e-21, 0.5355515), (5.413007, -2.8291642e-19, 0.61300665), (5.3355513, -1.1872213e-19, 0.8), (5.413007, 1.5456273e-19, 0.98699343), (5.6000004, 7.21538e-20, 1.0644486), (5.7869935, 4.8091615e-20, 0.98699343), (5.8644485, 3.0457822e-19, 0.8), (5.7869935, 0.15882534, 0.61300665), (5.6000004, 0.15882534, 0.5355515), (5.413007, 0.15882534, 0.61300665), (5.3355513, 0.15882534, 0.8), (5.413007, 0.15882534, 0.98699343), (5.6000004, 0.15882534, 1.0644486), (5.7869935, 0.15882534, 0.98699343), (5.8644485, 0.15882534, 0.8), (5.852002, 0.0075166663, 1.0520017), (5.6000004, 0.0075166663, 1.1563842), (5.3479986, 0.0075166663, 1.0520017), (5.243616, 0.0075166663, 0.8), (5.3479986, 0.0075166663, 0.5479983), (5.6000004, 0.0075166663, 0.44361582), (5.852002, 0.0075166663, 0.5479983), (5.9563847, 0.0075166663, 0.8), (5.8383875, 0, 1.0383878), (5.937131, 0, 0.8), (5.8383875, 0, 0.5616123), (5.6000004, 0, 0.46286893), (5.3616123, 0, 0.5616123), (5.262869, 0, 0.8), (5.3616123, 0, 1.0383878), (5.6000004, 0, 1.1371312), (5.800478, 0, 1.000478), (5.883519, 0, 0.8), (5.800478, 0, 0.599522), (5.6000004, 0, 0.5164813), (5.399522, 0, 0.599522), (5.3164816, 0, 0.8), (5.399522, 0, 1.000478), (5.6000004, 0, 1.0835187), (5.7869935, 0.012202854, 0.98699343), (5.8644485, 0.012202854, 0.8), (5.7869935, 0.012202854, 0.61300665), (5.6000004, 0.012202854, 0.5355515), (5.413007, 0.012202854, 0.61300665), (5.3355513, 0.012202854, 0.8), (5.413007, 0.012202854, 0.98699343), (5.6000004, 0.012202854, 1.0644486), (6.187645, 0.32000014, 2.6123552), (6, 0.32000014, 2.5346303), (5.812355, 0.32000014, 2.6123552), (5.7346306, 0.32000014, 2.8000002), (5.812355, 0.32000014, 2.9876447), (6, 0.32000014, 3.0653696), (6.187645, 0.32000014, 2.9876447), (6.2653694, 0.32000014, 2.8000002), (6.187645, 0.48082992, 2.6123552), (6, 0.48082992, 2.5346303), (5.812355, 0.48082992, 2.6123552), (5.7346306, 0.48082992, 2.8000002), (5.812355, 0.48082992, 2.9876447), (6, 0.48082992, 3.0653696), (6.187645, 0.48082992, 2.9876447), (6.2653694, 0.48082992, 2.8000002), (6.167904, 0.48082992, 2.6320963), (6, 0.48082992, 2.5625482), (5.832096, 0.48082992, 2.6320963), (5.7625484, 0.48082992, 2.8000002), (5.832096, 0.48082992, 2.9679039), (6, 0.48082992, 3.0374517), (6.167904, 0.48082992, 2.9679039), (6.237452, 0.48082992, 2.8000002), (6, 0.48082992, 2.8000002), (5.812355, 0.4642254, 2.9876447), (5.7346306, 0.4642254, 2.8000002), (5.812355, 0.4642254, 2.6123552), (6, 0.4642254, 2.5346303), (6.187645, 0.4642254, 2.6123552), (6.2653694, 0.4642254, 2.8000002), (6.187645, 0.4642254, 2.9876447), (6, 0.4642254, 3.0653696), (5.812254, 0.32000014, 1.8122966), (5.7345285, 0.32000014, 1.9999413), (5.812254, 0.32000014, 2.187586), (5.999899, 0.32000014, 2.265311), (6.187543, 0.32000014, 2.187586), (6.2652683, 0.32000014, 1.9999413), (6.187543, 0.32000014, 1.8122966), (5.999899, 0.32000014, 1.7345717), (5.812254, 0.48082992, 1.8122966), (5.7345285, 0.48082992, 1.9999413), (5.812254, 0.48082992, 2.187586), (5.999899, 0.48082992, 2.265311), (6.187543, 0.48082992, 2.187586), (6.2652683, 0.48082992, 1.9999413), (6.187543, 0.48082992, 1.8122966), (5.999899, 0.48082992, 1.7345717), (5.831995, 0.48082992, 1.8320374), (5.7624464, 0.48082992, 1.9999413), (5.831995, 0.48082992, 2.1678452), (5.999899, 0.48082992, 2.2373934), (6.1678023, 0.48082992, 2.1678452), (6.2373505, 0.48082992, 1.9999413), (6.1678023, 0.48082992, 1.8320374), (5.999899, 0.48082992, 1.7624894), (5.999899, 0.48082992, 1.9999413), (6.187543, 0.4642254, 2.187586), (5.999899, 0.4642254, 2.265311), (5.812254, 0.4642254, 2.187586), (5.7345285, 0.4642254, 1.9999413), (5.812254, 0.4642254, 1.8122966), (5.999899, 0.4642254, 1.7345717), (6.187543, 0.4642254, 1.8122966), (6.2652683, 0.4642254, 1.9999413), (5.812254, 0.32000014, 1.0122967), (5.7345285, 0.32000014, 1.1999414), (5.812254, 0.32000014, 1.3875861), (5.999899, 0.32000014, 1.465311), (6.187543, 0.32000014, 1.3875861), (6.2652683, 0.32000014, 1.1999414), (6.187543, 0.32000014, 1.0122967), (5.999899, 0.32000014, 0.9345715), (5.812254, 0.48082992, 1.0122967), (5.7345285, 0.48082992, 1.1999414), (5.812254, 0.48082992, 1.3875861), (5.999899, 0.48082992, 1.465311), (6.187543, 0.48082992, 1.3875861), (6.2652683, 0.48082992, 1.1999414), (6.187543, 0.48082992, 1.0122967), (5.999899, 0.48082992, 0.9345715), (5.831995, 0.48082992, 1.0320375), (5.7624464, 0.48082992, 1.1999414), (5.831995, 0.48082992, 1.3678452), (5.999899, 0.48082992, 1.4373932), (6.1678023, 0.48082992, 1.3678452), (6.2373505, 0.48082992, 1.1999414), (6.1678023, 0.48082992, 1.0320375), (5.999899, 0.48082992, 0.96248937), (5.999899, 0.48082992, 1.1999414), (6.187543, 0.4642254, 1.3875861), (5.999899, 0.4642254, 1.465311), (5.812254, 0.4642254, 1.3875861), (5.7345285, 0.4642254, 1.1999414), (5.812254, 0.4642254, 1.0122967), (5.999899, 0.4642254, 0.9345715), (6.187543, 0.4642254, 1.0122967), (6.2652683, 0.4642254, 1.1999414), (6.187645, 0.32000014, 0.2123553), (6, 0.32000014, 0.13463032), (5.812355, 0.32000014, 0.2123553), (5.7346306, 0.32000014, 0.4), (5.812355, 0.32000014, 0.5876447), (6, 0.32000014, 0.6653697), (6.187645, 0.32000014, 0.5876447), (6.2653694, 0.32000014, 0.4), (6.187645, 0.48082992, 0.2123553), (6, 0.48082992, 0.13463032), (5.812355, 0.48082992, 0.2123553), (5.7346306, 0.48082992, 0.4), (5.812355, 0.48082992, 0.5876447), (6, 0.48082992, 0.6653697), (6.187645, 0.48082992, 0.5876447), (6.2653694, 0.48082992, 0.4), (6.167904, 0.48082992, 0.23209617), (6, 0.48082992, 0.16254812), (5.832096, 0.48082992, 0.23209617), (5.7625484, 0.48082992, 0.4), (5.832096, 0.48082992, 0.5679038), (6, 0.48082992, 0.6374518), (6.167904, 0.48082992, 0.5679038), (6.237452, 0.48082992, 0.4), (6, 0.48082992, 0.4), (5.812355, 0.4642254, 0.5876447), (5.7346306, 0.4642254, 0.4), (5.812355, 0.4642254, 0.2123553), (6, 0.4642254, 0.13463032), (6.187645, 0.4642254, 0.2123553), (6.2653694, 0.4642254, 0.4), (6.187645, 0.4642254, 0.5876447), (6, 0.4642254, 0.6653697), (1.3876448, 0.32000014, 2.6123552), (1.2, 0.32000014, 2.5346303), (1.0123553, 0.32000014, 2.6123552), (0.93463033, 0.32000014, 2.8000002), (1.0123553, 0.32000014, 2.9876447), (1.2, 0.32000014, 3.0653696), (1.3876448, 0.32000014, 2.9876447), (1.4653697, 0.32000014, 2.8000002), (1.3876448, 0.48082992, 2.6123552), (1.2, 0.48082992, 2.5346303), (1.0123553, 0.48082992, 2.6123552), (0.93463033, 0.48082992, 2.8000002), (1.0123553, 0.48082992, 2.9876447), (1.2, 0.48082992, 3.0653696), (1.3876448, 0.48082992, 2.9876447), (1.4653697, 0.48082992, 2.8000002), (1.367904, 0.48082992, 2.6320963), (1.2, 0.48082992, 2.5625482), (1.0320961, 0.48082992, 2.6320963), (0.96254814, 0.48082992, 2.8000002), (1.0320961, 0.48082992, 2.9679039), (1.2, 0.48082992, 3.0374517), (1.367904, 0.48082992, 2.9679039), (1.437452, 0.48082992, 2.8000002), (1.2, 0.48082992, 2.8000002), (1.0123553, 0.4642254, 2.9876447), (0.93463033, 0.4642254, 2.8000002), (1.0123553, 0.4642254, 2.6123552), (1.2, 0.4642254, 2.5346303), (1.3876448, 0.4642254, 2.6123552), (1.4653697, 0.4642254, 2.8000002), (1.3876448, 0.4642254, 2.9876447), (1.2, 0.4642254, 3.0653696), (2.4000154, 0.32, 2.4001484), (2.3999953, 0.15882535, 2.400108), (2.4000707, 0.15882534, 3.0371718), (2.4000707, 0.15882534, 3.0408401), (2.4000707, 0.15451507, 3.0408401), (2.4000707, 0.006479934, 3.0408401), (2.4000707, 1.5006248e-19, 3.0408401), (2.4000723, 0, 3.0458755), (2.400111, 0, 3.1938314), (2.400111, 3.0289658e-19, 3.2000427), (2.400111, 0.0117769465, 3.2000427), (2.400111, 0.27258798, 3.2000427), (2.400111, 0.32, 3.2000427), (2.400111, 0.32, 3.1551738), (1.6, 0.32, 2.4003863), (1.6, 0.15882535, 2.4002652), (1.6, 0.15882534, 3.0371718), (1.6, 0.15882534, 3.0408401), (1.6, 0.15451507, 3.0408401), (1.6, 0.006479934, 3.0408401), (1.6, 1.7862342e-19, 3.0408401), (1.6, 0, 3.0458755), (1.6, 0, 3.1938314), (1.6, 8.544626e-20, 3.2000427), (1.6, 0.0117769465, 3.2000427), (1.6, 0.27258798, 3.2000427), (1.6, 0.32, 3.2000427), (1.6, 0.32, 3.1551738), (2.4000154, 0.32, 0.80025935), (2.3999953, 0.15882535, 0.8001785), (2.39992, 0.32, 1.6000214), (2.39992, 0.15882535, 1.6000214), (2.400111, 0.32000002, 0.045599043), (2.400111, 0.32000002, 1.1920929e-7), (2.400111, 0.272588, 1.1920929e-7), (2.400111, 0.0117769465, 1.1920929e-7), (2.400111, 0, 1.1920929e-7), (2.400111, 8.271806e-25, 0.0062111914), (2.4000723, 2.9802322e-8, 0.15416732), (2.4000707, 2.9802322e-8, 0.15920249), (2.4000707, 0.0064799637, 0.15920249), (2.4000707, 0.1545151, 0.15920249), (2.4000707, 0.15882537, 0.15920249), (2.4000707, 0.15882537, 0.16335832), (1.6, 0.32, 0.8003863), (1.6, 0.32000002, 0.045599043), (1.6, 0.32000002, 1.1920929e-7), (1.6, 0.272588, 1.1920929e-7), (1.6, 0.0117769465, 1.1920929e-7), (1.6, 0, 1.1920929e-7), (1.6, 8.271806e-25, 0.0062111914), (1.6, 2.9802322e-8, 0.15416732), (1.6, 2.9802322e-8, 0.15920249), (1.6, 0.0064799637, 0.15920249), (1.6, 0.1545151, 0.15920249), (1.6, 0.15882537, 0.15920249), (1.6, 0.15882537, 0.16335832), (1.6, 0.15882535, 0.8002651), (1.6, 0.32, 1.6000215), (1.6, 0.15882535, 1.600022), (0.8002218, 0.0117769465, 3.2000427), (0.8002218, 8.605381e-20, 3.2000427), (0.8002218, 0.27258798, 3.2000427), (0.8002218, 0.32, 3.2000427), (0.8002218, 0.32, 3.1551738), (0.80014104, 0.15882534, 3.0408401), (0.80014104, 0.15882534, 3.0371718), (0.80014104, 0.15451507, 3.0408401), (0.80014104, 0.006479934, 3.0408401), (0.80014104, 1.9958214e-20, 3.0408401), (0.80014443, 0, 3.0458755), (0.8002218, 0, 3.1938314), (0.79990864, 0.15882535, 2.4001834), (0.79988843, 0.32, 2.400244), (0.8002218, 0.32000002, 0.045599043), (0.79988843, 0.32, 0.80035484), (0.8002218, 0.32000002, 1.1920929e-7), (0.8002218, 0.272588, 1.1920929e-7), (0.8002218, 0.0117769465, 1.1920929e-7), (0.8002218, 0, 1.1920929e-7), (0.8002218, 0, 0.0062111914), (0.80014443, 2.9802322e-8, 0.15416732), (0.80014104, 2.9802322e-8, 0.15920249), (0.80014104, 0.0064799637, 0.15920249), (0.80014104, 0.1545151, 0.15920249), (0.80014104, 0.15882537, 0.15920249), (0.80014104, 0.15882537, 0.16335832), (0.79990864, 0.15882535, 0.80025387), (0.79955506, 0.32, 1.6001015), (0.7996763, 0.15882535, 1.6001015), (1.8520017, 1.8439891e-20, 0.5479983), (1.6, -9.931362e-20, 0.44361582), (1.3479984, -1.4051256e-19, 0.5479983), (1.2436159, -3.455523e-20, 0.8), (1.3479984, -7.5971214e-20, 1.0520017), (1.6, -9.960187e-20, 1.1563842), (1.8520017, -5.7666974e-20, 1.0520017), (1.9563842, -8.138654e-20, 0.8), (1.8520017, 0.15882534, 0.5479983), (1.6, 0.15882534, 0.44361582), (1.3479984, 0.15882534, 0.5479983), (1.2436159, 0.15882534, 0.8), (1.3479984, 0.15882534, 1.0520017), (1.6, 0.15882534, 1.1563842), (1.8520017, 0.15882534, 1.0520017), (1.9563842, 0.15882534, 0.8), (1.7869935, 4.3213983e-19, 0.61300665), (1.6, 5.2496733e-19, 0.5355515), (1.4130067, 1.7650757e-19, 0.61300665), (1.3355515, 3.6537638e-19, 0.8), (1.4130067, 5.012085e-19, 0.98699343), (1.6, 2.0118939e-20, 1.0644486), (1.7869935, 0, 0.98699343), (1.8644485, 2.3230964e-19, 0.8), (1.7869935, 0.15882534, 0.61300665), (1.6, 0.15882534, 0.5355515), (1.4130067, 0.15882534, 0.61300665), (1.3355515, 0.15882534, 0.8), (1.4130067, 0.15882534, 0.98699343), (1.6, 0.15882534, 1.0644486), (1.7869935, 0.15882534, 0.98699343), (1.8644485, 0.15882534, 0.8), (1.8520017, 0.0075166663, 1.0520017), (1.6, 0.0075166663, 1.1563842), (1.3479984, 0.0075166663, 1.0520017), (1.2436159, 0.0075166663, 0.8), (1.3479984, 0.0075166663, 0.5479983), (1.6, 0.0075166663, 0.44361582), (1.8520017, 0.0075166663, 0.5479983), (1.9563842, 0.0075166663, 0.8), (1.8383877, 0, 1.0383878), (1.9371312, 0, 0.8), (1.8383877, 0, 0.5616123), (1.6, 0, 0.46286893), (1.3616123, 0, 0.5616123), (1.2628689, 0, 0.8), (1.3616123, 0, 1.0383878), (1.6, 0, 1.1371312), (1.800478, 0, 1.000478), (1.8835187, 0, 0.8), (1.800478, 0, 0.599522), (1.6, 0, 0.5164813), (1.3995221, 0, 0.599522), (1.3164814, 0, 0.8), (1.3995221, 0, 1.000478), (1.6, 0, 1.0835187), (1.7869935, 0.012202854, 0.98699343), (1.8644485, 0.012202854, 0.8), (1.7869935, 0.012202854, 0.61300665), (1.6, 0.012202854, 0.5355515), (1.4130067, 0.012202854, 0.61300665), (1.3355515, 0.012202854, 0.8), (1.4130067, 0.012202854, 0.98699343), (1.6, 0.012202854, 1.0644486), (1.0520017, 9.812113e-21, 0.5479983), (0.8, -9.880537e-21, 0.44361582), (0.5479983, 0, 0.5479983), (0.44361582, -9.88055e-21, 0.8), (0.5479983, -3.945773e-20, 1.0520017), (0.8, -6.0441124e-20, 1.1563842), (1.0520017, -3.086394e-20, 1.0520017), (1.1563842, 1.9692663e-20, 0.8), (1.0520017, 0.15882534, 0.5479983), (0.8, 0.15882534, 0.44361582), (0.5479983, 0.15882534, 0.5479983), (0.44361582, 0.15882534, 0.8), (0.5479983, 0.15882534, 1.0520017), (0.8, 0.15882534, 1.1563842), (1.0520017, 0.15882534, 1.0520017), (1.1563842, 0.15882534, 0.8), (0.98699343, 2.2818242e-20, 0.61300665), (0.8, 1.7212385e-19, 0.5355515), (0.61300665, 0, 0.61300665), (0.5355515, 0, 0.8), (0.61300665, 1.02354133e-19, 0.98699343), (0.8, 1.242984e-19, 1.0644486), (0.98699343, 2.2171723e-19, 0.98699343), (1.0644486, -5.925392e-20, 0.8), (0.98699343, 0.15882534, 0.61300665), (0.8, 0.15882534, 0.5355515), (0.61300665, 0.15882534, 0.61300665), (0.5355515, 0.15882534, 0.8), (0.61300665, 0.15882534, 0.98699343), (0.8, 0.15882534, 1.0644486), (0.98699343, 0.15882534, 0.98699343), (1.0644486, 0.15882534, 0.8), (1.0520017, 0.0075166663, 1.0520017), (0.8, 0.0075166663, 1.1563842), (0.5479983, 0.0075166663, 1.0520017), (0.44361582, 0.0075166663, 0.8), (0.5479983, 0.0075166663, 0.5479983), (0.8, 0.0075166663, 0.44361582), (1.0520017, 0.0075166663, 0.5479983), (1.1563842, 0.0075166663, 0.8), (1.0383878, 0, 1.0383878), (1.1371312, 0, 0.8), (1.0383878, 0, 0.5616123), (0.8, 0, 0.46286893), (0.5616123, 0, 0.5616123), (0.46286893, 0, 0.8), (0.5616123, 0, 1.0383878), (0.8, 0, 1.1371312), (1.000478, 0, 1.000478), (1.0835187, 0, 0.8), (1.000478, 0, 0.599522), (0.8, 0, 0.5164813), (0.599522, 0, 0.599522), (0.5164813, 0, 0.8), (0.599522, 0, 1.000478), (0.8, 0, 1.0835187), (0.98699343, 0.012202854, 0.98699343), (1.0644486, 0.012202854, 0.8), (0.98699343, 0.012202854, 0.61300665), (0.8, 0.012202854, 0.5355515), (0.61300665, 0.012202854, 0.61300665), (0.5355515, 0.012202854, 0.8), (0.61300665, 0.012202854, 0.98699343), (0.8, 0.012202854, 1.0644486), (1.8520017, -3.9261068e-20, 2.1479983), (1.6, -3.9261068e-20, 2.0436158), (1.3479984, -5.0809556e-20, 2.1479983), (1.2436159, -2.2013458e-19, 2.4), (1.3479984, -2.5939557e-19, 2.6520019), (1.6, -1.1633295e-19, 2.7563844), (1.8520017, -3.938486e-20, 2.6520019), (1.9563842, -5.7291305e-21, 2.4), (1.8520017, 0.15882534, 2.1479983), (1.6, 0.15882534, 2.0436158), (1.3479984, 0.15882534, 2.1479983), (1.2436159, 0.15882534, 2.4), (1.3479984, 0.15882534, 2.6520019), (1.6, 0.15882534, 2.7563844), (1.8520017, 0.15882534, 2.6520019), (1.9563842, 0.15882534, 2.4), (1.7869935, 0, 2.2130067), (1.6, 3.5831067e-20, 2.1355515), (1.4130067, -1.3818534e-19, 2.2130067), (1.3355515, -2.7251253e-19, 2.4), (1.4130067, -1.8553687e-19, 2.5869935), (1.6, -4.0237632e-20, 2.6644487), (1.7869935, -6.7604444e-20, 2.5869935), (1.8644485, -1.2537967e-19, 2.4), (1.7869935, 0.15882534, 2.2130067), (1.6, 0.15882534, 2.1355515), (1.4130067, 0.15882534, 2.2130067), (1.3355515, 0.15882534, 2.4), (1.4130067, 0.15882534, 2.5869935), (1.6, 0.15882534, 2.6644487), (1.7869935, 0.15882534, 2.5869935), (1.8644485, 0.15882534, 2.4), (1.8520017, 0.0075166663, 2.6520019), (1.6, 0.0075166663, 2.7563844), (1.3479984, 0.0075166663, 2.6520019), (1.2436159, 0.0075166663, 2.4), (1.3479984, 0.0075166663, 2.1479983), (1.6, 0.0075166663, 2.0436158), (1.8520017, 0.0075166663, 2.1479983), (1.9563842, 0.0075166663, 2.4), (1.8383877, 0, 2.6383877), (1.9371312, 0, 2.4), (1.8383877, 0, 2.1616123), (1.6, 0, 2.062869), (1.3616123, 0, 2.1616123), (1.2628689, 0, 2.4), (1.3616123, 0, 2.6383877), (1.6, 0, 2.737131), (1.800478, 0, 2.6004782), (1.8835187, 0, 2.4), (1.800478, 0, 2.199522), (1.6, 0, 2.1164813), (1.3995221, 0, 2.199522), (1.3164814, 0, 2.4), (1.3995221, 0, 2.6004782), (1.6, 0, 2.683519), (1.7869935, 0.012202854, 2.5869935), (1.8644485, 0.012202854, 2.4), (1.7869935, 0.012202854, 2.2130067), (1.6, 0.012202854, 2.1355515), (1.4130067, 0.012202854, 2.2130067), (1.3355515, 0.012202854, 2.4), (1.4130067, 0.012202854, 2.5869935), (1.6, 0.012202854, 2.6644487), (1.0520017, 4.6493005e-20, 2.1479983), (0.8, 2.2147658e-20, 2.0436158), (0.5479983, -2.5971993e-19, 2.1479983), (0.44361582, -1.4700105e-19, 2.4), (0.5479983, -2.1918914e-19, 2.6520019), (0.8, -4.1080157e-19, 2.7563844), (1.0520017, -2.6306613e-19, 2.6520019), (1.1563842, -2.4854684e-19, 2.4), (1.0520017, 0.15882534, 2.1479983), (0.8, 0.15882534, 2.0436158), (0.5479983, 0.15882534, 2.1479983), (0.44361582, 0.15882534, 2.4), (0.5479983, 0.15882534, 2.6520019), (0.8, 0.15882534, 2.7563844), (1.0520017, 0.15882534, 2.6520019), (1.1563842, 0.15882534, 2.4), (0.98699343, -1.0878149e-19, 2.2130067), (0.8, -1.3261848e-19, 2.1355515), (0.61300665, -7.661108e-20, 2.2130067), (0.5355515, -3.1641794e-19, 2.4), (0.61300665, -1.5543719e-19, 2.5869935), (0.8, 1.1054987e-19, 2.6644487), (0.98699343, -2.1394499e-19, 2.5869935), (1.0644486, -1.285111e-19, 2.4), (0.98699343, 0.15882534, 2.2130067), (0.8, 0.15882534, 2.1355515), (0.61300665, 0.15882534, 2.2130067), (0.5355515, 0.15882534, 2.4), (0.61300665, 0.15882534, 2.5869935), (0.8, 0.15882534, 2.6644487), (0.98699343, 0.15882534, 2.5869935), (1.0644486, 0.15882534, 2.4), (1.0520017, 0.0075166663, 2.6520019), (0.8, 0.0075166663, 2.7563844), (0.5479983, 0.0075166663, 2.6520019), (0.44361582, 0.0075166663, 2.4), (0.5479983, 0.0075166663, 2.1479983), (0.8, 0.0075166663, 2.0436158), (1.0520017, 0.0075166663, 2.1479983), (1.1563842, 0.0075166663, 2.4), (1.0383878, 0, 2.6383877), (1.1371312, 0, 2.4), (1.0383878, 0, 2.1616123), (0.8, 0, 2.062869), (0.5616123, 0, 2.1616123), (0.46286893, 0, 2.4), (0.5616123, 0, 2.6383877), (0.8, 0, 2.737131), (1.000478, 0, 2.6004782), (1.0835187, 0, 2.4), (1.000478, 0, 2.199522), (0.8, 0, 2.1164813), (0.599522, 0, 2.199522), (0.5164813, 0, 2.4), (0.599522, 0, 2.6004782), (0.8, 0, 2.683519), (0.98699343, 0.012202854, 2.5869935), (1.0644486, 0.012202854, 2.4), (0.98699343, 0.012202854, 2.2130067), (0.8, 0.012202854, 2.1355515), (0.61300665, 0.012202854, 2.2130067), (0.5355515, 0.012202854, 2.4), (0.61300665, 0.012202854, 2.5869935), (0.8, 0.012202854, 2.6644487), (1.8520017, 1.6043557e-19, 1.3479984), (1.6, -4.936009e-20, 1.2436159), (1.3479984, 3.43837e-21, 1.3479984), (1.2436159, 3.317422e-20, 1.6), (1.3479984, -2.2111507e-20, 1.8520017), (1.6, -1.2370066e-19, 1.9563842), (1.8520017, -2.0801598e-19, 1.8520017), (1.9563842, 6.623969e-20, 1.6), (1.8520017, 0.15882534, 1.3479984), (1.6, 0.15882534, 1.2436159), (1.3479984, 0.15882534, 1.3479984), (1.2436159, 0.15882534, 1.6), (1.3479984, 0.15882534, 1.8520017), (1.6, 0.15882534, 1.9563842), (1.8520017, 0.15882534, 1.8520017), (1.9563842, 0.15882534, 1.6), (1.7869935, 9.49277e-20, 1.4130067), (1.6, 1.8198369e-19, 1.3355515), (1.4130067, 0, 1.4130067), (1.3355515, 1.4712684e-19, 1.6), (1.4130067, 4.3175884e-19, 1.7869935), (1.6, 2.4074347e-19, 1.8644485), (1.7869935, 0, 1.7869935), (1.8644485, -9.802814e-20, 1.6), (1.7869935, 0.15882534, 1.4130067), (1.6, 0.15882534, 1.3355515), (1.4130067, 0.15882534, 1.4130067), (1.3355515, 0.15882534, 1.6), (1.4130067, 0.15882534, 1.7869935), (1.6, 0.15882534, 1.8644485), (1.7869935, 0.15882534, 1.7869935), (1.8644485, 0.15882534, 1.6), (1.8520017, 0.0075166663, 1.8520017), (1.6, 0.0075166663, 1.9563842), (1.3479984, 0.0075166663, 1.8520017), (1.2436159, 0.0075166663, 1.6), (1.3479984, 0.0075166663, 1.3479984), (1.6, 0.0075166663, 1.2436159), (1.8520017, 0.0075166663, 1.3479984), (1.9563842, 0.0075166663, 1.6), (1.8383877, 0, 1.8383877), (1.9371312, 0, 1.6), (1.8383877, 0, 1.3616123), (1.6, 0, 1.2628689), (1.3616123, 0, 1.3616123), (1.2628689, 0, 1.6), (1.3616123, 0, 1.8383877), (1.6, 0, 1.9371312), (1.800478, 0, 1.800478), (1.8835187, 0, 1.6), (1.800478, 0, 1.3995221), (1.6, 0, 1.3164814), (1.3995221, 0, 1.3995221), (1.3164814, 0, 1.6), (1.3995221, 0, 1.800478), (1.6, 0, 1.8835187), (1.7869935, 0.012202854, 1.7869935), (1.8644485, 0.012202854, 1.6), (1.7869935, 0.012202854, 1.4130067), (1.6, 0.012202854, 1.3355515), (1.4130067, 0.012202854, 1.4130067), (1.3355515, 0.012202854, 1.6), (1.4130067, 0.012202854, 1.7869935), (1.6, 0.012202854, 1.8644485), (1.0520017, 8.973971e-20, 1.3479984), (0.8, 1.311557e-19, 1.2436159), (0.5479983, 2.7186276e-20, 1.3479984), (0.44361582, 9.7958425e-20, 1.6), (0.5479983, 1.4238058e-19, 1.8520017), (0.8, 1.4260603e-19, 1.9563842), (1.0520017, 9.533242e-20, 1.8520017), (1.1563842, -5.4047658e-20, 1.6), (1.0520017, 0.15882534, 1.3479984), (0.8, 0.15882534, 1.2436159), (0.5479983, 0.15882534, 1.3479984), (0.44361582, 0.15882534, 1.6), (0.5479983, 0.15882534, 1.8520017), (0.8, 0.15882534, 1.9563842), (1.0520017, 0.15882534, 1.8520017), (1.1563842, 0.15882534, 1.6), (0.98699343, 1.273045e-19, 1.4130067), (0.8, -2.0662806e-19, 1.3355515), (0.61300665, -3.933435e-20, 1.4130067), (0.5355515, 4.35565e-20, 1.6), (0.61300665, 1.9002812e-19, 1.7869935), (0.8, 3.6647798e-19, 1.8644485), (0.98699343, 2.8380525e-19, 1.7869935), (1.0644486, 4.022857e-19, 1.6), (0.98699343, 0.15882534, 1.4130067), (0.8, 0.15882534, 1.3355515), (0.61300665, 0.15882534, 1.4130067), (0.5355515, 0.15882534, 1.6), (0.61300665, 0.15882534, 1.7869935), (0.8, 0.15882534, 1.8644485), (0.98699343, 0.15882534, 1.7869935), (1.0644486, 0.15882534, 1.6), (1.0520017, 0.0075166663, 1.8520017), (0.8, 0.0075166663, 1.9563842), (0.5479983, 0.0075166663, 1.8520017), (0.44361582, 0.0075166663, 1.6), (0.5479983, 0.0075166663, 1.3479984), (0.8, 0.0075166663, 1.2436159), (1.0520017, 0.0075166663, 1.3479984), (1.1563842, 0.0075166663, 1.6), (1.0383878, 0, 1.8383877), (1.1371312, 0, 1.6), (1.0383878, 0, 1.3616123), (0.8, 0, 1.2628689), (0.5616123, 0, 1.3616123), (0.46286893, 0, 1.6), (0.5616123, 0, 1.8383877), (0.8, 0, 1.9371312), (1.000478, 0, 1.800478), (1.0835187, 0, 1.6), (1.000478, 0, 1.3995221), (0.8, 0, 1.3164814), (0.599522, 0, 1.3995221), (0.5164813, 0, 1.6), (0.599522, 0, 1.800478), (0.8, 0, 1.8835187), (0.98699343, 0.012202854, 1.7869935), (1.0644486, 0.012202854, 1.6), (0.98699343, 0.012202854, 1.4130067), (0.8, 0.012202854, 1.3355515), (0.61300665, 0.012202854, 1.4130067), (0.5355515, 0.012202854, 1.6), (0.61300665, 0.012202854, 1.7869935), (0.8, 0.012202854, 1.8644485), (1.3875861, 0.32000014, 2.1877463), (1.465311, 0.32000014, 2.0001016), (1.3875861, 0.32000014, 1.8124567), (1.1999414, 0.32000014, 1.7347318), (1.0122967, 0.32000014, 1.8124567), (0.9345717, 0.32000014, 2.0001016), (1.0122967, 0.32000014, 2.1877463), (1.1999414, 0.32000014, 2.2654715), (1.3875861, 0.48082992, 2.1877463), (1.465311, 0.48082992, 2.0001016), (1.3875861, 0.48082992, 1.8124567), (1.1999414, 0.48082992, 1.7347318), (1.0122967, 0.48082992, 1.8124567), (1.1999414, 0.48082992, 2.2654715), (1.3678453, 0.48082992, 2.1680055), (1.4373932, 0.48082992, 2.0001016), (1.3678453, 0.48082992, 1.8321977), (1.1999414, 0.48082992, 1.7626497), (1.0320375, 0.48082992, 1.8321977), (0.96248955, 0.48082992, 2.0001016), (1.0320375, 0.48082992, 2.1680055), (1.1999414, 0.48082992, 2.2375536), (1.1999414, 0.48082992, 2.0001016), (1.0122967, 0.4642254, 1.8124567), (1.1999414, 0.4642254, 1.7347318), (1.3875861, 0.4642254, 1.8124567), (1.465311, 0.4642254, 2.0001016), (1.3875861, 0.4642254, 2.1877463), (1.1999414, 0.4642254, 2.2654715), (1.0122967, 0.4642254, 2.1877463), (0.9345717, 0.4642254, 2.0001016), (0.9345717, 0.48082992, 2.0001016), (1.0122967, 0.48082992, 2.1877463), (1.3875861, 0.32000014, 1.3877462), (1.465311, 0.32000014, 1.2001015), (1.3875861, 0.32000014, 1.0124568), (1.1999414, 0.32000014, 0.93473184), (1.0122967, 0.32000014, 1.0124568), (0.9345717, 0.32000014, 1.2001015), (1.0122967, 0.32000014, 1.3877462), (1.1999414, 0.32000014, 1.4654711), (1.3875861, 0.48082992, 1.3877462), (1.465311, 0.48082992, 1.2001015), (1.3875861, 0.48082992, 1.0124568), (1.1999414, 0.48082992, 0.93473184), (1.0122967, 0.48082992, 1.0124568), (0.9345717, 0.48082992, 1.2001015), (1.0122967, 0.48082992, 1.3877462), (1.1999414, 0.48082992, 1.4654711), (1.3678453, 0.48082992, 1.3680054), (1.4373932, 0.48082992, 1.2001015), (1.3678453, 0.48082992, 1.0321976), (1.1999414, 0.48082992, 0.96264964), (1.0320375, 0.48082992, 1.0321976), (0.96248955, 0.48082992, 1.2001015), (1.0320375, 0.48082992, 1.3680054), (1.1999414, 0.48082992, 1.4375534), (1.1999414, 0.48082992, 1.2001015), (1.0122967, 0.4642254, 1.0124568), (1.1999414, 0.4642254, 0.93473184), (1.3875861, 0.4642254, 1.0124568), (1.465311, 0.4642254, 1.2001015), (1.3875861, 0.4642254, 1.3877462), (1.1999414, 0.4642254, 1.4654711), (1.0122967, 0.4642254, 1.3877462), (0.9345717, 0.4642254, 1.2001015), (2.187586, 0.32000014, 2.1877463), (2.265311, 0.32000014, 2.0001016), (2.187586, 0.32000014, 1.8124567), (1.9999413, 0.32000014, 1.7347318), (1.8122966, 0.32000014, 1.8124567), (1.7345717, 0.32000014, 2.0001016), (1.8122966, 0.32000014, 2.1877463), (1.9999413, 0.32000014, 2.2654715), (2.187586, 0.48082992, 2.1877463), (2.265311, 0.48082992, 2.0001016), (2.187586, 0.48082992, 1.8124567), (1.9999413, 0.48082992, 1.7347318), (1.8122966, 0.48082992, 1.8124567), (1.7345717, 0.48082992, 2.0001016), (1.8122966, 0.48082992, 2.1877463), (1.9999413, 0.48082992, 2.2654715), (2.1678452, 0.48082992, 2.1680055), (2.2373934, 0.48082992, 2.0001016), (2.1678452, 0.48082992, 1.8321977), (1.9999413, 0.48082992, 1.7626497), (1.8320376, 0.48082992, 1.8321977), (1.7624896, 0.48082992, 2.0001016), (1.8320376, 0.48082992, 2.1680055), (1.9999413, 0.48082992, 2.2375536), (1.9999413, 0.48082992, 2.0001016), (1.8122966, 0.4642254, 1.8124567), (1.9999413, 0.4642254, 1.7347318), (2.187586, 0.4642254, 1.8124567), (2.265311, 0.4642254, 2.0001016), (2.187586, 0.4642254, 2.1877463), (1.9999413, 0.4642254, 2.2654715), (1.8122966, 0.4642254, 2.1877463), (1.7345717, 0.4642254, 2.0001016), (2.187586, 0.32000014, 1.3877462), (2.265311, 0.32000014, 1.2001015), (2.187586, 0.32000014, 1.0124568), (1.9999413, 0.32000014, 0.93473184), (1.8122966, 0.32000014, 1.0124568), (1.7345717, 0.32000014, 1.2001015), (1.8122966, 0.32000014, 1.3877462), (1.9999413, 0.32000014, 1.4654711), (2.187586, 0.48082992, 1.3877462), (2.265311, 0.48082992, 1.2001015), (2.187586, 0.48082992, 1.0124568), (1.9999413, 0.48082992, 0.93473184), (1.8122966, 0.48082992, 1.0124568), (1.7345717, 0.48082992, 1.2001015), (1.8122966, 0.48082992, 1.3877462), (1.9999413, 0.48082992, 1.4654711), (2.1678452, 0.48082992, 1.3680054), (2.2373934, 0.48082992, 1.2001015), (2.1678452, 0.48082992, 1.0321976), (1.9999413, 0.48082992, 0.96264964), (1.8320376, 0.48082992, 1.0321976), (1.7624896, 0.48082992, 1.2001015), (1.8320376, 0.48082992, 1.3680054), (1.9999413, 0.48082992, 1.4375534), (1.9999413, 0.48082992, 1.2001015), (1.8122966, 0.4642254, 1.0124568), (1.9999413, 0.4642254, 0.93473184), (2.187586, 0.4642254, 1.0124568), (2.265311, 0.4642254, 1.2001015), (2.187586, 0.4642254, 1.3877462), (1.9999413, 0.4642254, 1.4654711), (1.8122966, 0.4642254, 1.3877462), (1.7345717, 0.4642254, 1.2001015), (2.1876447, 0.32000014, 0.2123553), (2, 0.32000014, 0.13463032), (1.8123553, 0.32000014, 0.2123553), (1.7346303, 0.32000014, 0.4), (1.8123553, 0.32000014, 0.5876447), (2, 0.32000014, 0.6653697), (2.1876447, 0.32000014, 0.5876447), (2.26537, 0.32000014, 0.4), (2.1876447, 0.48082992, 0.2123553), (2, 0.48082992, 0.13463032), (1.8123553, 0.48082992, 0.2123553), (1.7346303, 0.48082992, 0.4), (1.8123553, 0.48082992, 0.5876447), (2, 0.48082992, 0.6653697), (2.1876447, 0.48082992, 0.5876447), (2.26537, 0.48082992, 0.4), (2.167904, 0.48082992, 0.23209617), (2, 0.48082992, 0.16254812), (1.8320962, 0.48082992, 0.23209617), (1.7625482, 0.48082992, 0.4), (1.8320962, 0.48082992, 0.5679038), (2, 0.48082992, 0.6374518), (2.167904, 0.48082992, 0.5679038), (2.237452, 0.48082992, 0.4), (2, 0.48082992, 0.4), (1.8123553, 0.4642254, 0.5876447), (1.7346303, 0.4642254, 0.4), (1.8123553, 0.4642254, 0.2123553), (2, 0.4642254, 0.13463032), (2.1876447, 0.4642254, 0.2123553), (2.26537, 0.4642254, 0.4), (2.1876447, 0.4642254, 0.5876447), (2, 0.4642254, 0.6653697), (1.3876448, 0.32000014, 0.2123553), (1.2, 0.32000014, 0.13463032), (1.0123553, 0.32000014, 0.2123553), (0.93463033, 0.32000014, 0.4), (1.0123553, 0.32000014, 0.5876447), (1.2, 0.32000014, 0.6653697), (1.3876448, 0.32000014, 0.5876447), (1.4653697, 0.32000014, 0.4), (1.3876448, 0.48082992, 0.2123553), (1.2, 0.48082992, 0.13463032), (1.0123553, 0.48082992, 0.2123553), (0.93463033, 0.48082992, 0.4), (1.0123553, 0.48082992, 0.5876447), (1.2, 0.48082992, 0.6653697), (1.3876448, 0.48082992, 0.5876447), (1.4653697, 0.48082992, 0.4), (1.367904, 0.48082992, 0.23209617), (1.2, 0.48082992, 0.16254812), (1.0320961, 0.48082992, 0.23209617), (0.96254814, 0.48082992, 0.4), (1.0320961, 0.48082992, 0.5679038), (1.2, 0.48082992, 0.6374518), (1.367904, 0.48082992, 0.5679038), (1.437452, 0.48082992, 0.4), (1.2, 0.48082992, 0.4), (1.0123553, 0.4642254, 0.5876447), (0.93463033, 0.4642254, 0.4), (1.0123553, 0.4642254, 0.2123553), (1.2, 0.4642254, 0.13463032), (1.3876448, 0.4642254, 0.2123553), (1.4653697, 0.4642254, 0.4), (1.3876448, 0.4642254, 0.5876447), (1.2, 0.4642254, 0.6653697), (2.1876447, 0.32000014, 2.6123552), (2, 0.32000014, 2.5346303), (1.8123553, 0.32000014, 2.6123552), (1.7346303, 0.32000014, 2.8000002), (1.8123553, 0.32000014, 2.9876447), (2, 0.32000014, 3.0653696), (2.1876447, 0.32000014, 2.9876447), (2.26537, 0.32000014, 2.8000002), (2.1876447, 0.48082992, 2.6123552), (2, 0.48082992, 2.5346303), (1.8123553, 0.48082992, 2.6123552), (1.7346303, 0.48082992, 2.8000002), (1.8123553, 0.48082992, 2.9876447), (2, 0.48082992, 3.0653696), (2.1876447, 0.48082992, 2.9876447), (2.26537, 0.48082992, 2.8000002), (2.167904, 0.48082992, 2.6320963), (2, 0.48082992, 2.5625482), (1.8320962, 0.48082992, 2.6320963), (1.7625482, 0.48082992, 2.8000002), (1.8320962, 0.48082992, 2.9679039), (2, 0.48082992, 3.0374517), (2.167904, 0.48082992, 2.9679039), (2.237452, 0.48082992, 2.8000002), (2, 0.48082992, 2.8000002), (1.8123553, 0.4642254, 2.9876447), (1.7346303, 0.4642254, 2.8000002), (1.8123553, 0.4642254, 2.6123552), (2, 0.4642254, 2.5346303), (2.1876447, 0.4642254, 2.6123552), (2.26537, 0.4642254, 2.8000002), (2.1876447, 0.4642254, 2.9876447), (2, 0.4642254, 3.0653696), (2.9876447, 0.32000014, 2.6123552), (2.8000002, 0.32000014, 2.5346303), (2.6123552, 0.32000014, 2.6123552), (2.5346303, 0.32000014, 2.8000002), (2.6123552, 0.32000014, 2.9876447), (2.8000002, 0.32000014, 3.0653696), (2.9876447, 0.32000014, 2.9876447), (3.0653696, 0.32000014, 2.8000002), (2.9876447, 0.48082992, 2.6123552), (2.8000002, 0.48082992, 2.5346303), (2.6123552, 0.48082992, 2.6123552), (2.5346303, 0.48082992, 2.8000002), (2.6123552, 0.48082992, 2.9876447), (2.8000002, 0.48082992, 3.0653696), (2.9876447, 0.48082992, 2.9876447), (3.0653696, 0.48082992, 2.8000002), (2.967904, 0.48082992, 2.6320963), (2.8000002, 0.48082992, 2.5625482), (2.6320963, 0.48082992, 2.6320963), (2.5625482, 0.48082992, 2.8000002), (2.6320963, 0.48082992, 2.9679039), (2.8000002, 0.48082992, 3.0374517), (2.967904, 0.48082992, 2.9679039), (3.037452, 0.48082992, 2.8000002), (2.8000002, 0.48082992, 2.8000002), (2.6123552, 0.4642254, 2.9876447), (2.5346303, 0.4642254, 2.8000002), (2.6123552, 0.4642254, 2.6123552), (2.8000002, 0.4642254, 2.5346303), (2.9876447, 0.4642254, 2.6123552), (3.0653696, 0.4642254, 2.8000002), (2.9876447, 0.4642254, 2.9876447), (2.8000002, 0.4642254, 3.0653696), (4.0000153, 0.32, 2.4001484), (3.9999952, 0.15882535, 2.400108), (4.0000706, 0.15882534, 3.0371718), (4.0000706, 0.15882534, 3.0408401), (4.0000706, 0.15451507, 3.0408401), (4.0000706, 0.006479934, 3.0408401), (4.0000706, 1.5006248e-19, 3.0408401), (4.0000725, 0, 3.0458755), (4.0001106, 0, 3.1938314), (4.0001106, 3.0289658e-19, 3.2000427), (4.0001106, 0.0117769465, 3.2000427), (4.0001106, 0.27258798, 3.2000427), (4.0001106, 0.32, 3.2000427), (4.0001106, 0.32, 3.1551738), (3.2, 0.32, 2.4003863), (3.2, 0.15882535, 2.4002652), (3.2, 0.15882534, 3.0371718), (3.2, 0.15882534, 3.0408401), (3.2, 0.15451507, 3.0408401), (3.2, 0.006479934, 3.0408401), (3.2, 1.7862342e-19, 3.0408401), (3.2, 0, 3.0458755), (3.2, 0, 3.1938314), (3.2, 8.544626e-20, 3.2000427), (3.2, 0.0117769465, 3.2000427), (3.2, 0.27258798, 3.2000427), (3.2, 0.32, 3.2000427), (3.2, 0.32, 3.1551738), (4.0000153, 0.32, 0.80025935), (3.9999952, 0.15882535, 0.8001785), (3.99992, 0.32, 1.6000214), (3.99992, 0.15882535, 1.6000214), (4.0001106, 0.32000002, 0.045599043), (4.0001106, 0.32000002, 1.1920929e-7), (4.0001106, 0.272588, 1.1920929e-7), (4.0001106, 0.0117769465, 1.1920929e-7), (4.0001106, 0, 1.1920929e-7), (4.0001106, 8.271806e-25, 0.0062111914), (4.0000725, 2.9802322e-8, 0.15416732), (4.0000706, 2.9802322e-8, 0.15920249), (4.0000706, 0.0064799637, 0.15920249), (4.0000706, 0.1545151, 0.15920249), (4.0000706, 0.15882537, 0.15920249), (4.0000706, 0.15882537, 0.16335832), (3.2, 0.32, 0.8003863), (3.2, 0.32000002, 0.045599043), (3.2, 0.32000002, 1.1920929e-7), (3.2, 0.272588, 1.1920929e-7), (3.2, 0.0117769465, 1.1920929e-7), (3.2, 0, 1.1920929e-7), (3.2, 8.271806e-25, 0.0062111914), (3.2, 2.9802322e-8, 0.15416732), (3.2, 2.9802322e-8, 0.15920249), (3.2, 0.0064799637, 0.15920249), (3.2, 0.1545151, 0.15920249), (3.2, 0.15882537, 0.15920249), (3.2, 0.15882537, 0.16335832), (3.2, 0.15882535, 0.8002651), (3.2, 0.32, 1.6000215), (3.2, 0.15882535, 1.600022), (3.4520016, 1.8439891e-20, 0.5479983), (3.2, -9.931362e-20, 0.44361582), (2.9479985, -1.4051256e-19, 0.5479983), (2.843616, -3.455523e-20, 0.8), (2.9479985, -7.5971214e-20, 1.0520017), (3.2, -9.960187e-20, 1.1563842), (3.4520016, -5.7666974e-20, 1.0520017), (3.556384, -8.138654e-20, 0.8), (3.4520016, 0.15882534, 0.5479983), (3.2, 0.15882534, 0.44361582), (2.9479985, 0.15882534, 0.5479983), (2.843616, 0.15882534, 0.8), (2.9479985, 0.15882534, 1.0520017), (3.2, 0.15882534, 1.1563842), (3.4520016, 0.15882534, 1.0520017), (3.556384, 0.15882534, 0.8), (3.3869934, 4.3213983e-19, 0.61300665), (3.2, 5.2496733e-19, 0.5355515), (3.0130067, 1.7650757e-19, 0.61300665), (2.9355516, 3.6537638e-19, 0.8), (3.0130067, 5.012085e-19, 0.98699343), (3.2, 2.0118939e-20, 1.0644486), (3.3869934, 0, 0.98699343), (3.4644485, 2.3230964e-19, 0.8), (3.3869934, 0.15882534, 0.61300665), (3.2, 0.15882534, 0.5355515), (3.0130067, 0.15882534, 0.61300665), (2.9355516, 0.15882534, 0.8), (3.0130067, 0.15882534, 0.98699343), (3.2, 0.15882534, 1.0644486), (3.3869934, 0.15882534, 0.98699343), (3.4644485, 0.15882534, 0.8), (3.4520016, 0.0075166663, 1.0520017), (3.2, 0.0075166663, 1.1563842), (2.9479985, 0.0075166663, 1.0520017), (2.843616, 0.0075166663, 0.8), (2.9479985, 0.0075166663, 0.5479983), (3.2, 0.0075166663, 0.44361582), (3.4520016, 0.0075166663, 0.5479983), (3.556384, 0.0075166663, 0.8), (3.4383879, 0, 1.0383878), (3.5371313, 0, 0.8), (3.4383879, 0, 0.5616123), (3.2, 0, 0.46286893), (2.9616122, 0, 0.5616123), (2.8628688, 0, 0.8), (2.9616122, 0, 1.0383878), (3.2, 0, 1.1371312), (3.400478, 0, 1.000478), (3.4835186, 0, 0.8), (3.400478, 0, 0.599522), (3.2, 0, 0.5164813), (2.9995222, 0, 0.599522), (2.9164815, 0, 0.8), (2.9995222, 0, 1.000478), (3.2, 0, 1.0835187), (3.3869934, 0.012202854, 0.98699343), (3.4644485, 0.012202854, 0.8), (3.3869934, 0.012202854, 0.61300665), (3.2, 0.012202854, 0.5355515), (3.0130067, 0.012202854, 0.61300665), (2.9355516, 0.012202854, 0.8), (3.0130067, 0.012202854, 0.98699343), (3.2, 0.012202854, 1.0644486), (2.6520019, 9.812113e-21, 0.5479983), (2.4, -9.880537e-21, 0.44361582), (2.1479983, 0, 0.5479983), (2.0436158, -9.88055e-21, 0.8), (2.1479983, -3.945773e-20, 1.0520017), (2.4, -6.0441124e-20, 1.1563842), (2.6520019, -3.086394e-20, 1.0520017), (2.7563844, 1.9692663e-20, 0.8), (2.6520019, 0.15882534, 0.5479983), (2.4, 0.15882534, 0.44361582), (2.1479983, 0.15882534, 0.5479983), (2.0436158, 0.15882534, 0.8), (2.1479983, 0.15882534, 1.0520017), (2.4, 0.15882534, 1.1563842), (2.6520019, 0.15882534, 1.0520017), (2.7563844, 0.15882534, 0.8), (2.5869935, 2.2818242e-20, 0.61300665), (2.4, 1.7212385e-19, 0.5355515), (2.2130067, 0, 0.61300665), (2.1355515, 0, 0.8), (2.2130067, 1.02354133e-19, 0.98699343), (2.4, 1.242984e-19, 1.0644486), (2.5869935, 2.2171723e-19, 0.98699343), (2.6644487, -5.925392e-20, 0.8), (2.5869935, 0.15882534, 0.61300665), (2.4, 0.15882534, 0.5355515), (2.2130067, 0.15882534, 0.61300665), (2.1355515, 0.15882534, 0.8), (2.2130067, 0.15882534, 0.98699343), (2.4, 0.15882534, 1.0644486), (2.5869935, 0.15882534, 0.98699343), (2.6644487, 0.15882534, 0.8), (2.6520019, 0.0075166663, 1.0520017), (2.4, 0.0075166663, 1.1563842), (2.1479983, 0.0075166663, 1.0520017), (2.0436158, 0.0075166663, 0.8), (2.1479983, 0.0075166663, 0.5479983), (2.4, 0.0075166663, 0.44361582), (2.6520019, 0.0075166663, 0.5479983), (2.7563844, 0.0075166663, 0.8), (2.6383877, 0, 1.0383878), (2.737131, 0, 0.8), (2.6383877, 0, 0.5616123), (2.4, 0, 0.46286893), (2.1616123, 0, 0.5616123), (2.062869, 0, 0.8), (2.1616123, 0, 1.0383878), (2.4, 0, 1.1371312), (2.6004782, 0, 1.000478), (2.683519, 0, 0.8), (2.6004782, 0, 0.599522), (2.4, 0, 0.5164813), (2.199522, 0, 0.599522), (2.1164813, 0, 0.8), (2.199522, 0, 1.000478), (2.4, 0, 1.0835187), (2.5869935, 0.012202854, 0.98699343), (2.6644487, 0.012202854, 0.8), (2.5869935, 0.012202854, 0.61300665), (2.4, 0.012202854, 0.5355515), (2.2130067, 0.012202854, 0.61300665), (2.1355515, 0.012202854, 0.8), (2.2130067, 0.012202854, 0.98699343), (2.4, 0.012202854, 1.0644486), (3.4520016, -3.9261068e-20, 2.1479983), (3.2, -3.9261068e-20, 2.0436158), (2.9479985, -5.0809556e-20, 2.1479983), (2.843616, -2.2013458e-19, 2.4), (2.9479985, -2.5939557e-19, 2.6520019), (3.2, -1.1633295e-19, 2.7563844), (3.4520016, -3.938486e-20, 2.6520019), (3.556384, -5.7291305e-21, 2.4), (3.4520016, 0.15882534, 2.1479983), (3.2, 0.15882534, 2.0436158), (2.9479985, 0.15882534, 2.1479983), (2.843616, 0.15882534, 2.4), (2.9479985, 0.15882534, 2.6520019), (3.2, 0.15882534, 2.7563844), (3.4520016, 0.15882534, 2.6520019), (3.556384, 0.15882534, 2.4), (3.3869934, 0, 2.2130067), (3.2, 3.5831067e-20, 2.1355515), (3.0130067, -1.3818534e-19, 2.2130067), (2.9355516, -2.7251253e-19, 2.4), (3.0130067, -1.8553687e-19, 2.5869935), (3.2, -4.0237632e-20, 2.6644487), (3.3869934, -6.7604444e-20, 2.5869935), (3.4644485, -1.2537967e-19, 2.4), (3.3869934, 0.15882534, 2.2130067), (3.2, 0.15882534, 2.1355515), (3.0130067, 0.15882534, 2.2130067), (2.9355516, 0.15882534, 2.4), (3.0130067, 0.15882534, 2.5869935), (3.2, 0.15882534, 2.6644487), (3.3869934, 0.15882534, 2.5869935), (3.4644485, 0.15882534, 2.4), (3.4520016, 0.0075166663, 2.6520019), (3.2, 0.0075166663, 2.7563844), (2.9479985, 0.0075166663, 2.6520019), (2.843616, 0.0075166663, 2.4), (2.9479985, 0.0075166663, 2.1479983), (3.2, 0.0075166663, 2.0436158), (3.4520016, 0.0075166663, 2.1479983), (3.556384, 0.0075166663, 2.4), (3.4383879, 0, 2.6383877), (3.5371313, 0, 2.4), (3.4383879, 0, 2.1616123), (3.2, 0, 2.062869), (2.9616122, 0, 2.1616123), (2.8628688, 0, 2.4), (2.9616122, 0, 2.6383877), (3.2, 0, 2.737131), (3.400478, 0, 2.6004782), (3.4835186, 0, 2.4), (3.400478, 0, 2.199522), (3.2, 0, 2.1164813), (2.9995222, 0, 2.199522), (2.9164815, 0, 2.4), (2.9995222, 0, 2.6004782), (3.2, 0, 2.683519), (3.3869934, 0.012202854, 2.5869935), (3.4644485, 0.012202854, 2.4), (3.3869934, 0.012202854, 2.2130067), (3.2, 0.012202854, 2.1355515), (3.0130067, 0.012202854, 2.2130067), (2.9355516, 0.012202854, 2.4), (3.0130067, 0.012202854, 2.5869935), (3.2, 0.012202854, 2.6644487), (2.6520019, 4.6493005e-20, 2.1479983), (2.4, 2.2147658e-20, 2.0436158), (2.1479983, -2.5971993e-19, 2.1479983), (2.0436158, -1.4700105e-19, 2.4), (2.1479983, -2.1918914e-19, 2.6520019), (2.4, -4.1080157e-19, 2.7563844), (2.6520019, -2.6306613e-19, 2.6520019), (2.7563844, -2.4854684e-19, 2.4), (2.6520019, 0.15882534, 2.1479983), (2.4, 0.15882534, 2.0436158), (2.1479983, 0.15882534, 2.1479983), (2.0436158, 0.15882534, 2.4), (2.1479983, 0.15882534, 2.6520019), (2.4, 0.15882534, 2.7563844), (2.6520019, 0.15882534, 2.6520019), (2.7563844, 0.15882534, 2.4), (2.5869935, -1.0878149e-19, 2.2130067), (2.4, -1.3261848e-19, 2.1355515), (2.2130067, -7.661108e-20, 2.2130067), (2.1355515, -3.1641794e-19, 2.4), (2.2130067, -1.5543719e-19, 2.5869935), (2.4, 1.1054987e-19, 2.6644487), (2.5869935, -2.1394499e-19, 2.5869935), (2.6644487, -1.285111e-19, 2.4), (2.5869935, 0.15882534, 2.2130067), (2.4, 0.15882534, 2.1355515), (2.2130067, 0.15882534, 2.2130067), (2.1355515, 0.15882534, 2.4), (2.2130067, 0.15882534, 2.5869935), (2.4, 0.15882534, 2.6644487), (2.5869935, 0.15882534, 2.5869935), (2.6644487, 0.15882534, 2.4), (2.6520019, 0.0075166663, 2.6520019), (2.4, 0.0075166663, 2.7563844), (2.1479983, 0.0075166663, 2.6520019), (2.0436158, 0.0075166663, 2.4), (2.1479983, 0.0075166663, 2.1479983), (2.4, 0.0075166663, 2.0436158), (2.6520019, 0.0075166663, 2.1479983), (2.7563844, 0.0075166663, 2.4), (2.6383877, 0, 2.6383877), (2.737131, 0, 2.4), (2.6383877, 0, 2.1616123), (2.4, 0, 2.062869), (2.1616123, 0, 2.1616123), (2.062869, 0, 2.4), (2.1616123, 0, 2.6383877), (2.4, 0, 2.737131), (2.6004782, 0, 2.6004782), (2.683519, 0, 2.4), (2.6004782, 0, 2.199522), (2.4, 0, 2.1164813), (2.199522, 0, 2.199522), (2.1164813, 0, 2.4), (2.199522, 0, 2.6004782), (2.4, 0, 2.683519), (2.5869935, 0.012202854, 2.5869935), (2.6644487, 0.012202854, 2.4), (2.5869935, 0.012202854, 2.2130067), (2.4, 0.012202854, 2.1355515), (2.2130067, 0.012202854, 2.2130067), (2.1355515, 0.012202854, 2.4), (2.2130067, 0.012202854, 2.5869935), (2.4, 0.012202854, 2.6644487), (3.4520016, 1.6043557e-19, 1.3479984), (3.2, -4.936009e-20, 1.2436159), (2.9479985, 3.43837e-21, 1.3479984), (2.843616, 3.317422e-20, 1.6), (2.9479985, -2.2111507e-20, 1.8520017), (3.2, -1.2370066e-19, 1.9563842), (3.4520016, -2.0801598e-19, 1.8520017), (3.556384, 6.623969e-20, 1.6), (3.4520016, 0.15882534, 1.3479984), (3.2, 0.15882534, 1.2436159), (2.9479985, 0.15882534, 1.3479984), (2.843616, 0.15882534, 1.6), (2.9479985, 0.15882534, 1.8520017), (3.2, 0.15882534, 1.9563842), (3.4520016, 0.15882534, 1.8520017), (3.556384, 0.15882534, 1.6), (3.3869934, 9.49277e-20, 1.4130067), (3.2, 1.8198369e-19, 1.3355515), (3.0130067, 0, 1.4130067), (2.9355516, 1.4712684e-19, 1.6), (3.0130067, 4.3175884e-19, 1.7869935), (3.2, 2.4074347e-19, 1.8644485), (3.3869934, 0, 1.7869935), (3.4644485, -9.802814e-20, 1.6), (3.3869934, 0.15882534, 1.4130067), (3.2, 0.15882534, 1.3355515), (3.0130067, 0.15882534, 1.4130067), (2.9355516, 0.15882534, 1.6), (3.0130067, 0.15882534, 1.7869935), (3.2, 0.15882534, 1.8644485), (3.3869934, 0.15882534, 1.7869935), (3.4644485, 0.15882534, 1.6), (3.4520016, 0.0075166663, 1.8520017), (3.2, 0.0075166663, 1.9563842), (2.9479985, 0.0075166663, 1.8520017), (2.843616, 0.0075166663, 1.6), (2.9479985, 0.0075166663, 1.3479984), (3.2, 0.0075166663, 1.2436159), (3.4520016, 0.0075166663, 1.3479984), (3.556384, 0.0075166663, 1.6), (3.4383879, 0, 1.8383877), (3.5371313, 0, 1.6), (3.4383879, 0, 1.3616123), (3.2, 0, 1.2628689), (2.9616122, 0, 1.3616123), (2.8628688, 0, 1.6), (2.9616122, 0, 1.8383877), (3.2, 0, 1.9371312), (3.400478, 0, 1.800478), (3.4835186, 0, 1.6), (3.400478, 0, 1.3995221), (3.2, 0, 1.3164814), (2.9995222, 0, 1.3995221), (2.9164815, 0, 1.6), (2.9995222, 0, 1.800478), (3.2, 0, 1.8835187), (3.3869934, 0.012202854, 1.7869935), (3.4644485, 0.012202854, 1.6), (3.3869934, 0.012202854, 1.4130067), (3.2, 0.012202854, 1.3355515), (3.0130067, 0.012202854, 1.4130067), (2.9355516, 0.012202854, 1.6), (3.0130067, 0.012202854, 1.7869935), (3.2, 0.012202854, 1.8644485), (2.6520019, 8.973971e-20, 1.3479984), (2.4, 1.311557e-19, 1.2436159), (2.1479983, 2.7186276e-20, 1.3479984), (2.0436158, 9.7958425e-20, 1.6), (2.1479983, 1.4238058e-19, 1.8520017), (2.4, 1.4260603e-19, 1.9563842), (2.6520019, 9.533242e-20, 1.8520017), (2.7563844, -5.4047658e-20, 1.6), (2.6520019, 0.15882534, 1.3479984), (2.4, 0.15882534, 1.2436159), (2.1479983, 0.15882534, 1.3479984), (2.0436158, 0.15882534, 1.6), (2.1479983, 0.15882534, 1.8520017), (2.4, 0.15882534, 1.9563842), (2.6520019, 0.15882534, 1.8520017), (2.7563844, 0.15882534, 1.6), (2.5869935, 1.273045e-19, 1.4130067), (2.4, -2.0662806e-19, 1.3355515), (2.2130067, -3.933435e-20, 1.4130067), (2.1355515, 4.35565e-20, 1.6), (2.2130067, 1.9002812e-19, 1.7869935), (2.4, 3.6647798e-19, 1.8644485), (2.5869935, 2.8380525e-19, 1.7869935), (2.6644487, 4.022857e-19, 1.6), (2.5869935, 0.15882534, 1.4130067), (2.4, 0.15882534, 1.3355515), (2.2130067, 0.15882534, 1.4130067), (2.1355515, 0.15882534, 1.6), (2.2130067, 0.15882534, 1.7869935), (2.4, 0.15882534, 1.8644485), (2.5869935, 0.15882534, 1.7869935), (2.6644487, 0.15882534, 1.6), (2.6520019, 0.0075166663, 1.8520017), (2.4, 0.0075166663, 1.9563842), (2.1479983, 0.0075166663, 1.8520017), (2.0436158, 0.0075166663, 1.6), (2.1479983, 0.0075166663, 1.3479984), (2.4, 0.0075166663, 1.2436159), (2.6520019, 0.0075166663, 1.3479984), (2.7563844, 0.0075166663, 1.6), (2.6383877, 0, 1.8383877), (2.737131, 0, 1.6), (2.6383877, 0, 1.3616123), (2.4, 0, 1.2628689), (2.1616123, 0, 1.3616123), (2.062869, 0, 1.6), (2.1616123, 0, 1.8383877), (2.4, 0, 1.9371312), (2.6004782, 0, 1.800478), (2.683519, 0, 1.6), (2.6004782, 0, 1.3995221), (2.4, 0, 1.3164814), (2.199522, 0, 1.3995221), (2.1164813, 0, 1.6), (2.199522, 0, 1.800478), (2.4, 0, 1.8835187), (2.5869935, 0.012202854, 1.7869935), (2.6644487, 0.012202854, 1.6), (2.5869935, 0.012202854, 1.4130067), (2.4, 0.012202854, 1.3355515), (2.2130067, 0.012202854, 1.4130067), (2.1355515, 0.012202854, 1.6), (2.2130067, 0.012202854, 1.7869935), (2.4, 0.012202854, 1.8644485), (2.987586, 0.32000014, 2.1877463), (3.065311, 0.32000014, 2.0001016), (2.987586, 0.32000014, 1.8124567), (2.7999415, 0.32000014, 1.7347318), (2.6122966, 0.32000014, 1.8124567), (2.5345716, 0.32000014, 2.0001016), (2.6122966, 0.32000014, 2.1877463), (2.7999415, 0.32000014, 2.2654715), (2.987586, 0.48082992, 2.1877463), (3.065311, 0.48082992, 2.0001016), (2.987586, 0.48082992, 1.8124567), (2.7999415, 0.48082992, 1.7347318), (2.6122966, 0.48082992, 1.8124567), (2.7999415, 0.48082992, 2.2654715), (2.9678454, 0.48082992, 2.1680055), (3.037393, 0.48082992, 2.0001016), (2.9678454, 0.48082992, 1.8321977), (2.7999415, 0.48082992, 1.7626497), (2.6320376, 0.48082992, 1.8321977), (2.5624895, 0.48082992, 2.0001016), (2.6320376, 0.48082992, 2.1680055), (2.7999415, 0.48082992, 2.2375536), (2.7999415, 0.48082992, 2.0001016), (2.6122966, 0.4642254, 1.8124567), (2.7999415, 0.4642254, 1.7347318), (2.987586, 0.4642254, 1.8124567), (3.065311, 0.4642254, 2.0001016), (2.987586, 0.4642254, 2.1877463), (2.7999415, 0.4642254, 2.2654715), (2.6122966, 0.4642254, 2.1877463), (2.5345716, 0.4642254, 2.0001016), (2.5345716, 0.48082992, 2.0001016), (2.6122966, 0.48082992, 2.1877463), (2.987586, 0.32000014, 1.3877462), (3.065311, 0.32000014, 1.2001015), (2.987586, 0.32000014, 1.0124568), (2.7999415, 0.32000014, 0.93473184), (2.6122966, 0.32000014, 1.0124568), (2.5345716, 0.32000014, 1.2001015), (2.6122966, 0.32000014, 1.3877462), (2.7999415, 0.32000014, 1.4654711), (2.987586, 0.48082992, 1.3877462), (3.065311, 0.48082992, 1.2001015), (2.987586, 0.48082992, 1.0124568), (2.7999415, 0.48082992, 0.93473184), (2.6122966, 0.48082992, 1.0124568), (2.5345716, 0.48082992, 1.2001015), (2.6122966, 0.48082992, 1.3877462), (2.7999415, 0.48082992, 1.4654711), (2.9678454, 0.48082992, 1.3680054), (3.037393, 0.48082992, 1.2001015), (2.9678454, 0.48082992, 1.0321976), (2.7999415, 0.48082992, 0.96264964), (2.6320376, 0.48082992, 1.0321976), (2.5624895, 0.48082992, 1.2001015), (2.6320376, 0.48082992, 1.3680054), (2.7999415, 0.48082992, 1.4375534), (2.7999415, 0.48082992, 1.2001015), (2.6122966, 0.4642254, 1.0124568), (2.7999415, 0.4642254, 0.93473184), (2.987586, 0.4642254, 1.0124568), (3.065311, 0.4642254, 1.2001015), (2.987586, 0.4642254, 1.3877462), (2.7999415, 0.4642254, 1.4654711), (2.6122966, 0.4642254, 1.3877462), (2.5345716, 0.4642254, 1.2001015), (3.7875862, 0.32000014, 2.1877463), (3.8653111, 0.32000014, 2.0001016), (3.7875862, 0.32000014, 1.8124567), (3.5999413, 0.32000014, 1.7347318), (3.4122968, 0.32000014, 1.8124567), (3.3345718, 0.32000014, 2.0001016), (3.4122968, 0.32000014, 2.1877463), (3.5999413, 0.32000014, 2.2654715), (3.7875862, 0.48082992, 2.1877463), (3.8653111, 0.48082992, 2.0001016), (3.7875862, 0.48082992, 1.8124567), (3.5999413, 0.48082992, 1.7347318), (3.4122968, 0.48082992, 1.8124567), (3.3345718, 0.48082992, 2.0001016), (3.4122968, 0.48082992, 2.1877463), (3.5999413, 0.48082992, 2.2654715), (3.7678452, 0.48082992, 2.1680055), (3.8373933, 0.48082992, 2.0001016), (3.7678452, 0.48082992, 1.8321977), (3.5999413, 0.48082992, 1.7626497), (3.4320376, 0.48082992, 1.8321977), (3.3624897, 0.48082992, 2.0001016), (3.4320376, 0.48082992, 2.1680055), (3.5999413, 0.48082992, 2.2375536), (3.5999413, 0.48082992, 2.0001016), (3.4122968, 0.4642254, 1.8124567), (3.5999413, 0.4642254, 1.7347318), (3.7875862, 0.4642254, 1.8124567), (3.8653111, 0.4642254, 2.0001016), (3.7875862, 0.4642254, 2.1877463), (3.5999413, 0.4642254, 2.2654715), (3.4122968, 0.4642254, 2.1877463), (3.3345718, 0.4642254, 2.0001016), (3.7875862, 0.32000014, 1.3877462), (3.8653111, 0.32000014, 1.2001015), (3.7875862, 0.32000014, 1.0124568), (3.5999413, 0.32000014, 0.93473184), (3.4122968, 0.32000014, 1.0124568), (3.3345718, 0.32000014, 1.2001015), (3.4122968, 0.32000014, 1.3877462), (3.5999413, 0.32000014, 1.4654711), (3.7875862, 0.48082992, 1.3877462), (3.8653111, 0.48082992, 1.2001015), (3.7875862, 0.48082992, 1.0124568), (3.5999413, 0.48082992, 0.93473184), (3.4122968, 0.48082992, 1.0124568), (3.3345718, 0.48082992, 1.2001015), (3.4122968, 0.48082992, 1.3877462), (3.5999413, 0.48082992, 1.4654711), (3.7678452, 0.48082992, 1.3680054), (3.8373933, 0.48082992, 1.2001015), (3.7678452, 0.48082992, 1.0321976), (3.5999413, 0.48082992, 0.96264964), (3.4320376, 0.48082992, 1.0321976), (3.3624897, 0.48082992, 1.2001015), (3.4320376, 0.48082992, 1.3680054), (3.5999413, 0.48082992, 1.4375534), (3.5999413, 0.48082992, 1.2001015), (3.4122968, 0.4642254, 1.0124568), (3.5999413, 0.4642254, 0.93473184), (3.7875862, 0.4642254, 1.0124568), (3.8653111, 0.4642254, 1.2001015), (3.7875862, 0.4642254, 1.3877462), (3.5999413, 0.4642254, 1.4654711), (3.4122968, 0.4642254, 1.3877462), (3.3345718, 0.4642254, 1.2001015), (3.7876449, 0.32000014, 0.2123553), (3.6, 0.32000014, 0.13463032), (3.4123554, 0.32000014, 0.2123553), (3.3346305, 0.32000014, 0.4), (3.4123554, 0.32000014, 0.5876447), (3.6, 0.32000014, 0.6653697), (3.7876449, 0.32000014, 0.5876447), (3.8653698, 0.32000014, 0.4), (3.7876449, 0.48082992, 0.2123553), (3.6, 0.48082992, 0.13463032), (3.4123554, 0.48082992, 0.2123553), (3.3346305, 0.48082992, 0.4), (3.4123554, 0.48082992, 0.5876447), (3.6, 0.48082992, 0.6653697), (3.7876449, 0.48082992, 0.5876447), (3.8653698, 0.48082992, 0.4), (3.7679038, 0.48082992, 0.23209617), (3.6, 0.48082992, 0.16254812), (3.4320962, 0.48082992, 0.23209617), (3.3625484, 0.48082992, 0.4), (3.4320962, 0.48082992, 0.5679038), (3.6, 0.48082992, 0.6374518), (3.7679038, 0.48082992, 0.5679038), (3.837452, 0.48082992, 0.4), (3.6, 0.48082992, 0.4), (3.4123554, 0.4642254, 0.5876447), (3.3346305, 0.4642254, 0.4), (3.4123554, 0.4642254, 0.2123553), (3.6, 0.4642254, 0.13463032), (3.7876449, 0.4642254, 0.2123553), (3.8653698, 0.4642254, 0.4), (3.7876449, 0.4642254, 0.5876447), (3.6, 0.4642254, 0.6653697), (2.9876447, 0.32000014, 0.2123553), (2.8000002, 0.32000014, 0.13463032), (2.6123552, 0.32000014, 0.2123553), (2.5346303, 0.32000014, 0.4), (2.6123552, 0.32000014, 0.5876447), (2.8000002, 0.32000014, 0.6653697), (2.9876447, 0.32000014, 0.5876447), (3.0653696, 0.32000014, 0.4), (2.9876447, 0.48082992, 0.2123553), (2.8000002, 0.48082992, 0.13463032), (2.6123552, 0.48082992, 0.2123553), (2.5346303, 0.48082992, 0.4), (2.6123552, 0.48082992, 0.5876447), (2.8000002, 0.48082992, 0.6653697), (2.9876447, 0.48082992, 0.5876447), (3.0653696, 0.48082992, 0.4), (2.967904, 0.48082992, 0.23209617), (2.8000002, 0.48082992, 0.16254812), (2.6320963, 0.48082992, 0.23209617), (2.5625482, 0.48082992, 0.4), (2.6320963, 0.48082992, 0.5679038), (2.8000002, 0.48082992, 0.6374518), (2.967904, 0.48082992, 0.5679038), (3.037452, 0.48082992, 0.4), (2.8000002, 0.48082992, 0.4), (2.6123552, 0.4642254, 0.5876447), (2.5346303, 0.4642254, 0.4), (2.6123552, 0.4642254, 0.2123553), (2.8000002, 0.4642254, 0.13463032), (2.9876447, 0.4642254, 0.2123553), (3.0653696, 0.4642254, 0.4), (2.9876447, 0.4642254, 0.5876447), (2.8000002, 0.4642254, 0.6653697), (3.7876449, 0.32000014, 2.6123552), (3.6, 0.32000014, 2.5346303), (3.4123554, 0.32000014, 2.6123552), (3.3346305, 0.32000014, 2.8000002), (3.4123554, 0.32000014, 2.9876447), (3.6, 0.32000014, 3.0653696), (3.7876449, 0.32000014, 2.9876447), (3.8653698, 0.32000014, 2.8000002), (3.7876449, 0.48082992, 2.6123552), (3.6, 0.48082992, 2.5346303), (3.4123554, 0.48082992, 2.6123552), (3.3346305, 0.48082992, 2.8000002), (3.4123554, 0.48082992, 2.9876447), (3.6, 0.48082992, 3.0653696), (3.7876449, 0.48082992, 2.9876447), (3.8653698, 0.48082992, 2.8000002), (3.7679038, 0.48082992, 2.6320963), (3.6, 0.48082992, 2.5625482), (3.4320962, 0.48082992, 2.6320963), (3.3625484, 0.48082992, 2.8000002), (3.4320962, 0.48082992, 2.9679039), (3.6, 0.48082992, 3.0374517), (3.7679038, 0.48082992, 2.9679039), (3.837452, 0.48082992, 2.8000002), (3.6, 0.48082992, 2.8000002), (3.4123554, 0.4642254, 2.9876447), (3.3346305, 0.4642254, 2.8000002), (3.4123554, 0.4642254, 2.6123552), (3.6, 0.4642254, 2.5346303), (3.7876449, 0.4642254, 2.6123552), (3.8653698, 0.4642254, 2.8000002), (3.7876449, 0.4642254, 2.9876447), (3.6, 0.4642254, 3.0653696), (0, 0, 3.2000427), (0, 0.32, 3.2000427), (0.15920237, 0, 3.0408401), (0.15920237, 0.15882534, 3.0408401), (0.15920237, 0.15882534, 3.0371718), (0.15920237, 0, 3.0371718), (0, 0, 3.1551738), (0, 0.32, 3.1551738), (0.16342261, 0.15882534, 3.0371718), (0.16342261, 0.15882534, 3.0408401), (0.16342261, 0, 3.0408401), (0.045695394, 0, 3.2000427), (0.045695394, 0.32, 3.2000427), (0.045695394, 0.32, 3.1551738), (0.16342261, 0.15451507, 3.0408401), (0.15920237, 0.15451507, 3.0408401), (0.15920237, 0.15451507, 3.0371718), (0.16342261, 0.006479934, 3.0408401), (0.15920237, 0.006479934, 3.0408401), (0.15920237, 0.006479934, 3.0371718), (0.15847568, 0, 3.0458755), (0.1541672, 0, 3.0458755), (0.1541672, 0, 3.0421305), (0.006211072, 0, 3.1551738), (0.006211072, 0, 3.1938314), (0.045695394, 0, 3.1938314), (0, 0.0117769465, 3.1551738), (0, 0.0117769465, 3.2000427), (0.045695394, 0.0117769465, 3.2000427), (0, 0.27258798, 3.1551738), (0, 0.27258798, 3.2000427), (0.045695394, 0.27258798, 3.2000427), (0.16309603, 0.15882534, 2.4001834), (0.15915175, 0.15882534, 2.4001834), (0.15915175, 0.15451509, 2.4001834), (0.15915175, 0.0064799413, 2.4001834), (0.15915175, 7.450581e-9, 2.4001834), (0.15411659, 7.450581e-9, 2.400186), (0.006160453, 0, 2.400244), (-0.000050663948, 0, 2.400244), (-0.000050663948, 0.0117769465, 2.400244), (-0.000050663948, 0.272588, 2.400244), (-0.000050663948, 0.32, 2.400244), (0.045231566, 0.32, 2.400244), (0.5876447, 0.32000014, 2.6123552), (0.4, 0.32000014, 2.5346303), (0.2123553, 0.32000014, 2.6123552), (0.13463032, 0.32000014, 2.8000002), (0.2123553, 0.32000014, 2.9876447), (0.4, 0.32000014, 3.0653696), (0.5876447, 0.32000014, 2.9876447), (0.66536975, 0.32000014, 2.8000002), (0.5876447, 0.48082992, 2.6123552), (0.4, 0.48082992, 2.5346303), (0.2123553, 0.48082992, 2.6123552), (0.13463032, 0.48082992, 2.8000002), (0.2123553, 0.48082992, 2.9876447), (0.4, 0.48082992, 3.0653696), (0.5876447, 0.48082992, 2.9876447), (0.66536975, 0.48082992, 2.8000002), (0.5679039, 0.48082992, 2.6320963), (0.4, 0.48082992, 2.5625482), (0.23209617, 0.48082992, 2.6320963), (0.16254814, 0.48082992, 2.8000002), (0.23209617, 0.48082992, 2.9679039), (0.4, 0.48082992, 3.0374517), (0.5679039, 0.48082992, 2.9679039), (0.63745195, 0.48082992, 2.8000002), (0.40000004, 0.48082992, 2.8000002), (0.2123553, 0.4642254, 2.9876447), (0.13463032, 0.4642254, 2.8000002), (0.2123553, 0.4642254, 2.6123552), (0.4, 0.4642254, 2.5346303), (0.5876447, 0.4642254, 2.6123552), (0.66536975, 0.4642254, 2.8000002), (0.5876447, 0.4642254, 2.9876447), (0.4, 0.4642254, 3.0653696), (-0.000050663948, 0, 0.80035484), (-0.000050663948, 0.0117769465, 0.80035484), (-0.000050663948, 0.272588, 0.80035484), (-0.000050663948, 0.32, 0.80035484), (0.045231566, 0.32, 0.80035484), (0.16309603, 0.15882534, 0.80025387), (0.15915175, 0.15882534, 0.80025387), (0.15915175, 0.15451509, 0.80025387), (0.15915175, 0.0064799413, 0.80025387), (0.15915175, 7.450581e-9, 0.80025387), (0.15411659, 7.450581e-9, 0.80025804), (0.006160453, 0, 0.80035484), (0.16276944, 0.15882534, 1.6001015), (0.15910113, 0.15882534, 1.6001015), (0.15910113, 0.15451507, 1.6001015), (0.15910113, 0.006479934, 1.6001015), (0.15910113, 0, 1.6001015), (0.15406597, 0, 1.6001015), (0.0061098337, 0, 1.6001015), (-0.000101327896, 0, 1.6001015), (-0.000101327896, 0.0117769465, 1.6001015), (-0.000101327896, 0.27258798, 1.6001015), (-0.000101327896, 0.32, 1.6001015), (0.044767737, 0.32, 1.6001015), (0.58758605, 0.32000014, 1.3877462), (0.66531104, 0.32000014, 1.2001015), (0.58758605, 0.32000014, 1.0124568), (0.39994133, 0.32000014, 0.93473184), (0.2122966, 0.32000014, 1.0124568), (0.13457167, 0.32000014, 1.2001015), (0.2122966, 0.32000014, 1.3877462), (0.39994133, 0.32000014, 1.4654711), (0.58758605, 0.48082992, 1.3877462), (0.66531104, 0.48082992, 1.2001015), (0.58758605, 0.48082992, 1.0124568), (0.39994133, 0.48082992, 0.93473184), (0.2122966, 0.48082992, 1.0124568), (0.13457167, 0.48082992, 1.2001015), (0.2122966, 0.48082992, 1.3877462), (0.39994133, 0.48082992, 1.4654711), (0.5678452, 0.48082992, 1.3680054), (0.63739324, 0.48082992, 1.2001015), (0.5678452, 0.48082992, 1.0321976), (0.39994133, 0.48082992, 0.96264964), (0.23203754, 0.48082992, 1.0321976), (0.16248953, 0.48082992, 1.2001015), (0.23203754, 0.48082992, 1.3680054), (0.39994133, 0.48082992, 1.4375534), (0.39994133, 0.48082992, 1.2001015), (0.2122966, 0.4642254, 1.0124568), (0.39994133, 0.4642254, 0.93473184), (0.58758605, 0.4642254, 1.0124568), (0.66531104, 0.4642254, 1.2001015), (0.58758605, 0.4642254, 1.3877462), (0.39994133, 0.4642254, 1.4654711), (0.2122966, 0.4642254, 1.3877462), (0.13457167, 0.4642254, 1.2001015), (0.58758605, 0.32000014, 2.1877463), (0.66531104, 0.32000014, 2.0001016), (0.58758605, 0.32000014, 1.8124567), (0.39994133, 0.32000014, 1.7347318), (0.2122966, 0.32000014, 1.8124567), (0.13457167, 0.32000014, 2.0001016), (0.2122966, 0.32000014, 2.1877463), (0.39994133, 0.32000014, 2.2654715), (0.58758605, 0.48082992, 2.1877463), (0.66531104, 0.48082992, 2.0001016), (0.58758605, 0.48082992, 1.8124567), (0.39994133, 0.48082992, 1.7347318), (0.2122966, 0.48082992, 1.8124567), (0.13457167, 0.48082992, 2.0001016), (0.2122966, 0.48082992, 2.1877463), (0.39994133, 0.48082992, 2.2654715), (0.5678452, 0.48082992, 2.1680055), (0.63739324, 0.48082992, 2.0001016), (0.5678452, 0.48082992, 1.8321977), (0.39994133, 0.48082992, 1.7626497), (0.23203754, 0.48082992, 1.8321977), (0.16248953, 0.48082992, 2.0001016), (0.23203754, 0.48082992, 2.1680055), (0.39994133, 0.48082992, 2.2375536), (0.39994133, 0.48082992, 2.0001016), (0.2122966, 0.4642254, 1.8124567), (0.39994133, 0.4642254, 1.7347318), (0.58758605, 0.4642254, 1.8124567), (0.66531104, 0.4642254, 2.0001016), (0.58758605, 0.4642254, 2.1877463), (0.39994133, 0.4642254, 2.2654715), (0.2122966, 0.4642254, 2.1877463), (0.13457167, 0.4642254, 2.0001016), (0, 0.32000002, 1.1920929e-7), (0, 0, 1.1920929e-7), (0.15920237, 2.9802322e-8, 0.15920249), (0.15920237, 0.15882537, 0.15920249), (0.15920237, 0.15882537, 0.16335832), (0.15920237, 2.9802322e-8, 0.16335832), (0, 0, 0.045599043), (0, 0.32000002, 0.045599043), (0.16342261, 2.9802322e-8, 0.15920249), (0.16342261, 0.15882537, 0.15920249), (0.16342261, 0.15882537, 0.16335832), (0.045695394, 0.32000002, 0.045599043), (0.045695394, 0.32000002, 1.1920929e-7), (0.045695394, 0, 1.1920929e-7), (0.15920237, 0.1545151, 0.16335832), (0.15920237, 0.1545151, 0.15920249), (0.16342261, 0.1545151, 0.15920249), (0.15920237, 0.0064799637, 0.16335832), (0.15920237, 0.0064799637, 0.15920249), (0.16342261, 0.0064799637, 0.15920249), (0.1541672, 2.9802322e-8, 0.15841003), (0.1541672, 2.9802322e-8, 0.15416732), (0.15847568, 2.9802322e-8, 0.15416732), (0.045695394, 0, 0.0062111914), (0.006211072, 0, 0.0062111914), (0.006211072, 0, 0.045599043), (0.045695394, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 1.1920929e-7), (0, 0.0117769465, 0.045599043), (0.045695394, 0.272588, 1.1920929e-7), (0, 0.272588, 1.1920929e-7), (0, 0.272588, 0.045599043), (0.5876447, 0.32000014, 0.2123553), (0.4, 0.32000014, 0.13463032), (0.2123553, 0.32000014, 0.2123553), (0.13463032, 0.32000014, 0.4), (0.2123553, 0.32000014, 0.5876447), (0.4, 0.32000014, 0.6653697), (0.5876447, 0.32000014, 0.5876447), (0.66536975, 0.32000014, 0.4), (0.5876447, 0.48082992, 0.2123553), (0.4, 0.48082992, 0.13463032), (0.2123553, 0.48082992, 0.2123553), (0.13463032, 0.48082992, 0.4), (0.2123553, 0.48082992, 0.5876447), (0.4, 0.48082992, 0.6653697), (0.5876447, 0.48082992, 0.5876447), (0.66536975, 0.48082992, 0.4), (0.5679039, 0.48082992, 0.23209617), (0.4, 0.48082992, 0.16254812), (0.23209617, 0.48082992, 0.23209617), (0.16254814, 0.48082992, 0.4), (0.23209617, 0.48082992, 0.5679038), (0.4, 0.48082992, 0.6374518), (0.5679039, 0.48082992, 0.5679038), (0.63745195, 0.48082992, 0.4), (0.40000004, 0.48082992, 0.4), (0.2123553, 0.4642254, 0.5876447), (0.13463032, 0.4642254, 0.4), (0.2123553, 0.4642254, 0.2123553), (0.4, 0.4642254, 0.13463032), (0.5876447, 0.4642254, 0.2123553), (0.66536975, 0.4642254, 0.4), (0.5876447, 0.4642254, 0.5876447), (0.4, 0.4642254, 0.6653697), (4.5876446, 0.32000014, 2.6123552), (4.4, 0.32000014, 2.5346303), (4.2123556, 0.32000014, 2.6123552), (4.13463, 0.32000014, 2.8000002), (4.2123556, 0.32000014, 2.9876447), (4.4, 0.32000014, 3.0653696), (4.5876446, 0.32000014, 2.9876447), (4.66537, 0.32000014, 2.8000002), (4.5876446, 0.48082992, 2.6123552), (4.4, 0.48082992, 2.5346303), (4.2123556, 0.48082992, 2.6123552), (4.13463, 0.48082992, 2.8000002), (4.2123556, 0.48082992, 2.9876447), (4.4, 0.48082992, 3.0653696), (4.5876446, 0.48082992, 2.9876447), (4.66537, 0.48082992, 2.8000002), (4.567904, 0.48082992, 2.6320963), (4.4, 0.48082992, 2.5625482), (4.232096, 0.48082992, 2.6320963), (4.162548, 0.48082992, 2.8000002), (4.232096, 0.48082992, 2.9679039), (4.4, 0.48082992, 3.0374517), (4.567904, 0.48082992, 2.9679039), (4.637452, 0.48082992, 2.8000002), (4.4, 0.48082992, 2.8000002), (4.2123556, 0.4642254, 2.9876447), (4.13463, 0.4642254, 2.8000002), (4.2123556, 0.4642254, 2.6123552), (4.4, 0.4642254, 2.5346303), (4.5876446, 0.4642254, 2.6123552), (4.66537, 0.4642254, 2.8000002), (4.5876446, 0.4642254, 2.9876447), (4.4, 0.4642254, 3.0653696), (4.8, 0.32, 2.4003863), (4.8, 0.15882535, 2.4002652), (4.8, 0.15882534, 3.0371718), (4.8, 0.15882534, 3.0408401), (4.8, 0.15451507, 3.0408401), (4.8, 0.006479934, 3.0408401), (4.8, 1.7862342e-19, 3.0408401), (4.8, 0, 3.0458755), (4.8, 0, 3.1938314), (4.8, 8.544626e-20, 3.2000427), (4.8, 0.0117769465, 3.2000427), (4.8, 0.27258798, 3.2000427), (4.8, 0.32, 3.2000427), (4.8, 0.32, 3.1551738), (4.8, 0.32, 0.8003863), (4.8, 0.32000002, 0.045599043), (4.8, 0.32000002, 1.1920929e-7), (4.8, 0.272588, 1.1920929e-7), (4.8, 0.0117769465, 1.1920929e-7), (4.8, 0, 1.1920929e-7), (4.8, 8.271806e-25, 0.0062111914), (4.8, 2.9802322e-8, 0.15416732), (4.8, 2.9802322e-8, 0.15920249), (4.8, 0.0064799637, 0.15920249), (4.8, 0.1545151, 0.15920249), (4.8, 0.15882537, 0.15920249), (4.8, 0.15882537, 0.16335832), (4.8, 0.15882535, 0.8002651), (4.8, 0.32, 1.6000215), (4.8, 0.15882535, 1.600022), (5.052002, 1.8439891e-20, 0.5479983), (4.8, -9.931362e-20, 0.44361582), (4.5479984, -1.4051256e-19, 0.5479983), (4.443616, -3.455523e-20, 0.8), (4.5479984, -7.5971214e-20, 1.0520017), (4.8, -9.960187e-20, 1.1563842), (5.052002, -5.7666974e-20, 1.0520017), (5.1563845, -8.138654e-20, 0.8), (5.052002, 0.15882534, 0.5479983), (4.8, 0.15882534, 0.44361582), (4.5479984, 0.15882534, 0.5479983), (4.443616, 0.15882534, 0.8), (4.5479984, 0.15882534, 1.0520017), (4.8, 0.15882534, 1.1563842), (5.052002, 0.15882534, 1.0520017), (5.1563845, 0.15882534, 0.8), (4.986994, 4.3213983e-19, 0.61300665), (4.8, 5.2496733e-19, 0.5355515), (4.6130066, 1.7650757e-19, 0.61300665), (4.5355515, 3.6537638e-19, 0.8), (4.6130066, 5.012085e-19, 0.98699343), (4.8, 2.0118939e-20, 1.0644486), (4.986994, 0, 0.98699343), (5.0644484, 2.3230964e-19, 0.8), (4.986994, 0.15882534, 0.61300665), (4.8, 0.15882534, 0.5355515), (4.6130066, 0.15882534, 0.61300665), (4.5355515, 0.15882534, 0.8), (4.6130066, 0.15882534, 0.98699343), (4.8, 0.15882534, 1.0644486), (4.986994, 0.15882534, 0.98699343), (5.0644484, 0.15882534, 0.8), (5.052002, 0.0075166663, 1.0520017), (4.8, 0.0075166663, 1.1563842), (4.5479984, 0.0075166663, 1.0520017), (4.443616, 0.0075166663, 0.8), (4.5479984, 0.0075166663, 0.5479983), (4.8, 0.0075166663, 0.44361582), (5.052002, 0.0075166663, 0.5479983), (5.1563845, 0.0075166663, 0.8), (5.038388, 0, 1.0383878), (5.137131, 0, 0.8), (5.038388, 0, 0.5616123), (4.8, 0, 0.46286893), (4.561612, 0, 0.5616123), (4.4628687, 0, 0.8), (4.561612, 0, 1.0383878), (4.8, 0, 1.1371312), (5.000478, 0, 1.000478), (5.083519, 0, 0.8), (5.000478, 0, 0.599522), (4.8, 0, 0.5164813), (4.599522, 0, 0.599522), (4.5164814, 0, 0.8), (4.599522, 0, 1.000478), (4.8, 0, 1.0835187), (4.986994, 0.012202854, 0.98699343), (5.0644484, 0.012202854, 0.8), (4.986994, 0.012202854, 0.61300665), (4.8, 0.012202854, 0.5355515), (4.6130066, 0.012202854, 0.61300665), (4.5355515, 0.012202854, 0.8), (4.6130066, 0.012202854, 0.98699343), (4.8, 0.012202854, 1.0644486), (4.252002, 9.812113e-21, 0.5479983), (4, -9.880537e-21, 0.44361582), (3.7479982, 0, 0.5479983), (3.643616, -9.88055e-21, 0.8), (3.7479982, -3.945773e-20, 1.0520017), (4, -6.0441124e-20, 1.1563842), (4.252002, -3.086394e-20, 1.0520017), (4.3563843, 1.9692663e-20, 0.8), (4.252002, 0.15882534, 0.5479983), (4, 0.15882534, 0.44361582), (3.7479982, 0.15882534, 0.5479983), (3.643616, 0.15882534, 0.8), (3.7479982, 0.15882534, 1.0520017), (4, 0.15882534, 1.1563842), (4.252002, 0.15882534, 1.0520017), (4.3563843, 0.15882534, 0.8), (4.1869936, 2.2818242e-20, 0.61300665), (4, 1.7212385e-19, 0.5355515), (3.8130066, 0, 0.61300665), (3.7355516, 0, 0.8), (3.8130066, 1.02354133e-19, 0.98699343), (4, 1.242984e-19, 1.0644486), (4.1869936, 2.2171723e-19, 0.98699343), (4.2644486, -5.925392e-20, 0.8), (4.1869936, 0.15882534, 0.61300665), (4, 0.15882534, 0.5355515), (3.8130066, 0.15882534, 0.61300665), (3.7355516, 0.15882534, 0.8), (3.8130066, 0.15882534, 0.98699343), (4, 0.15882534, 1.0644486), (4.1869936, 0.15882534, 0.98699343), (4.2644486, 0.15882534, 0.8), (4.252002, 0.0075166663, 1.0520017), (4, 0.0075166663, 1.1563842), (3.7479982, 0.0075166663, 1.0520017), (3.643616, 0.0075166663, 0.8), (3.7479982, 0.0075166663, 0.5479983), (4, 0.0075166663, 0.44361582), (4.252002, 0.0075166663, 0.5479983), (4.3563843, 0.0075166663, 0.8), (4.238388, 0, 1.0383878), (4.3371315, 0, 0.8), (4.238388, 0, 0.5616123), (4, 0, 0.46286893), (3.7616124, 0, 0.5616123), (3.662869, 0, 0.8), (3.7616124, 0, 1.0383878), (4, 0, 1.1371312), (4.200478, 0, 1.000478), (4.283519, 0, 0.8), (4.200478, 0, 0.599522), (4, 0, 0.5164813), (3.799522, 0, 0.599522), (3.7164812, 0, 0.8), (3.799522, 0, 1.000478), (4, 0, 1.0835187), (4.1869936, 0.012202854, 0.98699343), (4.2644486, 0.012202854, 0.8), (4.1869936, 0.012202854, 0.61300665), (4, 0.012202854, 0.5355515), (3.8130066, 0.012202854, 0.61300665), (3.7355516, 0.012202854, 0.8), (3.8130066, 0.012202854, 0.98699343), (4, 0.012202854, 1.0644486), (5.052002, -3.9261068e-20, 2.1479983), (4.8, -3.9261068e-20, 2.0436158), (4.5479984, -5.0809556e-20, 2.1479983), (4.443616, -2.2013458e-19, 2.4), (4.5479984, -2.5939557e-19, 2.6520019), (4.8, -1.1633295e-19, 2.7563844), (5.052002, -3.938486e-20, 2.6520019), (5.1563845, -5.7291305e-21, 2.4), (5.052002, 0.15882534, 2.1479983), (4.8, 0.15882534, 2.0436158), (4.5479984, 0.15882534, 2.1479983), (4.443616, 0.15882534, 2.4), (4.5479984, 0.15882534, 2.6520019), (4.8, 0.15882534, 2.7563844), (5.052002, 0.15882534, 2.6520019), (5.1563845, 0.15882534, 2.4), (4.986994, 0, 2.2130067), (4.8, 3.5831067e-20, 2.1355515), (4.6130066, -1.3818534e-19, 2.2130067), (4.5355515, -2.7251253e-19, 2.4), (4.6130066, -1.8553687e-19, 2.5869935), (4.8, -4.0237632e-20, 2.6644487), (4.986994, -6.7604444e-20, 2.5869935), (5.0644484, -1.2537967e-19, 2.4), (4.986994, 0.15882534, 2.2130067), (4.8, 0.15882534, 2.1355515), (4.6130066, 0.15882534, 2.2130067), (4.5355515, 0.15882534, 2.4), (4.6130066, 0.15882534, 2.5869935), (4.8, 0.15882534, 2.6644487), (4.986994, 0.15882534, 2.5869935), (5.0644484, 0.15882534, 2.4), (5.052002, 0.0075166663, 2.6520019), (4.8, 0.0075166663, 2.7563844), (4.5479984, 0.0075166663, 2.6520019), (4.443616, 0.0075166663, 2.4), (4.5479984, 0.0075166663, 2.1479983), (4.8, 0.0075166663, 2.0436158), (5.052002, 0.0075166663, 2.1479983), (5.1563845, 0.0075166663, 2.4), (5.038388, 0, 2.6383877), (5.137131, 0, 2.4), (5.038388, 0, 2.1616123), (4.8, 0, 2.062869), (4.561612, 0, 2.1616123), (4.4628687, 0, 2.4), (4.561612, 0, 2.6383877), (4.8, 0, 2.737131), (5.000478, 0, 2.6004782), (5.083519, 0, 2.4), (5.000478, 0, 2.199522), (4.8, 0, 2.1164813), (4.599522, 0, 2.199522), (4.5164814, 0, 2.4), (4.599522, 0, 2.6004782), (4.8, 0, 2.683519), (4.986994, 0.012202854, 2.5869935), (5.0644484, 0.012202854, 2.4), (4.986994, 0.012202854, 2.2130067), (4.8, 0.012202854, 2.1355515), (4.6130066, 0.012202854, 2.2130067), (4.5355515, 0.012202854, 2.4), (4.6130066, 0.012202854, 2.5869935), (4.8, 0.012202854, 2.6644487), (4.252002, 4.6493005e-20, 2.1479983), (4, 2.2147658e-20, 2.0436158), (3.7479982, -2.5971993e-19, 2.1479983), (3.643616, -1.4700105e-19, 2.4), (3.7479982, -2.1918914e-19, 2.6520019), (4, -4.1080157e-19, 2.7563844), (4.252002, -2.6306613e-19, 2.6520019), (4.3563843, -2.4854684e-19, 2.4), (4.252002, 0.15882534, 2.1479983), (4, 0.15882534, 2.0436158), (3.7479982, 0.15882534, 2.1479983), (3.643616, 0.15882534, 2.4), (3.7479982, 0.15882534, 2.6520019), (4, 0.15882534, 2.7563844), (4.252002, 0.15882534, 2.6520019), (4.3563843, 0.15882534, 2.4), (4.1869936, -1.0878149e-19, 2.2130067), (4, -1.3261848e-19, 2.1355515), (3.8130066, -7.661108e-20, 2.2130067), (3.7355516, -3.1641794e-19, 2.4), (3.8130066, -1.5543719e-19, 2.5869935), (4, 1.1054987e-19, 2.6644487), (4.1869936, -2.1394499e-19, 2.5869935), (4.2644486, -1.285111e-19, 2.4), (4.1869936, 0.15882534, 2.2130067), (4, 0.15882534, 2.1355515), (3.8130066, 0.15882534, 2.2130067), (3.7355516, 0.15882534, 2.4), (3.8130066, 0.15882534, 2.5869935), (4, 0.15882534, 2.6644487), (4.1869936, 0.15882534, 2.5869935), (4.2644486, 0.15882534, 2.4), (4.252002, 0.0075166663, 2.6520019), (4, 0.0075166663, 2.7563844), (3.7479982, 0.0075166663, 2.6520019), (3.643616, 0.0075166663, 2.4), (3.7479982, 0.0075166663, 2.1479983), (4, 0.0075166663, 2.0436158), (4.252002, 0.0075166663, 2.1479983), (4.3563843, 0.0075166663, 2.4), (4.238388, 0, 2.6383877), (4.3371315, 0, 2.4), (4.238388, 0, 2.1616123), (4, 0, 2.062869), (3.7616124, 0, 2.1616123), (3.662869, 0, 2.4), (3.7616124, 0, 2.6383877), (4, 0, 2.737131), (4.200478, 0, 2.6004782), (4.283519, 0, 2.4), (4.200478, 0, 2.199522), (4, 0, 2.1164813), (3.799522, 0, 2.199522), (3.7164812, 0, 2.4), (3.799522, 0, 2.6004782), (4, 0, 2.683519), (4.1869936, 0.012202854, 2.5869935), (4.2644486, 0.012202854, 2.4), (4.1869936, 0.012202854, 2.2130067), (4, 0.012202854, 2.1355515), (3.8130066, 0.012202854, 2.2130067), (3.7355516, 0.012202854, 2.4), (3.8130066, 0.012202854, 2.5869935), (4, 0.012202854, 2.6644487), (5.052002, 1.6043557e-19, 1.3479984), (4.8, -4.936009e-20, 1.2436159), (4.5479984, 3.43837e-21, 1.3479984), (4.443616, 3.317422e-20, 1.6), (4.5479984, -2.2111507e-20, 1.8520017), (4.8, -1.2370066e-19, 1.9563842), (5.052002, -2.0801598e-19, 1.8520017), (5.1563845, 6.623969e-20, 1.6), (5.052002, 0.15882534, 1.3479984), (4.8, 0.15882534, 1.2436159), (4.5479984, 0.15882534, 1.3479984), (4.443616, 0.15882534, 1.6), (4.5479984, 0.15882534, 1.8520017), (4.8, 0.15882534, 1.9563842), (5.052002, 0.15882534, 1.8520017), (5.1563845, 0.15882534, 1.6), (4.986994, 9.49277e-20, 1.4130067), (4.8, 1.8198369e-19, 1.3355515), (4.6130066, 0, 1.4130067), (4.5355515, 1.4712684e-19, 1.6), (4.6130066, 4.3175884e-19, 1.7869935), (4.8, 2.4074347e-19, 1.8644485), (4.986994, 0, 1.7869935), (5.0644484, -9.802814e-20, 1.6), (4.986994, 0.15882534, 1.4130067), (4.8, 0.15882534, 1.3355515), (4.6130066, 0.15882534, 1.4130067), (4.5355515, 0.15882534, 1.6), (4.6130066, 0.15882534, 1.7869935), (4.8, 0.15882534, 1.8644485), (4.986994, 0.15882534, 1.7869935), (5.0644484, 0.15882534, 1.6), (5.052002, 0.0075166663, 1.8520017), (4.8, 0.0075166663, 1.9563842), (4.5479984, 0.0075166663, 1.8520017), (4.443616, 0.0075166663, 1.6), (4.5479984, 0.0075166663, 1.3479984), (4.8, 0.0075166663, 1.2436159), (5.052002, 0.0075166663, 1.3479984), (5.1563845, 0.0075166663, 1.6), (5.038388, 0, 1.8383877), (5.137131, 0, 1.6), (5.038388, 0, 1.3616123), (4.8, 0, 1.2628689), (4.561612, 0, 1.3616123), (4.4628687, 0, 1.6), (4.561612, 0, 1.8383877), (4.8, 0, 1.9371312), (5.000478, 0, 1.800478), (5.083519, 0, 1.6), (5.000478, 0, 1.3995221), (4.8, 0, 1.3164814), (4.599522, 0, 1.3995221), (4.5164814, 0, 1.6), (4.599522, 0, 1.800478), (4.8, 0, 1.8835187), (4.986994, 0.012202854, 1.7869935), (5.0644484, 0.012202854, 1.6), (4.986994, 0.012202854, 1.4130067), (4.8, 0.012202854, 1.3355515), (4.6130066, 0.012202854, 1.4130067), (4.5355515, 0.012202854, 1.6), (4.6130066, 0.012202854, 1.7869935), (4.8, 0.012202854, 1.8644485), (4.252002, 8.973971e-20, 1.3479984), (4, 1.311557e-19, 1.2436159), (3.7479982, 2.7186276e-20, 1.3479984), (3.643616, 9.7958425e-20, 1.6), (3.7479982, 1.4238058e-19, 1.8520017), (4, 1.4260603e-19, 1.9563842), (4.252002, 9.533242e-20, 1.8520017), (4.3563843, -5.4047658e-20, 1.6), (4.252002, 0.15882534, 1.3479984), (4, 0.15882534, 1.2436159), (3.7479982, 0.15882534, 1.3479984), (3.643616, 0.15882534, 1.6), (3.7479982, 0.15882534, 1.8520017), (4, 0.15882534, 1.9563842), (4.252002, 0.15882534, 1.8520017), (4.3563843, 0.15882534, 1.6), (4.1869936, 1.273045e-19, 1.4130067), (4, -2.0662806e-19, 1.3355515), (3.8130066, -3.933435e-20, 1.4130067), (3.7355516, 4.35565e-20, 1.6), (3.8130066, 1.9002812e-19, 1.7869935), (4, 3.6647798e-19, 1.8644485), (4.1869936, 2.8380525e-19, 1.7869935), (4.2644486, 4.022857e-19, 1.6), (4.1869936, 0.15882534, 1.4130067), (4, 0.15882534, 1.3355515), (3.8130066, 0.15882534, 1.4130067), (3.7355516, 0.15882534, 1.6), (3.8130066, 0.15882534, 1.7869935), (4, 0.15882534, 1.8644485), (4.1869936, 0.15882534, 1.7869935), (4.2644486, 0.15882534, 1.6), (4.252002, 0.0075166663, 1.8520017), (4, 0.0075166663, 1.9563842), (3.7479982, 0.0075166663, 1.8520017), (3.643616, 0.0075166663, 1.6), (3.7479982, 0.0075166663, 1.3479984), (4, 0.0075166663, 1.2436159), (4.252002, 0.0075166663, 1.3479984), (4.3563843, 0.0075166663, 1.6), (4.238388, 0, 1.8383877), (4.3371315, 0, 1.6), (4.238388, 0, 1.3616123), (4, 0, 1.2628689), (3.7616124, 0, 1.3616123), (3.662869, 0, 1.6), (3.7616124, 0, 1.8383877), (4, 0, 1.9371312), (4.200478, 0, 1.800478), (4.283519, 0, 1.6), (4.200478, 0, 1.3995221), (4, 0, 1.3164814), (3.799522, 0, 1.3995221), (3.7164812, 0, 1.6), (3.799522, 0, 1.800478), (4, 0, 1.8835187), (4.1869936, 0.012202854, 1.7869935), (4.2644486, 0.012202854, 1.6), (4.1869936, 0.012202854, 1.4130067), (4, 0.012202854, 1.3355515), (3.8130066, 0.012202854, 1.4130067), (3.7355516, 0.012202854, 1.6), (3.8130066, 0.012202854, 1.7869935), (4, 0.012202854, 1.8644485), (4.5875864, 0.32000014, 2.1877463), (4.665311, 0.32000014, 2.0001016), (4.5875864, 0.32000014, 1.8124567), (4.3999414, 0.32000014, 1.7347318), (4.2122965, 0.32000014, 1.8124567), (4.1345716, 0.32000014, 2.0001016), (4.2122965, 0.32000014, 2.1877463), (4.3999414, 0.32000014, 2.2654715), (4.5875864, 0.48082992, 2.1877463), (4.665311, 0.48082992, 2.0001016), (4.5875864, 0.48082992, 1.8124567), (4.3999414, 0.48082992, 1.7347318), (4.2122965, 0.48082992, 1.8124567), (4.3999414, 0.48082992, 2.2654715), (4.5678453, 0.48082992, 2.1680055), (4.637393, 0.48082992, 2.0001016), (4.5678453, 0.48082992, 1.8321977), (4.3999414, 0.48082992, 1.7626497), (4.2320375, 0.48082992, 1.8321977), (4.1624894, 0.48082992, 2.0001016), (4.2320375, 0.48082992, 2.1680055), (4.3999414, 0.48082992, 2.2375536), (4.3999414, 0.48082992, 2.0001016), (4.2122965, 0.4642254, 1.8124567), (4.3999414, 0.4642254, 1.7347318), (4.5875864, 0.4642254, 1.8124567), (4.665311, 0.4642254, 2.0001016), (4.5875864, 0.4642254, 2.1877463), (4.3999414, 0.4642254, 2.2654715), (4.2122965, 0.4642254, 2.1877463), (4.1345716, 0.4642254, 2.0001016), (4.1345716, 0.48082992, 2.0001016), (4.2122965, 0.48082992, 2.1877463), (4.5875864, 0.32000014, 1.3877462), (4.665311, 0.32000014, 1.2001015), (4.5875864, 0.32000014, 1.0124568), (4.3999414, 0.32000014, 0.93473184), (4.2122965, 0.32000014, 1.0124568), (4.1345716, 0.32000014, 1.2001015), (4.2122965, 0.32000014, 1.3877462), (4.3999414, 0.32000014, 1.4654711), (4.5875864, 0.48082992, 1.3877462), (4.665311, 0.48082992, 1.2001015), (4.5875864, 0.48082992, 1.0124568), (4.3999414, 0.48082992, 0.93473184), (4.2122965, 0.48082992, 1.0124568), (4.1345716, 0.48082992, 1.2001015), (4.2122965, 0.48082992, 1.3877462), (4.3999414, 0.48082992, 1.4654711), (4.5678453, 0.48082992, 1.3680054), (4.637393, 0.48082992, 1.2001015), (4.5678453, 0.48082992, 1.0321976), (4.3999414, 0.48082992, 0.96264964), (4.2320375, 0.48082992, 1.0321976), (4.1624894, 0.48082992, 1.2001015), (4.2320375, 0.48082992, 1.3680054), (4.3999414, 0.48082992, 1.4375534), (4.3999414, 0.48082992, 1.2001015), (4.2122965, 0.4642254, 1.0124568), (4.3999414, 0.4642254, 0.93473184), (4.5875864, 0.4642254, 1.0124568), (4.665311, 0.4642254, 1.2001015), (4.5875864, 0.4642254, 1.3877462), (4.3999414, 0.4642254, 1.4654711), (4.2122965, 0.4642254, 1.3877462), (4.1345716, 0.4642254, 1.2001015), (5.387586, 0.32000014, 2.1877463), (5.465311, 0.32000014, 2.0001016), (5.387586, 0.32000014, 1.8124567), (5.1999416, 0.32000014, 1.7347318), (5.0122967, 0.32000014, 1.8124567), (4.9345717, 0.32000014, 2.0001016), (5.0122967, 0.32000014, 2.1877463), (5.1999416, 0.32000014, 2.2654715), (5.387586, 0.48082992, 2.1877463), (5.465311, 0.48082992, 2.0001016), (5.387586, 0.48082992, 1.8124567), (5.1999416, 0.48082992, 1.7347318), (5.0122967, 0.48082992, 1.8124567), (4.9345717, 0.48082992, 2.0001016), (5.0122967, 0.48082992, 2.1877463), (5.1999416, 0.48082992, 2.2654715), (5.3678455, 0.48082992, 2.1680055), (5.437393, 0.48082992, 2.0001016), (5.3678455, 0.48082992, 1.8321977), (5.1999416, 0.48082992, 1.7626497), (5.0320377, 0.48082992, 1.8321977), (4.9624896, 0.48082992, 2.0001016), (5.0320377, 0.48082992, 2.1680055), (5.1999416, 0.48082992, 2.2375536), (5.1999416, 0.48082992, 2.0001016), (5.0122967, 0.4642254, 1.8124567), (5.1999416, 0.4642254, 1.7347318), (5.387586, 0.4642254, 1.8124567), (5.465311, 0.4642254, 2.0001016), (5.387586, 0.4642254, 2.1877463), (5.1999416, 0.4642254, 2.2654715), (5.0122967, 0.4642254, 2.1877463), (4.9345717, 0.4642254, 2.0001016), (5.387586, 0.32000014, 1.3877462), (5.465311, 0.32000014, 1.2001015), (5.387586, 0.32000014, 1.0124568), (5.1999416, 0.32000014, 0.93473184), (5.0122967, 0.32000014, 1.0124568), (4.9345717, 0.32000014, 1.2001015), (5.0122967, 0.32000014, 1.3877462), (5.1999416, 0.32000014, 1.4654711), (5.387586, 0.48082992, 1.3877462), (5.465311, 0.48082992, 1.2001015), (5.387586, 0.48082992, 1.0124568), (5.1999416, 0.48082992, 0.93473184), (5.0122967, 0.48082992, 1.0124568), (4.9345717, 0.48082992, 1.2001015), (5.0122967, 0.48082992, 1.3877462), (5.1999416, 0.48082992, 1.4654711), (5.3678455, 0.48082992, 1.3680054), (5.437393, 0.48082992, 1.2001015), (5.3678455, 0.48082992, 1.0321976), (5.1999416, 0.48082992, 0.96264964), (5.0320377, 0.48082992, 1.0321976), (4.9624896, 0.48082992, 1.2001015), (5.0320377, 0.48082992, 1.3680054), (5.1999416, 0.48082992, 1.4375534), (5.1999416, 0.48082992, 1.2001015), (5.0122967, 0.4642254, 1.0124568), (5.1999416, 0.4642254, 0.93473184), (5.387586, 0.4642254, 1.0124568), (5.465311, 0.4642254, 1.2001015), (5.387586, 0.4642254, 1.3877462), (5.1999416, 0.4642254, 1.4654711), (5.0122967, 0.4642254, 1.3877462), (4.9345717, 0.4642254, 1.2001015), (5.387645, 0.32000014, 0.2123553), (5.2, 0.32000014, 0.13463032), (5.0123553, 0.32000014, 0.2123553), (4.9346304, 0.32000014, 0.4), (5.0123553, 0.32000014, 0.5876447), (5.2, 0.32000014, 0.6653697), (5.387645, 0.32000014, 0.5876447), (5.46537, 0.32000014, 0.4), (5.387645, 0.48082992, 0.2123553), (5.2, 0.48082992, 0.13463032), (5.0123553, 0.48082992, 0.2123553), (4.9346304, 0.48082992, 0.4), (5.0123553, 0.48082992, 0.5876447), (5.2, 0.48082992, 0.6653697), (5.387645, 0.48082992, 0.5876447), (5.46537, 0.48082992, 0.4), (5.3679037, 0.48082992, 0.23209617), (5.2, 0.48082992, 0.16254812), (5.0320964, 0.48082992, 0.23209617), (4.9625483, 0.48082992, 0.4), (5.0320964, 0.48082992, 0.5679038), (5.2, 0.48082992, 0.6374518), (5.3679037, 0.48082992, 0.5679038), (5.4374523, 0.48082992, 0.4), (5.2, 0.48082992, 0.4), (5.0123553, 0.4642254, 0.5876447), (4.9346304, 0.4642254, 0.4), (5.0123553, 0.4642254, 0.2123553), (5.2, 0.4642254, 0.13463032), (5.387645, 0.4642254, 0.2123553), (5.46537, 0.4642254, 0.4), (5.387645, 0.4642254, 0.5876447), (5.2, 0.4642254, 0.6653697), (4.5876446, 0.32000014, 0.2123553), (4.4, 0.32000014, 0.13463032), (4.2123556, 0.32000014, 0.2123553), (4.13463, 0.32000014, 0.4), (4.2123556, 0.32000014, 0.5876447), (4.4, 0.32000014, 0.6653697), (4.5876446, 0.32000014, 0.5876447), (4.66537, 0.32000014, 0.4), (4.5876446, 0.48082992, 0.2123553), (4.4, 0.48082992, 0.13463032), (4.2123556, 0.48082992, 0.2123553), (4.13463, 0.48082992, 0.4), (4.2123556, 0.48082992, 0.5876447), (4.4, 0.48082992, 0.6653697), (4.5876446, 0.48082992, 0.5876447), (4.66537, 0.48082992, 0.4), (4.567904, 0.48082992, 0.23209617), (4.4, 0.48082992, 0.16254812), (4.232096, 0.48082992, 0.23209617), (4.162548, 0.48082992, 0.4), (4.232096, 0.48082992, 0.5679038), (4.4, 0.48082992, 0.6374518), (4.567904, 0.48082992, 0.5679038), (4.637452, 0.48082992, 0.4), (4.4, 0.48082992, 0.4), (4.2123556, 0.4642254, 0.5876447), (4.13463, 0.4642254, 0.4), (4.2123556, 0.4642254, 0.2123553), (4.4, 0.4642254, 0.13463032), (4.5876446, 0.4642254, 0.2123553), (4.66537, 0.4642254, 0.4), (4.5876446, 0.4642254, 0.5876447), (4.4, 0.4642254, 0.6653697), (5.387645, 0.32000014, 2.6123552), (5.2, 0.32000014, 2.5346303), (5.0123553, 0.32000014, 2.6123552), (4.9346304, 0.32000014, 2.8000002), (5.0123553, 0.32000014, 2.9876447), (5.2, 0.32000014, 3.0653696), (5.387645, 0.32000014, 2.9876447), (5.46537, 0.32000014, 2.8000002), (5.387645, 0.48082992, 2.6123552), (5.2, 0.48082992, 2.5346303), (5.0123553, 0.48082992, 2.6123552), (4.9346304, 0.48082992, 2.8000002), (5.0123553, 0.48082992, 2.9876447), (5.2, 0.48082992, 3.0653696), (5.387645, 0.48082992, 2.9876447), (5.46537, 0.48082992, 2.8000002), (5.3679037, 0.48082992, 2.6320963), (5.2, 0.48082992, 2.5625482), (5.0320964, 0.48082992, 2.6320963), (4.9625483, 0.48082992, 2.8000002), (5.0320964, 0.48082992, 2.9679039), (5.2, 0.48082992, 3.0374517), (5.3679037, 0.48082992, 2.9679039), (5.4374523, 0.48082992, 2.8000002), (5.2, 0.48082992, 2.8000002), (5.0123553, 0.4642254, 2.9876447), (4.9346304, 0.4642254, 2.8000002), (5.0123553, 0.4642254, 2.6123552), (5.2, 0.4642254, 2.5346303), (5.387645, 0.4642254, 2.6123552), (5.46537, 0.4642254, 2.8000002), (5.387645, 0.4642254, 2.9876447), (5.2, 0.4642254, 3.0653696)]
                            float3 xformOp:translate:pivot = (3.19992, 0.24041496, 1.6000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_4x10_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_4x10_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (3.99992, 0.24041496, 1.6000214)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_plate_6x8_grp"
                    {
                        def Xform "Wall_e_RIG_v001_plate_6x8_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (3.1999202, 0.24041496, 2.4000213)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_hinge_plate_2x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_hinge_plate_2x4_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7999786, 0.46024692, 1.779752)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x1_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_with_hole_grp"
                    {
                        def Mesh "Wall_e_RIG_v001_brick_1x1_with_hole_001_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(0, -2.9802322e-8, 1.1920929e-7), (0.79995817, 1.121753, 0.8)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [0, 1, 27, 28, 1, 2, 26, 27, 2, 3, 25, 26, 3, 4, 24, 25, 4, 5, 31, 24, 5, 6, 30, 31, 6, 7, 29, 30, 7, 0, 28, 29, 8, 9, 17, 16, 9, 10, 18, 17, 10, 11, 19, 18, 11, 12, 20, 19, 12, 13, 21, 20, 13, 14, 22, 21, 14, 15, 23, 22, 15, 8, 16, 23, 25, 24, 12, 11, 26, 25, 11, 10, 27, 26, 10, 9, 28, 27, 9, 8, 29, 28, 8, 15, 30, 29, 15, 14, 31, 30, 14, 13, 24, 31, 13, 12, 16, 17, 33, 32, 17, 18, 34, 33, 18, 19, 35, 34, 19, 20, 36, 35, 20, 21, 37, 36, 21, 22, 38, 37, 22, 23, 39, 38, 23, 16, 32, 39, 32, 33, 41, 40, 33, 34, 42, 41, 34, 35, 43, 42, 35, 36, 44, 43, 36, 37, 45, 44, 37, 38, 46, 45, 38, 39, 47, 46, 39, 32, 40, 47, 40, 41, 49, 48, 41, 42, 50, 49, 42, 43, 51, 50, 43, 44, 52, 51, 44, 45, 53, 52, 45, 46, 54, 53, 46, 47, 55, 54, 47, 40, 48, 55, 48, 49, 57, 56, 49, 50, 58, 57, 50, 51, 59, 58, 51, 52, 60, 59, 52, 53, 61, 60, 53, 54, 62, 61, 54, 55, 63, 62, 55, 48, 56, 63, 188, 189, 115, 66, 104, 117, 118, 68, 68, 118, 184, 185, 76, 109, 110, 101, 106, 181, 182, 69, 185, 186, 104, 68, 70, 119, 160, 161, 71, 107, 157, 158, 165, 114, 64, 164, 103, 70, 161, 162, 150, 149, 161, 160, 153, 152, 158, 157, 149, 150, 108, 72, 152, 153, 98, 73, 145, 146, 75, 113, 148, 149, 72, 102, 125, 126, 109, 76, 128, 129, 99, 77, 121, 122, 79, 112, 124, 125, 76, 101, 80, 65, 167, 156, 155, 154, 156, 167, 81, 154, 155, 74, 82, 130, 131, 78, 83, 111, 112, 79, 122, 123, 83, 79, 146, 147, 84, 75, 64, 85, 163, 164, 86, 187, 188, 66, 66, 115, 116, 86, 191, 180, 87, 67, 190, 191, 67, 89, 90, 89, 67, 87, 91, 105, 106, 69, 183, 91, 69, 182, 159, 92, 71, 158, 152, 151, 159, 158, 93, 151, 152, 73, 94, 127, 128, 77, 100, 94, 77, 99, 96, 95, 82, 78, 131, 120, 96, 78, 155, 144, 97, 74, 65, 88, 166, 167, 153, 154, 81, 98, 99, 129, 130, 82, 95, 100, 99, 82, 101, 110, 111, 83, 123, 124, 101, 83, 147, 148, 102, 84, 85, 103, 162, 163, 104, 186, 187, 86, 86, 116, 117, 104, 106, 105, 90, 87, 87, 180, 181, 106, 157, 107, 80, 156, 154, 153, 157, 156, 150, 203, 204, 108, 109, 126, 206, 207, 110, 109, 207, 208, 111, 110, 208, 209, 112, 111, 209, 210, 211, 121, 112, 210, 214, 145, 113, 213, 215, 192, 114, 165, 115, 189, 194, 195, 116, 115, 195, 196, 117, 116, 196, 197, 118, 117, 197, 198, 184, 118, 198, 199, 160, 119, 201, 202, 202, 203, 150, 160, 212, 133, 121, 211, 133, 134, 122, 121, 134, 135, 123, 122, 135, 136, 124, 123, 136, 137, 125, 124, 137, 138, 126, 125, 206, 126, 138, 205, 128, 127, 139, 140, 140, 141, 129, 128, 130, 129, 141, 142, 131, 130, 142, 143, 143, 132, 120, 131, 213, 113, 133, 212, 113, 75, 134, 133, 75, 84, 135, 134, 84, 102, 136, 135, 102, 72, 137, 136, 72, 108, 138, 137, 205, 138, 108, 204, 140, 139, 93, 73, 73, 98, 141, 140, 142, 141, 98, 81, 143, 142, 81, 74, 74, 97, 132, 143, 148, 162, 161, 149, 147, 163, 162, 148, 146, 164, 163, 147, 145, 165, 164, 146, 214, 215, 165, 145, 155, 167, 166, 144, 168, 80, 107, 169, 170, 169, 107, 71, 92, 171, 170, 71, 119, 172, 200, 201, 173, 172, 119, 70, 70, 103, 174, 173, 175, 174, 103, 85, 176, 175, 85, 64, 64, 114, 177, 176, 193, 177, 114, 192, 88, 65, 179, 178, 65, 80, 168, 179, 226, 168, 169, 225, 224, 225, 169, 170, 171, 223, 224, 170, 172, 222, 238, 242, 221, 222, 172, 173, 173, 174, 220, 221, 219, 220, 174, 175, 218, 219, 175, 176, 176, 177, 217, 218, 231, 235, 177, 193, 178, 179, 227, 216, 179, 168, 226, 227, 178, 193, 192, 88, 216, 230, 234, 178, 195, 194, 190, 89, 196, 195, 89, 90, 197, 196, 90, 105, 198, 197, 105, 91, 199, 198, 91, 183, 200, 239, 243, 171, 201, 200, 171, 92, 202, 201, 92, 159, 151, 203, 202, 159, 204, 203, 151, 93, 139, 205, 204, 93, 127, 206, 205, 139, 207, 206, 127, 94, 208, 207, 94, 100, 209, 208, 100, 95, 210, 209, 95, 96, 120, 211, 210, 96, 132, 212, 211, 120, 97, 213, 212, 132, 144, 214, 213, 97, 144, 166, 215, 214, 166, 88, 192, 215, 190, 194, 229, 233, 232, 189, 217, 228, 218, 217, 189, 188, 188, 187, 219, 218, 187, 186, 220, 219, 221, 220, 186, 185, 185, 184, 222, 221, 237, 241, 184, 199, 223, 236, 240, 183, 224, 223, 183, 182, 182, 181, 225, 224, 180, 226, 225, 181, 227, 226, 180, 191, 216, 227, 191, 190, 194, 189, 232, 229, 190, 233, 230, 216, 178, 234, 231, 193, 177, 235, 228, 217, 183, 240, 237, 199, 184, 241, 238, 222, 172, 242, 239, 200, 171, 243, 236, 223, 244, 369, 370, 245, 245, 370, 371, 246, 246, 371, 364, 247, 247, 364, 365, 248, 248, 365, 366, 249, 249, 366, 367, 250, 250, 367, 368, 251, 251, 368, 369, 244, 244, 245, 237, 240, 245, 246, 241, 237, 246, 247, 238, 241, 247, 248, 242, 238, 248, 249, 239, 242, 249, 250, 243, 239, 250, 251, 236, 243, 251, 244, 240, 236, 253, 252, 233, 229, 254, 253, 229, 232, 255, 254, 232, 228, 256, 255, 228, 235, 257, 256, 235, 231, 258, 257, 231, 234, 259, 258, 234, 230, 252, 259, 230, 233, 276, 335, 336, 279, 280, 279, 336, 337, 282, 280, 337, 338, 284, 282, 338, 339, 286, 284, 339, 332, 288, 286, 332, 333, 290, 288, 333, 334, 276, 290, 334, 335, 269, 268, 302, 303, 270, 269, 303, 304, 271, 270, 304, 305, 272, 271, 305, 306, 273, 272, 306, 307, 274, 273, 307, 300, 275, 274, 300, 301, 268, 275, 301, 302, 269, 270, 312, 313, 261, 260, 351, 352, 262, 261, 352, 353, 270, 271, 311, 312, 263, 262, 353, 354, 271, 272, 310, 311, 264, 263, 354, 355, 272, 273, 309, 310, 265, 264, 355, 348, 273, 274, 308, 309, 266, 265, 348, 349, 274, 275, 315, 308, 267, 266, 349, 350, 275, 268, 314, 315, 260, 267, 350, 351, 268, 269, 313, 314, 293, 292, 255, 256, 294, 293, 256, 257, 295, 294, 257, 258, 296, 295, 258, 259, 297, 296, 259, 252, 298, 297, 252, 253, 299, 298, 253, 254, 292, 299, 254, 255, 301, 300, 292, 293, 302, 301, 293, 294, 303, 302, 294, 295, 304, 303, 295, 296, 305, 304, 296, 297, 306, 305, 297, 298, 307, 306, 298, 299, 300, 307, 299, 292, 309, 308, 316, 317, 310, 309, 317, 318, 311, 310, 318, 319, 312, 311, 319, 320, 313, 312, 320, 321, 314, 313, 321, 322, 315, 314, 322, 323, 308, 315, 323, 316, 317, 316, 287, 285, 318, 317, 285, 283, 319, 318, 283, 281, 320, 319, 281, 278, 321, 320, 278, 277, 322, 321, 277, 291, 323, 322, 291, 289, 316, 323, 289, 287, 325, 324, 287, 289, 326, 325, 289, 291, 327, 326, 291, 277, 328, 327, 277, 278, 329, 328, 278, 281, 330, 329, 281, 283, 331, 330, 283, 285, 324, 331, 285, 287, 333, 332, 324, 325, 334, 333, 325, 326, 335, 334, 326, 327, 336, 335, 327, 328, 337, 336, 328, 329, 338, 337, 329, 330, 339, 338, 330, 331, 332, 339, 331, 324, 341, 340, 286, 288, 342, 341, 288, 290, 343, 342, 290, 276, 344, 343, 276, 279, 345, 344, 279, 280, 346, 345, 280, 282, 347, 346, 282, 284, 340, 347, 284, 286, 349, 348, 340, 341, 350, 349, 341, 342, 351, 350, 342, 343, 352, 351, 343, 344, 353, 352, 344, 345, 354, 353, 345, 346, 355, 354, 346, 347, 348, 355, 347, 340, 356, 265, 266, 357, 358, 357, 266, 267, 359, 358, 267, 260, 360, 359, 260, 261, 361, 360, 261, 262, 362, 361, 262, 263, 363, 362, 263, 264, 356, 363, 264, 265, 364, 356, 357, 365, 366, 365, 357, 358, 367, 366, 358, 359, 368, 367, 359, 360, 369, 368, 360, 361, 370, 369, 361, 362, 371, 370, 362, 363, 364, 371, 363, 356]
                            rel material:binding = </Cache1/mtl/initialShadingGroup>
                            point3f[] points = [(0.58763856, 0.9609232, 0.21276891), (0.39999387, 0.9609232, 0.13504392), (0.21234916, 0.9609232, 0.21276891), (0.13462418, 0.9609232, 0.40041357), (0.21234916, 0.9609232, 0.5880583), (0.39999387, 0.9609232, 0.6657833), (0.58763856, 0.9609232, 0.5880583), (0.6653636, 0.9609232, 0.40041357), (0.58763856, 1.121753, 0.21276891), (0.39999387, 1.121753, 0.13504392), (0.21234916, 1.121753, 0.21276891), (0.13462418, 1.121753, 0.40041357), (0.21234916, 1.121753, 0.5880583), (0.39999387, 1.121753, 0.6657833), (0.58763856, 1.121753, 0.5880583), (0.6653636, 1.121753, 0.40041357), (0.56789774, 1.121753, 0.23250979), (0.39999387, 1.121753, 0.16296172), (0.23209003, 1.121753, 0.23250979), (0.162542, 1.121753, 0.40041357), (0.23209003, 1.121753, 0.5683174), (0.39999387, 1.121753, 0.6378654), (0.56789774, 1.121753, 0.5683174), (0.6374458, 1.121753, 0.40041357), (0.21234916, 1.1051484, 0.5880583), (0.13462418, 1.1051484, 0.40041357), (0.21234916, 1.1051484, 0.21276891), (0.39999387, 1.1051484, 0.13504392), (0.58763856, 1.1051484, 0.21276891), (0.6653636, 1.1051484, 0.40041357), (0.58763856, 1.1051484, 0.5880583), (0.39999387, 1.1051484, 0.6657833), (0.54259884, 1.121753, 0.2578087), (0.39999387, 1.121753, 0.19873977), (0.25738895, 1.121753, 0.2578087), (0.19832006, 1.121753, 0.40041357), (0.25738895, 1.121753, 0.5430185), (0.39999387, 1.121753, 0.6020874), (0.54259884, 1.121753, 0.5430185), (0.60166776, 1.121753, 0.40041357), (0.5249484, 1.121753, 0.2754591), (0.39999387, 1.121753, 0.22370118), (0.27503935, 1.121753, 0.2754591), (0.2232815, 1.121753, 0.40041357), (0.27503935, 1.121753, 0.5253681), (0.39999387, 1.121753, 0.57712597), (0.5249484, 1.121753, 0.5253681), (0.57670635, 1.121753, 0.40041357), (0.5249484, 1.1051484, 0.2754591), (0.39999387, 1.1051484, 0.22370118), (0.27503935, 1.1051484, 0.2754591), (0.2232815, 1.1051484, 0.40041357), (0.27503935, 1.1051484, 0.5253681), (0.39999387, 1.1051484, 0.57712597), (0.5249484, 1.1051484, 0.5253681), (0.57670635, 1.1051484, 0.40041357), (0.5249484, 0.9609232, 0.2754591), (0.39999387, 0.9609232, 0.22370118), (0.27503935, 0.9609232, 0.2754591), (0.2232815, 0.9609232, 0.40041357), (0.27503935, 0.9609232, 0.5253681), (0.39999387, 0.9609232, 0.57712597), (0.5249484, 0.9609232, 0.5253681), (0.57670635, 0.9609232, 0.40041357), (0, 0, 0.8), (0.7999578, 0, 0.8), (0, 0.96, 0.8), (0.7999578, 0.96, 0.8), (0, 0.96000004, 1.1920929e-7), (0.7999578, 0.96000004, 1.1920929e-7), (0, -2.9802322e-8, 1.1920929e-7), (0.7999578, -2.9802322e-8, 1.1920929e-7), (0.15920237, 0, 0.15920249), (0.6407555, 0, 0.15920249), (0.6407555, 0, 0.6407976), (0.15920237, 0, 0.6407976), (0.15920237, 0.2820732, 0.15920249), (0.6407555, 0.2820732, 0.15920249), (0.6407555, 0.28207314, 0.6407976), (0.15920237, 0.28207314, 0.6407976), (0.7999578, -2.9802322e-8, 0.755131), (0.6407555, -2.9802322e-8, 0.6371292), (0.6407555, 0.28207308, 0.6371292), (0.15920237, 0.28207308, 0.6371292), (0.15920237, -2.9802322e-8, 0.6371292), (0, -2.9802322e-8, 0.755131), (0, 0.9599999, 0.755131), (0.7999578, 0.9599999, 0.755131), (0.7547483, 0, 0.8), (0.7547483, 0.96, 0.8), (0.7547483, 0.9599999, 0.755131), (0.7547483, 0.96000004, 1.1920929e-7), (0.7547483, -2.9802322e-8, 1.1920929e-7), (0.6368596, 0, 0.15920249), (0.6368596, 0.2820732, 0.15920249), (0.6368596, 0.28207308, 0.6371292), (0.6368596, 0.28207314, 0.6407976), (0.6368596, 0, 0.6407976), (0.6407555, 0, 0.16335832), (0.6407555, 0.2820732, 0.16335832), (0.6368596, 0.2820732, 0.16335832), (0.15920237, 0.2820732, 0.16335832), (0.15920237, 0, 0.16335832), (0, -2.9802322e-8, 0.045599043), (0, 0.96000004, 0.045599043), (0.7547483, 0.96000004, 0.045599043), (0.7999578, 0.96000004, 0.045599043), (0.7999578, -2.9802322e-8, 0.045599043), (0.16342261, 0, 0.15920249), (0.16342261, 0.2820732, 0.15920249), (0.16342261, 0.2820732, 0.16335832), (0.16342261, 0.28207308, 0.6371292), (0.16342261, 0.28207314, 0.6407976), (0.16342261, 0, 0.6407976), (0.045695394, 0, 0.8), (0.045695394, 0.96, 0.8), (0.045695394, 0.9599999, 0.755131), (0.045695394, 0.96000004, 0.045599043), (0.045695394, 0.96000004, 1.1920929e-7), (0.045695394, -2.9802322e-8, 1.1920929e-7), (0.6368596, 0.2777629, 0.6407976), (0.16342261, 0.2777629, 0.6407976), (0.15920237, 0.2777629, 0.6407976), (0.15920237, 0.27776283, 0.6371292), (0.15920237, 0.27776283, 0.16335832), (0.15920237, 0.27776283, 0.15920249), (0.16342261, 0.27776283, 0.15920249), (0.6368596, 0.27776283, 0.15920249), (0.6407555, 0.27776283, 0.15920249), (0.6407555, 0.27776283, 0.16335832), (0.6407555, 0.27776283, 0.6371292), (0.6407555, 0.2777629, 0.6407976), (0.6368596, 0.006479934, 0.6407976), (0.16342261, 0.006479934, 0.6407976), (0.15920237, 0.006479934, 0.6407976), (0.15920237, 0.006479904, 0.6371292), (0.15920237, 0.006479934, 0.16335832), (0.15920237, 0.006479934, 0.15920249), (0.16342261, 0.006479934, 0.15920249), (0.6368596, 0.006479934, 0.15920249), (0.6407555, 0.006479934, 0.15920249), (0.6407555, 0.006479934, 0.16335832), (0.6407555, 0.006479904, 0.6371292), (0.6407555, 0.006479934, 0.6407976), (0.64181334, 0, 0.6458328), (0.15847568, 0, 0.6458328), (0.1541672, 0, 0.6458328), (0.1541672, -2.9802322e-8, 0.64208764), (0.1541672, 0, 0.15841003), (0.1541672, 0, 0.15416732), (0.15847568, 0, 0.15416732), (0.64181334, 0, 0.15416732), (0.64579064, 0, 0.15416732), (0.64579064, 0, 0.15841003), (0.64579064, -2.9802322e-8, 0.64208764), (0.64579064, 0, 0.6458328), (0.79374677, -2.9802322e-8, 0.755131), (0.79374677, -2.9802322e-8, 0.045599043), (0.79374677, -2.9802322e-8, 0.0062111914), (0.7547483, -2.9802322e-8, 0.0062111914), (0.045695394, -2.9802322e-8, 0.0062111914), (0.006211072, -2.9802322e-8, 0.0062111914), (0.006211072, -2.9802322e-8, 0.045599043), (0.006211072, -2.9802322e-8, 0.755131), (0.006211072, 0, 0.7937889), (0.045695394, 0, 0.7937889), (0.7547483, 0, 0.7937889), (0.79374677, 0, 0.7937889), (0.7999578, 0.011776917, 0.755131), (0.7999578, 0.011776917, 0.045599043), (0.7999578, 0.011776917, 1.1920929e-7), (0.7547483, 0.011776917, 1.1920929e-7), (0.045695394, 0.011776917, 1.1920929e-7), (0, 0.011776917, 1.1920929e-7), (0, 0.011776917, 0.045599043), (0, 0.011776917, 0.755131), (0, 0.0117769465, 0.8), (0.045695394, 0.0117769465, 0.8), (0.7547483, 0.0117769465, 0.8), (0.7999578, 0.0117769465, 0.8), (0.7999578, 0.9474493, 0.755131), (0.7999578, 0.9474493, 0.045599043), (0.7999578, 0.9474493, 1.1920929e-7), (0.7547483, 0.9474493, 1.1920929e-7), (0.045695394, 0.9474493, 1.1920929e-7), (0, 0.9474493, 1.1920929e-7), (0, 0.9474493, 0.045599043), (0, 0.9474493, 0.755131), (0, 0.9474493, 0.8), (0.045695394, 0.9474493, 0.8), (0.7547483, 0.9474493, 0.8), (0.7999578, 0.9474493, 0.8), (0.40022215, 0, 0.8), (0.40022215, 0.0117769465, 0.8), (0.40022215, 0.9474493, 0.8), (0.40022215, 0.96, 0.8), (0.40022215, 0.9599999, 0.755131), (0.40022215, 0.96000004, 0.045599043), (0.40022215, 0.96000004, 1.1920929e-7), (0.40022215, 0.9474493, 1.1920929e-7), (0.40022215, 0.0117769465, 1.1920929e-7), (0.40022215, 0, 1.1920929e-7), (0.40022215, 0, 0.0062111914), (0.4001448, 2.9802322e-8, 0.15416732), (0.4001414, 2.9802322e-8, 0.15920249), (0.4001414, 0.0064799637, 0.15920249), (0.4001414, 0.27772275, 0.15920249), (0.4001414, 0.28203312, 0.15920249), (0.4001414, 0.28203312, 0.16335832), (0.4001414, 0.282033, 0.6371292), (0.4001414, 0.28203306, 0.6407976), (0.4001414, 0.2777228, 0.6407976), (0.4001414, 0.006479934, 0.6407976), (0.4001414, 0, 0.6407976), (0.4001448, 0, 0.6458328), (0.40022215, 0, 0.7937889), (0.7547485, 0.56, 0.8), (0.017797738, 0.56, 0.8), (3.5762787e-7, 0.56, 0.8), (3.5762787e-7, 0.55999994, 0.755131), (3.5762787e-7, 0.55999994, 0.045599043), (3.5762787e-7, 0.55999994, 1.1920929e-7), (0.017797738, 0.55999994, 1.1920929e-7), (0.78264654, 0.55999994, 1.1920929e-7), (0.79995817, 0.55999994, 1.1920929e-7), (0.79995817, 0.55999994, 0.045599043), (0.79995817, 0.55999994, 0.755131), (0.79995817, 0.56, 0.8), (0.026340723, 0.56, 0.79999995), (0.40000036, 0.93365955, 0.79999995), (0.77365994, 0.56, 0.79999995), (0.40000036, 0.18634036, 0.79999995), (0.13578305, 0.8242173, 0.79999995), (0.6642177, 0.8242173, 0.79999995), (0.6642177, 0.2957827, 0.79999995), (0.13578305, 0.29578272, 0.79999995), (0.77365994, 0.56, 1.6999954e-7), (0.40000036, 0.93365955, 1.6999954e-7), (0.026340723, 0.56, 1.6999954e-7), (0.40000036, 0.18634036, 1.6999954e-7), (0.6642177, 0.8242173, 1.6999954e-7), (0.13578305, 0.8242173, 1.6999954e-7), (0.13578305, 0.29578272, 1.6999954e-7), (0.6642177, 0.2957827, 1.6999954e-7), (0.6490216, 0.80902135, 1.6999954e-7), (0.40000036, 0.91216934, 1.6999954e-7), (0.15097901, 0.80902135, 1.6999954e-7), (0.04783103, 0.56, 1.6999954e-7), (0.15097901, 0.31097865, 1.6999954e-7), (0.4, 0.20783067, 1.6999954e-7), (0.6490214, 0.31097865, 1.6999954e-7), (0.7521694, 0.56, 1.6999954e-7), (0.6490214, 0.80902135, 0.79999995), (0.4, 0.91216934, 0.79999995), (0.15097865, 0.80902135, 0.79999995), (0.04783067, 0.56, 0.79999995), (0.15097865, 0.31097865, 0.79999995), (0.4, 0.20783067, 0.79999995), (0.6490214, 0.31097865, 0.79999995), (0.77986443, 0.56, 0.79999995), (0.6490214, 0.31097865, 0.080946445), (0.7521696, 0.56, 0.080946445), (0.6490216, 0.80902135, 0.080946445), (0.40000036, 0.91216934, 0.080946445), (0.15097901, 0.80902135, 0.080946445), (0.04783103, 0.56, 0.080946445), (0.15097901, 0.31097865, 0.080946445), (0.40000036, 0.20783067, 0.080946445), (0.40000036, 0.20783067, 0.71928215), (0.6490216, 0.31097865, 0.71928215), (0.7521696, 0.56, 0.71928215), (0.6490216, 0.80902135, 0.71928215), (0.40000036, 0.91216934, 0.71928215), (0.15097901, 0.80902135, 0.71928215), (0.04783103, 0.56, 0.71928215), (0.15097901, 0.31097865, 0.71928215), (0.58365107, 0.3763493, 0.080946445), (0.58365107, 0.3763493, 0.71928215), (0.6597216, 0.56, 0.71928215), (0.6597216, 0.56, 0.080946445), (0.58365107, 0.7436507, 0.080946445), (0.58365107, 0.7436507, 0.71928215), (0.40000036, 0.8197212, 0.080946445), (0.40000036, 0.8197212, 0.71928215), (0.21634969, 0.7436507, 0.080946445), (0.21634969, 0.7436507, 0.71928215), (0.14027908, 0.56, 0.080946445), (0.14027908, 0.56, 0.71928215), (0.21634963, 0.3763493, 0.080946445), (0.21634963, 0.3763493, 0.71928215), (0.40000036, 0.3002787, 0.080946445), (0.40000036, 0.3002787, 0.71928215), (0.04783103, 0.56, 0.78217304), (0.15097901, 0.31097865, 0.78217304), (0.40000036, 0.20783067, 0.78217304), (0.6490216, 0.31097865, 0.78217304), (0.7521696, 0.56, 0.78217304), (0.6490216, 0.80902135, 0.78217304), (0.40000036, 0.91216934, 0.78217304), (0.15097901, 0.80902135, 0.78217304), (0.04783103, 0.56, 0.7357104), (0.15097901, 0.31097865, 0.7357104), (0.40000036, 0.20783067, 0.7357104), (0.6490216, 0.31097865, 0.7357104), (0.7521696, 0.56, 0.7357104), (0.6490216, 0.80902135, 0.7357104), (0.40000036, 0.91216934, 0.7357104), (0.15097901, 0.80902135, 0.7357104), (0.06825113, 0.56, 0.71928215), (0.16541818, 0.7945822, 0.71928215), (0.40000036, 0.89174926, 0.71928215), (0.6345825, 0.7945822, 0.71928215), (0.73174953, 0.56, 0.71928215), (0.6345825, 0.32541782, 0.71928215), (0.40000036, 0.22825074, 0.71928215), (0.16541818, 0.32541782, 0.71928215), (0.12162003, 0.56, 0.71928215), (0.20315573, 0.75684464, 0.71928215), (0.40000036, 0.8383803, 0.71928215), (0.59684503, 0.75684464, 0.71928215), (0.6783807, 0.56, 0.71928215), (0.59684503, 0.36315536, 0.71928215), (0.40000036, 0.28161967, 0.71928215), (0.20315573, 0.36315536, 0.71928215), (0.14027908, 0.56, 0.7018189), (0.21634963, 0.3763493, 0.7018189), (0.40000036, 0.3002787, 0.7018189), (0.58365107, 0.3763493, 0.7018189), (0.6597216, 0.56, 0.7018189), (0.58365107, 0.7436507, 0.7018189), (0.40000036, 0.8197212, 0.7018189), (0.21634969, 0.7436507, 0.7018189), (0.14027908, 0.56, 0.09480155), (0.21634963, 0.3763493, 0.09480155), (0.40000036, 0.3002787, 0.09480155), (0.58365107, 0.3763493, 0.09480155), (0.6597216, 0.56, 0.09480155), (0.58365107, 0.7436507, 0.09480155), (0.40000036, 0.8197212, 0.09480155), (0.21634969, 0.7436507, 0.09480155), (0.12472913, 0.56, 0.080946445), (0.20535418, 0.36535382, 0.080946445), (0.40000036, 0.28472877, 0.080946445), (0.5946466, 0.36535382, 0.080946445), (0.6752715, 0.56, 0.080946445), (0.5946466, 0.7546462, 0.080946445), (0.40000036, 0.8352712, 0.080946445), (0.20535418, 0.7546462, 0.080946445), (0.066925496, 0.56, 0.080946445), (0.16448078, 0.32448047, 0.080946445), (0.40000036, 0.22692513, 0.080946445), (0.63552, 0.32448047, 0.080946445), (0.7330754, 0.56, 0.080946445), (0.63552, 0.7955195, 0.080946445), (0.40000036, 0.89307487, 0.080946445), (0.16448084, 0.7955195, 0.080946445), (0.04783103, 0.56, 0.067775615), (0.15097901, 0.31097865, 0.067775615), (0.40000036, 0.20783067, 0.067775615), (0.6490216, 0.31097865, 0.067775615), (0.7521696, 0.56, 0.067775615), (0.6490216, 0.80902135, 0.067775615), (0.40000036, 0.91216934, 0.067775615), (0.15097901, 0.80902135, 0.067775615), (0.04783103, 0.56, 0.012504618), (0.15097901, 0.31097865, 0.012504618), (0.40000036, 0.20783067, 0.012504618), (0.6490216, 0.31097865, 0.012504618), (0.7521696, 0.56, 0.012504618), (0.6490216, 0.80902135, 0.012504618), (0.40000036, 0.91216934, 0.012504618), (0.15097901, 0.80902135, 0.012504618)]
                            float3 xformOp:translate:pivot = (0.39997908, 0.5608765, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_with_1_side_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x1_with_1_side_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.4797606)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_with_2_side_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x1_with_2_side_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.4797606)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_with_2_opposite_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x1_with_2_opposite_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.47976053, 0.56041497, 0.4)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x1_with_clip_highlight_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x1_with_clip_highlight_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.40000004, 0.56041497, 0.4000003)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x2_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.24041496, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x2_with_hole_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x2_with_hole_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x2_with_holes_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x2_with_holes_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x2_with_axle_hole_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x2_with_axle_hole_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x2_with_1_side_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x2_with_1_side_studs_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x4_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x4_with_1_side_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x4_with_1_side_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.6000152, 0.56041497, 0.4797606)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_1x6_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_1x6_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_2x2_corner_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_2x2_corner_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 0.24041496, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_2x2_round_grp"
                    {
                        def Mesh "Wall_e_RIG_v001_brick_2x2_round_001_mesh" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform bool doubleSided = 1
                            float3[] extent = [(0.0068445206, 0, 0.00684458), (1.5931566, 1.1208299, 1.5931566)]
                            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                            int[] faceVertexIndices = [0, 1, 28, 29, 1, 2, 27, 28, 2, 3, 26, 27, 3, 4, 25, 26, 4, 5, 32, 25, 5, 6, 31, 32, 6, 7, 30, 31, 7, 0, 29, 30, 8, 9, 17, 16, 9, 10, 18, 17, 10, 11, 19, 18, 11, 12, 20, 19, 12, 13, 21, 20, 13, 14, 22, 21, 14, 15, 23, 22, 15, 8, 16, 23, 24, 17, 18, 19, 24, 19, 20, 21, 24, 21, 22, 23, 24, 23, 16, 17, 26, 25, 12, 11, 27, 26, 11, 10, 28, 27, 10, 9, 29, 28, 9, 8, 30, 29, 8, 15, 31, 30, 15, 14, 32, 31, 14, 13, 25, 32, 13, 12, 33, 34, 61, 62, 34, 35, 60, 61, 35, 36, 59, 60, 36, 37, 58, 59, 37, 38, 65, 58, 38, 39, 64, 65, 39, 40, 63, 64, 40, 33, 62, 63, 41, 42, 50, 49, 42, 43, 51, 50, 43, 44, 52, 51, 44, 45, 53, 52, 45, 46, 54, 53, 46, 47, 55, 54, 47, 48, 56, 55, 48, 41, 49, 56, 57, 50, 51, 52, 57, 52, 53, 54, 57, 54, 55, 56, 57, 56, 49, 50, 59, 58, 45, 44, 60, 59, 44, 43, 61, 60, 43, 42, 62, 61, 42, 41, 63, 62, 41, 48, 64, 63, 48, 47, 65, 64, 47, 46, 58, 65, 46, 45, 66, 67, 94, 95, 67, 68, 93, 94, 68, 69, 92, 93, 69, 70, 91, 92, 70, 71, 98, 91, 71, 72, 97, 98, 72, 73, 96, 97, 73, 66, 95, 96, 74, 75, 83, 82, 75, 76, 84, 83, 76, 77, 85, 84, 77, 78, 86, 85, 78, 79, 87, 86, 79, 80, 88, 87, 80, 81, 89, 88, 81, 74, 82, 89, 90, 83, 84, 85, 90, 85, 86, 87, 90, 87, 88, 89, 90, 89, 82, 83, 92, 91, 78, 77, 93, 92, 77, 76, 94, 93, 76, 75, 95, 94, 75, 74, 96, 95, 74, 81, 97, 96, 81, 80, 98, 97, 80, 79, 91, 98, 79, 78, 99, 100, 127, 128, 100, 101, 126, 127, 101, 102, 125, 126, 102, 103, 124, 125, 103, 104, 131, 124, 104, 105, 130, 131, 105, 106, 129, 130, 106, 99, 128, 129, 107, 108, 116, 115, 108, 109, 117, 116, 109, 110, 118, 117, 110, 111, 119, 118, 111, 112, 120, 119, 112, 113, 121, 120, 113, 114, 122, 121, 114, 107, 115, 122, 123, 116, 117, 118, 123, 118, 119, 120, 123, 120, 121, 122, 123, 122, 115, 116, 125, 124, 111, 110, 126, 125, 110, 109, 127, 126, 109, 108, 128, 127, 108, 107, 129, 128, 107, 114, 130, 129, 114, 113, 131, 130, 113, 112, 124, 131, 112, 111, 132, 133, 210, 211, 133, 134, 209, 210, 134, 135, 208, 209, 135, 136, 207, 208, 136, 137, 213, 207, 137, 138, 212, 213, 139, 140, 147, 146, 140, 141, 148, 147, 141, 142, 149, 148, 142, 143, 150, 149, 143, 144, 151, 150, 144, 145, 152, 151, 148, 153, 146, 147, 150, 153, 148, 149, 152, 153, 150, 151, 155, 154, 145, 144, 156, 155, 144, 143, 157, 156, 143, 142, 158, 157, 142, 141, 159, 158, 141, 140, 160, 159, 140, 139, 133, 132, 216, 217, 134, 133, 217, 218, 135, 134, 218, 219, 136, 135, 219, 220, 138, 137, 214, 215, 162, 161, 168, 169, 163, 162, 169, 170, 164, 163, 170, 171, 165, 164, 171, 191, 167, 166, 193, 172, 169, 168, 248, 249, 170, 169, 249, 250, 171, 170, 250, 251, 252, 191, 171, 251, 172, 193, 246, 247, 174, 173, 178, 179, 175, 174, 179, 180, 176, 175, 180, 181, 176, 192, 287, 190, 177, 194, 274, 195, 225, 226, 183, 184, 224, 225, 184, 185, 223, 224, 185, 186, 734, 733, 735, 736, 737, 734, 736, 738, 739, 737, 738, 740, 741, 739, 740, 742, 743, 741, 742, 744, 745, 743, 744, 746, 181, 288, 192, 176, 177, 195, 295, 182, 253, 290, 291, 197, 285, 253, 197, 284, 259, 276, 277, 198, 258, 297, 298, 199, 254, 255, 200, 196, 255, 256, 201, 200, 256, 257, 202, 201, 220, 221, 203, 136, 229, 214, 137, 204, 222, 293, 294, 205, 282, 222, 205, 281, 228, 279, 280, 206, 227, 300, 301, 189, 137, 136, 187, 188, 136, 203, 187, 204, 137, 188, 205, 294, 186, 187, 203, 281, 205, 187, 206, 280, 204, 188, 189, 301, 206, 188, 208, 207, 156, 157, 209, 208, 157, 158, 210, 209, 158, 159, 211, 210, 159, 160, 213, 212, 154, 155, 207, 213, 155, 156, 215, 214, 230, 231, 217, 216, 232, 233, 218, 217, 233, 234, 219, 218, 234, 235, 220, 219, 235, 236, 236, 237, 221, 220, 283, 238, 222, 282, 238, 292, 293, 222, 239, 240, 224, 223, 240, 241, 225, 224, 241, 242, 226, 225, 243, 299, 300, 227, 244, 278, 279, 228, 245, 230, 214, 229, 231, 230, 166, 167, 233, 232, 161, 162, 234, 233, 162, 163, 235, 234, 163, 164, 236, 235, 164, 165, 165, 191, 237, 236, 284, 197, 238, 283, 197, 291, 292, 238, 196, 200, 240, 239, 200, 201, 241, 240, 201, 202, 242, 241, 199, 298, 299, 243, 198, 277, 278, 244, 193, 166, 230, 245, 247, 246, 260, 261, 249, 248, 262, 263, 250, 249, 263, 264, 251, 250, 264, 265, 266, 252, 251, 265, 286, 267, 253, 285, 267, 289, 290, 253, 268, 269, 255, 254, 269, 270, 256, 255, 270, 271, 257, 256, 272, 296, 297, 258, 273, 275, 276, 259, 261, 260, 194, 177, 263, 262, 173, 174, 264, 263, 174, 175, 265, 264, 175, 176, 190, 266, 265, 176, 287, 192, 267, 286, 192, 288, 289, 267, 181, 180, 269, 268, 180, 179, 270, 269, 179, 178, 271, 270, 182, 295, 296, 272, 195, 274, 275, 273, 274, 194, 260, 275, 276, 275, 260, 246, 277, 276, 246, 193, 278, 277, 193, 245, 279, 278, 245, 229, 280, 279, 229, 204, 221, 282, 281, 203, 237, 283, 282, 221, 191, 284, 283, 237, 252, 285, 284, 191, 266, 286, 285, 252, 190, 287, 286, 266, 288, 181, 268, 289, 290, 289, 268, 254, 291, 290, 254, 196, 292, 291, 196, 239, 293, 292, 239, 223, 294, 293, 223, 186, 295, 195, 273, 296, 297, 296, 273, 259, 298, 297, 259, 198, 299, 298, 198, 244, 300, 299, 244, 228, 301, 300, 228, 206, 302, 303, 379, 380, 303, 304, 378, 379, 304, 305, 377, 378, 305, 306, 376, 377, 306, 307, 382, 376, 307, 308, 381, 382, 309, 310, 317, 316, 310, 311, 318, 317, 311, 312, 319, 318, 312, 313, 320, 319, 313, 314, 321, 320, 314, 315, 322, 321, 318, 153, 316, 317, 320, 153, 318, 319, 322, 153, 320, 321, 324, 323, 315, 314, 325, 324, 314, 313, 326, 325, 313, 312, 327, 326, 312, 311, 328, 327, 311, 310, 329, 328, 310, 309, 303, 302, 385, 386, 304, 303, 386, 387, 305, 304, 387, 388, 306, 305, 388, 389, 308, 307, 383, 384, 331, 330, 337, 338, 332, 331, 338, 339, 333, 332, 339, 340, 334, 333, 340, 360, 336, 335, 362, 341, 338, 337, 417, 418, 339, 338, 418, 419, 340, 339, 419, 420, 421, 360, 340, 420, 341, 362, 415, 416, 343, 342, 347, 348, 344, 343, 348, 349, 345, 344, 349, 350, 345, 361, 456, 359, 346, 363, 443, 364, 394, 395, 352, 353, 393, 394, 353, 354, 392, 393, 354, 355, 748, 747, 749, 750, 751, 748, 750, 752, 753, 751, 752, 754, 755, 753, 754, 756, 757, 755, 756, 758, 759, 757, 758, 760, 350, 457, 361, 345, 346, 364, 464, 351, 422, 459, 460, 366, 454, 422, 366, 453, 428, 445, 446, 367, 427, 466, 467, 368, 423, 424, 369, 365, 424, 425, 370, 369, 425, 426, 371, 370, 389, 390, 372, 306, 398, 383, 307, 373, 391, 462, 463, 374, 451, 391, 374, 450, 397, 448, 449, 375, 396, 469, 470, 358, 307, 306, 356, 357, 306, 372, 356, 373, 307, 357, 374, 463, 355, 356, 372, 450, 374, 356, 375, 449, 373, 357, 358, 470, 375, 357, 377, 376, 325, 326, 378, 377, 326, 327, 379, 378, 327, 328, 380, 379, 328, 329, 382, 381, 323, 324, 376, 382, 324, 325, 384, 383, 399, 400, 386, 385, 401, 402, 387, 386, 402, 403, 388, 387, 403, 404, 389, 388, 404, 405, 405, 406, 390, 389, 452, 407, 391, 451, 407, 461, 462, 391, 408, 409, 393, 392, 409, 410, 394, 393, 410, 411, 395, 394, 412, 468, 469, 396, 413, 447, 448, 397, 414, 399, 383, 398, 400, 399, 335, 336, 402, 401, 330, 331, 403, 402, 331, 332, 404, 403, 332, 333, 405, 404, 333, 334, 334, 360, 406, 405, 453, 366, 407, 452, 366, 460, 461, 407, 365, 369, 409, 408, 369, 370, 410, 409, 370, 371, 411, 410, 368, 467, 468, 412, 367, 446, 447, 413, 362, 335, 399, 414, 416, 415, 429, 430, 418, 417, 431, 432, 419, 418, 432, 433, 420, 419, 433, 434, 435, 421, 420, 434, 455, 436, 422, 454, 436, 458, 459, 422, 437, 438, 424, 423, 438, 439, 425, 424, 439, 440, 426, 425, 441, 465, 466, 427, 442, 444, 445, 428, 430, 429, 363, 346, 432, 431, 342, 343, 433, 432, 343, 344, 434, 433, 344, 345, 359, 435, 434, 345, 456, 361, 436, 455, 361, 457, 458, 436, 350, 349, 438, 437, 349, 348, 439, 438, 348, 347, 440, 439, 351, 464, 465, 441, 364, 443, 444, 442, 443, 363, 429, 444, 445, 444, 429, 415, 446, 445, 415, 362, 447, 446, 362, 414, 448, 447, 414, 398, 449, 448, 398, 373, 390, 451, 450, 372, 406, 452, 451, 390, 360, 453, 452, 406, 421, 454, 453, 360, 435, 455, 454, 421, 359, 456, 455, 435, 457, 350, 437, 458, 459, 458, 437, 423, 460, 459, 423, 365, 461, 460, 365, 408, 462, 461, 408, 392, 463, 462, 392, 355, 464, 364, 442, 465, 466, 465, 442, 428, 467, 466, 428, 367, 468, 467, 367, 413, 469, 468, 413, 397, 470, 469, 397, 375, 138, 471, 528, 212, 471, 472, 527, 528, 472, 473, 526, 527, 473, 474, 525, 526, 474, 475, 529, 525, 475, 302, 380, 529, 145, 476, 481, 152, 476, 477, 482, 481, 477, 478, 483, 482, 478, 479, 484, 483, 479, 480, 485, 484, 480, 309, 316, 485, 482, 153, 152, 481, 484, 153, 482, 483, 316, 153, 484, 485, 486, 329, 309, 480, 487, 486, 480, 479, 488, 487, 479, 478, 489, 488, 478, 477, 490, 489, 477, 476, 154, 490, 476, 145, 471, 138, 215, 531, 472, 471, 531, 532, 473, 472, 532, 533, 474, 473, 533, 534, 302, 475, 530, 385, 491, 167, 172, 496, 492, 491, 496, 497, 493, 492, 497, 498, 494, 493, 498, 511, 330, 495, 513, 337, 496, 172, 247, 555, 497, 496, 555, 556, 498, 497, 556, 557, 558, 511, 498, 557, 337, 513, 554, 417, 499, 177, 182, 502, 500, 499, 502, 503, 501, 500, 503, 504, 501, 512, 587, 510, 342, 514, 574, 515, 539, 227, 189, 505, 538, 539, 505, 506, 537, 538, 506, 507, 761, 745, 746, 762, 763, 761, 762, 764, 765, 763, 764, 766, 767, 765, 766, 768, 769, 767, 768, 770, 747, 769, 770, 749, 504, 588, 512, 501, 342, 515, 595, 347, 559, 590, 591, 517, 585, 559, 517, 584, 563, 576, 577, 518, 426, 597, 598, 371, 560, 561, 519, 516, 561, 562, 520, 519, 562, 258, 199, 520, 534, 535, 521, 474, 541, 530, 475, 522, 536, 593, 594, 523, 582, 536, 523, 581, 540, 579, 580, 524, 395, 600, 601, 352, 475, 474, 508, 509, 474, 521, 508, 522, 475, 509, 523, 594, 507, 508, 521, 581, 523, 508, 524, 580, 522, 509, 352, 601, 524, 509, 526, 525, 487, 488, 527, 526, 488, 489, 528, 527, 489, 490, 212, 528, 490, 154, 529, 380, 329, 486, 525, 529, 486, 487, 385, 530, 542, 401, 531, 215, 231, 543, 532, 531, 543, 544, 533, 532, 544, 545, 534, 533, 545, 546, 546, 547, 535, 534, 583, 548, 536, 582, 548, 592, 593, 536, 549, 550, 538, 537, 550, 551, 539, 538, 551, 243, 227, 539, 411, 599, 600, 395, 552, 578, 579, 540, 553, 542, 530, 541, 401, 542, 495, 330, 543, 231, 167, 491, 544, 543, 491, 492, 545, 544, 492, 493, 546, 545, 493, 494, 494, 511, 547, 546, 584, 517, 548, 583, 517, 591, 592, 548, 516, 519, 550, 549, 519, 520, 551, 550, 520, 199, 243, 551, 371, 598, 599, 411, 518, 577, 578, 552, 513, 495, 542, 553, 417, 554, 564, 431, 555, 247, 261, 565, 556, 555, 565, 566, 557, 556, 566, 567, 568, 558, 557, 567, 586, 569, 559, 585, 569, 589, 590, 559, 570, 571, 561, 560, 571, 572, 562, 561, 572, 272, 258, 562, 440, 596, 597, 426, 573, 575, 576, 563, 431, 564, 514, 342, 565, 261, 177, 499, 566, 565, 499, 500, 567, 566, 500, 501, 510, 568, 567, 501, 587, 512, 569, 586, 512, 588, 589, 569, 504, 503, 571, 570, 503, 502, 572, 571, 502, 182, 272, 572, 347, 595, 596, 440, 515, 574, 575, 573, 574, 514, 564, 575, 576, 575, 564, 554, 577, 576, 554, 513, 578, 577, 513, 553, 579, 578, 553, 541, 580, 579, 541, 522, 535, 582, 581, 521, 547, 583, 582, 535, 511, 584, 583, 547, 558, 585, 584, 511, 568, 586, 585, 558, 510, 587, 586, 568, 588, 504, 570, 589, 590, 589, 570, 560, 591, 590, 560, 516, 592, 591, 516, 549, 593, 592, 549, 537, 594, 593, 537, 507, 595, 515, 573, 596, 597, 596, 573, 563, 598, 597, 563, 518, 599, 598, 518, 552, 600, 599, 552, 540, 601, 600, 540, 524, 308, 602, 659, 381, 602, 603, 658, 659, 603, 604, 657, 658, 604, 605, 656, 657, 605, 606, 660, 656, 606, 132, 211, 660, 315, 607, 612, 322, 607, 608, 613, 612, 608, 609, 614, 613, 609, 610, 615, 614, 610, 611, 616, 615, 611, 139, 146, 616, 613, 153, 322, 612, 615, 153, 613, 614, 146, 153, 615, 616, 617, 160, 139, 611, 618, 617, 611, 610, 619, 618, 610, 609, 620, 619, 609, 608, 621, 620, 608, 607, 323, 621, 607, 315, 602, 308, 384, 662, 603, 602, 662, 663, 604, 603, 663, 664, 605, 604, 664, 665, 132, 606, 661, 216, 622, 336, 341, 627, 623, 622, 627, 628, 624, 623, 628, 629, 625, 624, 629, 642, 161, 626, 644, 168, 627, 341, 416, 686, 628, 627, 686, 687, 629, 628, 687, 688, 689, 642, 629, 688, 168, 644, 685, 248, 630, 346, 351, 633, 631, 630, 633, 634, 632, 631, 634, 635, 632, 643, 718, 641, 173, 645, 705, 646, 670, 396, 358, 636, 669, 670, 636, 637, 668, 669, 637, 638, 771, 759, 760, 772, 773, 771, 772, 774, 775, 773, 774, 776, 777, 775, 776, 778, 779, 777, 778, 780, 733, 779, 780, 735, 635, 719, 643, 632, 173, 646, 726, 178, 690, 721, 722, 648, 716, 690, 648, 715, 694, 707, 708, 649, 257, 728, 729, 202, 691, 692, 650, 647, 692, 693, 651, 650, 693, 427, 368, 651, 665, 666, 652, 605, 672, 661, 606, 653, 667, 724, 725, 654, 713, 667, 654, 712, 671, 710, 711, 655, 226, 731, 732, 183, 606, 605, 639, 640, 605, 652, 639, 653, 606, 640, 654, 725, 638, 639, 652, 712, 654, 639, 655, 711, 653, 640, 183, 732, 655, 640, 657, 656, 618, 619, 658, 657, 619, 620, 659, 658, 620, 621, 381, 659, 621, 323, 660, 211, 160, 617, 656, 660, 617, 618, 216, 661, 673, 232, 662, 384, 400, 674, 663, 662, 674, 675, 664, 663, 675, 676, 665, 664, 676, 677, 677, 678, 666, 665, 714, 679, 667, 713, 679, 723, 724, 667, 680, 681, 669, 668, 681, 682, 670, 669, 682, 412, 396, 670, 242, 730, 731, 226, 683, 709, 710, 671, 684, 673, 661, 672, 232, 673, 626, 161, 674, 400, 336, 622, 675, 674, 622, 623, 676, 675, 623, 624, 677, 676, 624, 625, 625, 642, 678, 677, 715, 648, 679, 714, 648, 722, 723, 679, 647, 650, 681, 680, 650, 651, 682, 681, 651, 368, 412, 682, 202, 729, 730, 242, 649, 708, 709, 683, 644, 626, 673, 684, 248, 685, 695, 262, 686, 416, 430, 696, 687, 686, 696, 697, 688, 687, 697, 698, 699, 689, 688, 698, 717, 700, 690, 716, 700, 720, 721, 690, 701, 702, 692, 691, 702, 703, 693, 692, 703, 441, 427, 693, 271, 727, 728, 257, 704, 706, 707, 694, 262, 695, 645, 173, 696, 430, 346, 630, 697, 696, 630, 631, 698, 697, 631, 632, 641, 699, 698, 632, 718, 643, 700, 717, 643, 719, 720, 700, 635, 634, 702, 701, 634, 633, 703, 702, 633, 351, 441, 703, 178, 726, 727, 271, 646, 705, 706, 704, 705, 645, 695, 706, 707, 706, 695, 685, 708, 707, 685, 644, 709, 708, 644, 684, 710, 709, 684, 672, 711, 710, 672, 653, 666, 713, 712, 652, 678, 714, 713, 666, 642, 715, 714, 678, 689, 716, 715, 642, 699, 717, 716, 689, 641, 718, 717, 699, 719, 635, 701, 720, 721, 720, 701, 691, 722, 721, 691, 647, 723, 722, 647, 680, 724, 723, 680, 668, 725, 724, 668, 638, 726, 646, 704, 727, 728, 727, 704, 694, 729, 728, 694, 649, 730, 729, 649, 683, 731, 730, 683, 671, 732, 731, 671, 655, 184, 183, 796, 797, 185, 184, 797, 798, 186, 185, 798, 799, 187, 186, 799, 800, 188, 187, 800, 801, 189, 188, 801, 802, 353, 352, 784, 785, 354, 353, 785, 786, 355, 354, 786, 787, 356, 355, 787, 788, 357, 356, 788, 789, 358, 357, 789, 790, 505, 189, 802, 803, 506, 505, 803, 804, 507, 506, 804, 781, 508, 507, 781, 782, 509, 508, 782, 783, 352, 509, 783, 784, 636, 358, 790, 791, 637, 636, 791, 792, 638, 637, 792, 793, 639, 638, 793, 794, 640, 639, 794, 795, 183, 640, 795, 796, 782, 781, 809, 810, 783, 782, 810, 811, 784, 783, 811, 812, 785, 784, 812, 813, 786, 785, 813, 814, 787, 786, 814, 815, 788, 787, 815, 816, 789, 788, 816, 817, 790, 789, 817, 818, 791, 790, 818, 819, 792, 791, 819, 820, 793, 792, 820, 821, 794, 793, 821, 822, 795, 794, 822, 823, 796, 795, 823, 824, 797, 796, 824, 825, 798, 797, 825, 826, 799, 798, 826, 827, 800, 799, 827, 828, 801, 800, 828, 805, 802, 801, 805, 806, 803, 802, 806, 807, 804, 803, 807, 808, 781, 804, 808, 809, 806, 805, 743, 745, 807, 806, 745, 761, 808, 807, 761, 763, 809, 808, 763, 765, 810, 809, 765, 767, 811, 810, 767, 769, 812, 811, 769, 747, 813, 812, 747, 748, 814, 813, 748, 751, 815, 814, 751, 753, 816, 815, 753, 755, 817, 816, 755, 757, 818, 817, 757, 759, 819, 818, 759, 771, 820, 819, 771, 773, 821, 820, 773, 775, 822, 821, 775, 777, 823, 822, 777, 779, 824, 823, 779, 733, 825, 824, 733, 734, 826, 825, 734, 737, 827, 826, 737, 739, 828, 827, 739, 741, 805, 828, 741, 743, 736, 735, 968, 969, 738, 736, 969, 970, 740, 738, 970, 971, 742, 740, 971, 972, 744, 742, 972, 973, 746, 744, 973, 950, 750, 749, 956, 957, 752, 750, 957, 958, 754, 752, 958, 959, 756, 754, 959, 960, 758, 756, 960, 961, 760, 758, 961, 962, 762, 746, 950, 951, 764, 762, 951, 952, 766, 764, 952, 953, 768, 766, 953, 954, 770, 768, 954, 955, 749, 770, 955, 956, 772, 760, 962, 963, 774, 772, 963, 964, 776, 774, 964, 965, 778, 776, 965, 966, 780, 778, 966, 967, 735, 780, 967, 968, 830, 829, 992, 993, 831, 830, 993, 994, 832, 831, 994, 995, 833, 832, 995, 996, 834, 833, 996, 997, 835, 834, 997, 974, 837, 836, 980, 981, 838, 837, 981, 982, 839, 838, 982, 983, 840, 839, 983, 984, 841, 840, 984, 985, 842, 841, 985, 986, 843, 835, 974, 975, 844, 843, 975, 976, 845, 844, 976, 977, 846, 845, 977, 978, 847, 846, 978, 979, 836, 847, 979, 980, 848, 842, 986, 987, 849, 848, 987, 988, 850, 849, 988, 989, 851, 850, 989, 990, 852, 851, 990, 991, 829, 852, 991, 992, 854, 853, 1040, 1041, 855, 854, 1041, 1042, 856, 855, 1042, 1043, 857, 856, 1043, 1044, 858, 857, 1044, 1045, 859, 858, 1045, 1022, 861, 860, 1028, 1029, 862, 861, 1029, 1030, 863, 862, 1030, 1031, 864, 863, 1031, 1032, 865, 864, 1032, 1033, 866, 865, 1033, 1034, 867, 859, 1022, 1023, 868, 867, 1023, 1024, 869, 868, 1024, 1025, 870, 869, 1025, 1026, 871, 870, 1026, 1027, 860, 871, 1027, 1028, 872, 866, 1034, 1035, 873, 872, 1035, 1036, 874, 873, 1036, 1037, 875, 874, 1037, 1038, 876, 875, 1038, 1039, 853, 876, 1039, 1040, 878, 877, 1087, 1088, 879, 878, 1088, 1089, 880, 879, 1089, 1090, 881, 880, 1090, 1091, 882, 881, 1091, 1092, 883, 882, 1092, 1093, 885, 884, 1075, 1076, 886, 885, 1076, 1077, 887, 886, 1077, 1078, 888, 887, 1078, 1079, 889, 888, 1079, 1080, 890, 889, 1080, 1081, 891, 883, 1093, 1070, 892, 891, 1070, 1071, 893, 892, 1071, 1072, 894, 893, 1072, 1073, 895, 894, 1073, 1074, 884, 895, 1074, 1075, 896, 890, 1081, 1082, 897, 896, 1082, 1083, 898, 897, 1083, 1084, 899, 898, 1084, 1085, 900, 899, 1085, 1086, 877, 900, 1086, 1087, 902, 901, 925, 926, 903, 902, 926, 927, 904, 903, 927, 928, 905, 904, 928, 929, 906, 905, 929, 930, 907, 906, 930, 931, 909, 908, 932, 933, 910, 909, 933, 934, 911, 910, 934, 935, 912, 911, 935, 936, 913, 912, 936, 937, 914, 913, 937, 938, 915, 907, 931, 939, 916, 915, 939, 940, 917, 916, 940, 941, 918, 917, 941, 942, 919, 918, 942, 943, 908, 919, 943, 932, 920, 914, 938, 944, 921, 920, 944, 945, 922, 921, 945, 946, 923, 922, 946, 947, 924, 923, 947, 948, 901, 924, 948, 925, 949, 927, 926, 925, 949, 929, 928, 927, 949, 931, 930, 929, 949, 934, 933, 932, 949, 936, 935, 934, 949, 938, 937, 936, 949, 940, 939, 931, 949, 942, 941, 940, 949, 932, 943, 942, 949, 945, 944, 938, 949, 947, 946, 945, 949, 925, 948, 947, 951, 950, 835, 843, 952, 951, 843, 844, 953, 952, 844, 845, 954, 953, 845, 846, 955, 954, 846, 847, 956, 955, 847, 836, 957, 956, 836, 837, 958, 957, 837, 838, 959, 958, 838, 839, 960, 959, 839, 840, 961, 960, 840, 841, 962, 961, 841, 842, 963, 962, 842, 848, 964, 963, 848, 849, 965, 964, 849, 850, 966, 965, 850, 851, 967, 966, 851, 852, 968, 967, 852, 829, 969, 968, 829, 830, 970, 969, 830, 831, 971, 970, 831, 832, 972, 971, 832, 833, 973, 972, 833, 834, 950, 973, 834, 835, 975, 974, 998, 999, 976, 975, 999, 1000, 977, 976, 1000, 1001, 978, 977, 1001, 1002, 979, 978, 1002, 1003, 980, 979, 1003, 1004, 981, 980, 1004, 1005, 982, 981, 1005, 1006, 983, 982, 1006, 1007, 984, 983, 1007, 1008, 985, 984, 1008, 1009, 986, 985, 1009, 1010, 987, 986, 1010, 1011, 988, 987, 1011, 1012, 989, 988, 1012, 1013, 990, 989, 1013, 1014, 991, 990, 1014, 1015, 992, 991, 1015, 1016, 993, 992, 1016, 1017, 994, 993, 1017, 1018, 995, 994, 1018, 1019, 996, 995, 1019, 1020, 997, 996, 1020, 1021, 974, 997, 1021, 998, 999, 998, 859, 867, 1000, 999, 867, 868, 1001, 1000, 868, 869, 1002, 1001, 869, 870, 1003, 1002, 870, 871, 1004, 1003, 871, 860, 1005, 1004, 860, 861, 1006, 1005, 861, 862, 1007, 1006, 862, 863, 1008, 1007, 863, 864, 1009, 1008, 864, 865, 1010, 1009, 865, 866, 1011, 1010, 866, 872, 1012, 1011, 872, 873, 1013, 1012, 873, 874, 1014, 1013, 874, 875, 1015, 1014, 875, 876, 1016, 1015, 876, 853, 1017, 1016, 853, 854, 1018, 1017, 854, 855, 1019, 1018, 855, 856, 1020, 1019, 856, 857, 1021, 1020, 857, 858, 998, 1021, 858, 859, 1023, 1022, 1069, 1046, 1024, 1023, 1046, 1047, 1025, 1024, 1047, 1048, 1026, 1025, 1048, 1049, 1027, 1026, 1049, 1050, 1028, 1027, 1050, 1051, 1029, 1028, 1051, 1052, 1030, 1029, 1052, 1053, 1031, 1030, 1053, 1054, 1032, 1031, 1054, 1055, 1033, 1032, 1055, 1056, 1034, 1033, 1056, 1057, 1035, 1034, 1057, 1058, 1036, 1035, 1058, 1059, 1037, 1036, 1059, 1060, 1038, 1037, 1060, 1061, 1039, 1038, 1061, 1062, 1040, 1039, 1062, 1063, 1041, 1040, 1063, 1064, 1042, 1041, 1064, 1065, 1043, 1042, 1065, 1066, 1044, 1043, 1066, 1067, 1045, 1044, 1067, 1068, 1022, 1045, 1068, 1069, 1047, 1046, 891, 892, 1048, 1047, 892, 893, 1049, 1048, 893, 894, 1050, 1049, 894, 895, 1051, 1050, 895, 884, 1052, 1051, 884, 885, 1053, 1052, 885, 886, 1054, 1053, 886, 887, 1055, 1054, 887, 888, 1056, 1055, 888, 889, 1057, 1056, 889, 890, 1058, 1057, 890, 896, 1059, 1058, 896, 897, 1060, 1059, 897, 898, 1061, 1060, 898, 899, 1062, 1061, 899, 900, 1063, 1062, 900, 877, 1064, 1063, 877, 878, 1065, 1064, 878, 879, 1066, 1065, 879, 880, 1067, 1066, 880, 881, 1068, 1067, 881, 882, 1069, 1068, 882, 883, 1046, 1069, 883, 891, 1071, 1070, 1116, 1117, 1072, 1071, 1117, 1094, 1073, 1072, 1094, 1095, 1074, 1073, 1095, 1096, 1075, 1074, 1096, 1097, 1076, 1075, 1097, 1098, 1077, 1076, 1098, 1099, 1078, 1077, 1099, 1100, 1079, 1078, 1100, 1101, 1080, 1079, 1101, 1102, 1081, 1080, 1102, 1103, 1082, 1081, 1103, 1104, 1083, 1082, 1104, 1105, 1084, 1083, 1105, 1106, 1085, 1084, 1106, 1107, 1086, 1085, 1107, 1108, 1087, 1086, 1108, 1109, 1088, 1087, 1109, 1110, 1089, 1088, 1110, 1111, 1090, 1089, 1111, 1112, 1091, 1090, 1112, 1113, 1092, 1091, 1113, 1114, 1093, 1092, 1114, 1115, 1070, 1093, 1115, 1116, 1095, 1094, 917, 918, 1096, 1095, 918, 919, 1097, 1096, 919, 908, 1098, 1097, 908, 909, 1099, 1098, 909, 910, 1100, 1099, 910, 911, 1101, 1100, 911, 912, 1102, 1101, 912, 913, 1103, 1102, 913, 914, 1104, 1103, 914, 920, 1105, 1104, 920, 921, 1106, 1105, 921, 922, 1107, 1106, 922, 923, 1108, 1107, 923, 924, 1109, 1108, 924, 901, 1110, 1109, 901, 902, 1111, 1110, 902, 903, 1112, 1111, 903, 904, 1113, 1112, 904, 905, 1114, 1113, 905, 906, 1115, 1114, 906, 907, 1116, 1115, 907, 915, 1117, 1116, 915, 916, 1094, 1117, 916, 917]
                            rel material:binding = </Cache1/mtl/initialShadingGroup>
                            point3f[] points = [(0.5876447, 0.96000016, 0.2123553), (0.4, 0.96000016, 0.13463032), (0.2361696, 0.96000016, 0.2361696), (0.13463032, 0.96000016, 0.4), (0.2123553, 0.96000016, 0.5876447), (0.4, 0.96000016, 0.6653697), (0.5876447, 0.96000016, 0.5876447), (0.66536975, 0.96000016, 0.4), (0.5876447, 1.1208299, 0.2123553), (0.4, 1.1208299, 0.13463032), (0.2361696, 1.1208299, 0.2361696), (0.13463032, 1.1208299, 0.4), (0.2123553, 1.1208299, 0.5876447), (0.4, 1.1208299, 0.6653697), (0.5876447, 1.1208299, 0.5876447), (0.66536975, 1.1208299, 0.4), (0.5679039, 1.1208299, 0.23209617), (0.4, 1.1208299, 0.16254812), (0.25511047, 1.1208299, 0.25511047), (0.16254814, 1.1208299, 0.4), (0.23209617, 1.1208299, 0.5679038), (0.4, 1.1208299, 0.6374518), (0.5679039, 1.1208299, 0.5679038), (0.63745195, 1.1208299, 0.4), (0.40000004, 1.1208299, 0.4), (0.2123553, 1.1042254, 0.5876447), (0.13463032, 1.1042254, 0.4), (0.2361696, 1.1042254, 0.2361696), (0.4, 1.1042254, 0.13463032), (0.5876447, 1.1042254, 0.2123553), (0.66536975, 1.1042254, 0.4), (0.5876447, 1.1042254, 0.5876447), (0.4, 1.1042254, 0.6653697), (1.3876458, 0.96000016, 0.5876448), (1.4653708, 0.96000016, 0.40000013), (1.3638315, 0.96000016, 0.23616973), (1.2000011, 0.96000016, 0.13463044), (1.0123564, 0.96000016, 0.21235542), (0.9346314, 0.96000016, 0.40000013), (1.0123564, 0.96000016, 0.5876448), (1.2000011, 0.96000016, 0.66536987), (1.3876458, 1.1208299, 0.5876448), (1.4653708, 1.1208299, 0.40000013), (1.3638315, 1.1208299, 0.23616973), (1.2000011, 1.1208299, 0.13463044), (1.0123564, 1.1208299, 0.21235542), (0.9346314, 1.1208299, 0.40000013), (1.0123564, 1.1208299, 0.5876448), (1.2000011, 1.1208299, 0.66536987), (1.3679049, 1.1208299, 0.567904), (1.437453, 1.1208299, 0.40000013), (1.3448906, 1.1208299, 0.2551106), (1.2000011, 1.1208299, 0.16254826), (1.0320973, 1.1208299, 0.23209628), (0.96254927, 1.1208299, 0.40000013), (1.0320973, 1.1208299, 0.567904), (1.2000011, 1.1208299, 0.63745207), (1.2000011, 1.1208299, 0.40000015), (1.0123564, 1.1042254, 0.21235542), (1.2000011, 1.1042254, 0.13463044), (1.3638315, 1.1042254, 0.23616973), (1.4653708, 1.1042254, 0.40000013), (1.3876458, 1.1042254, 0.5876448), (1.2000011, 1.1042254, 0.66536987), (1.0123564, 1.1042254, 0.5876448), (0.9346314, 1.1042254, 0.40000013), (1.0123563, 0.96000016, 1.387646), (1.200001, 0.96000016, 1.4653709), (1.3638314, 0.96000016, 1.3638316), (1.4653707, 0.96000016, 1.2000012), (1.3876457, 0.96000016, 1.0123565), (1.200001, 0.96000016, 0.9346315), (1.0123563, 0.96000016, 1.0123565), (0.9346312, 0.96000016, 1.2000012), (1.0123563, 1.1208299, 1.387646), (1.200001, 1.1208299, 1.4653709), (1.3638314, 1.1208299, 1.3638316), (1.4653707, 1.1208299, 1.2000012), (1.3876457, 1.1208299, 1.0123565), (1.200001, 1.1208299, 0.9346315), (1.0123563, 1.1208299, 1.0123565), (0.9346312, 1.1208299, 1.2000012), (1.0320971, 1.1208299, 1.367905), (1.200001, 1.1208299, 1.437453), (1.3448905, 1.1208299, 1.3448907), (1.4374528, 1.1208299, 1.2000012), (1.3679048, 1.1208299, 1.0320973), (1.200001, 1.1208299, 0.9625494), (1.0320971, 1.1208299, 1.0320973), (0.96254903, 1.1208299, 1.2000012), (1.200001, 1.1208299, 1.2000012), (1.3876457, 1.1042254, 1.0123565), (1.4653707, 1.1042254, 1.2000012), (1.3638314, 1.1042254, 1.3638316), (1.200001, 1.1042254, 1.4653709), (1.0123563, 1.1042254, 1.387646), (0.9346312, 1.1042254, 1.2000012), (1.0123563, 1.1042254, 1.0123565), (1.200001, 1.1042254, 0.9346315), (0.21235518, 0.96000016, 1.0123564), (0.1346302, 0.96000016, 1.2000011), (0.23616949, 0.96000016, 1.3638315), (0.3999999, 0.96000016, 1.4653708), (0.5876446, 0.96000016, 1.3876458), (0.6653696, 0.96000016, 1.2000011), (0.5876446, 0.96000016, 1.0123564), (0.3999999, 0.96000016, 0.93463135), (0.21235518, 1.1208299, 1.0123564), (0.1346302, 1.1208299, 1.2000011), (0.23616949, 1.1208299, 1.3638315), (0.3999999, 1.1208299, 1.4653708), (0.5876446, 1.1208299, 1.3876458), (0.6653696, 1.1208299, 1.2000011), (0.5876446, 1.1208299, 1.0123564), (0.3999999, 1.1208299, 0.93463135), (0.23209605, 1.1208299, 1.0320972), (0.162548, 1.1208299, 1.2000011), (0.25511035, 1.1208299, 1.3448906), (0.3999999, 1.1208299, 1.4374529), (0.5679037, 1.1208299, 1.3679049), (0.6374517, 1.1208299, 1.2000011), (0.5679037, 1.1208299, 1.0320972), (0.3999999, 1.1208299, 0.96254915), (0.3999999, 1.1208299, 1.200001), (0.5876446, 1.1042254, 1.3876458), (0.3999999, 1.1042254, 1.4653708), (0.23616949, 1.1042254, 1.3638315), (0.1346302, 1.1042254, 1.2000011), (0.21235518, 1.1042254, 1.0123564), (0.3999999, 1.1042254, 0.93463135), (0.5876446, 1.1042254, 1.0123564), (0.6653696, 1.1042254, 1.2000011), (1.1061475, 0.1581551, 0.060896814), (0.90442127, 0.1581551, 0.00684458), (0.6955795, 0.1581551, 0.0068448186), (0.49385375, 0.1581551, 0.060896814), (0.31299174, 0.1581551, 0.16531807), (0.16531777, 0.1581551, 0.3129914), (0.060896754, 0.1581551, 0.49385357), (1.1061475, 0.9624095, 0.060896814), (0.90442127, 0.9624095, 0.00684458), (0.6955795, 0.9624095, 0.0068448186), (0.49385375, 0.9624095, 0.060896814), (0.31299174, 0.9624095, 0.16531807), (0.16531777, 0.9624095, 0.3129914), (0.060896754, 0.9624095, 0.49385357), (1.100805, 0.9624095, 0.07379526), (0.90260005, 0.9624095, 0.02068621), (0.69740164, 0.9624095, 0.02068603), (0.49919635, 0.9624095, 0.07379478), (0.32149044, 0.9624095, 0.17639369), (0.17639351, 0.9624095, 0.32148993), (0.0737952, 0.9624095, 0.49919605), (0.80000055, 0.9624095, 0.8000006), (0.060896754, 0.9427337, 0.49385357), (0.16531777, 0.9427337, 0.3129914), (0.31299174, 0.9427337, 0.16531807), (0.49385375, 0.9427337, 0.060896814), (0.6955795, 0.9427337, 0.0068448186), (0.90442127, 0.9427337, 0.00684458), (1.1061475, 0.9427337, 0.060896814), (1.1061475, 0.041139886, 0.060896814), (0.90442127, 0.041139886, 0.00684458), (0.6955795, 0.041139886, 0.0068448186), (0.49385375, 0.041139886, 0.060896814), (0.31299174, 0.041139886, 0.16531807), (0.16531777, 0.041139886, 0.3129914), (0.060896754, 0.041139886, 0.49385357), (1.0890601, 0.041139886, 0.10214889), (0.898594, 0.041139886, 0.051113546), (0.70140755, 0.041139886, 0.051113546), (0.51094127, 0.041139886, 0.10214901), (0.10214883, 0.041139886, 0.510941), (1.0890601, 0, 0.10214889), (0.898594, 0, 0.051113546), (0.70140755, 0, 0.051113546), (0.51094127, 0, 0.10214901), (0.10214883, 0, 0.510941), (1.0456116, 0, 0.20704344), (0.8837738, 0, 0.16367894), (0.7162274, 0, 0.16367942), (0.5543899, 0, 0.20704341), (0.20704338, 0, 0.5543895), (1.0456116, 0.1581551, 0.20704344), (0.8837738, 0.1581551, 0.16367894), (0.7162274, 0.1581551, 0.16367942), (0.5543899, 0.1581551, 0.20704341), (0.40929016, 0.1581551, 0.29081666), (0.29081666, 0.1581551, 0.40929028), (0.20704338, 0.1581551, 0.5543895), (0.40613574, 0, 0.16265869), (0.40613574, 0.041139886, 0.16265869), (0.47716063, 0, 0.16754586), (0.16141975, 0.041139886, 0.40828067), (0.16141975, 0, 0.40828067), (0.16639346, 0, 0.47820896), (0.5543899, 0.04187192, 0.20704347), (0.47716063, 0.041139886, 0.16754586), (0.16639346, 0.041139886, 0.47820896), (0.20704338, 0.041505907, 0.5543895), (0.7162274, 0.041871928, 0.16367942), (0.8837738, 0.041871928, 0.163679), (1.0456116, 0.041505907, 0.20704344), (0.40613574, 0.1581551, 0.16265869), (0.16141975, 0.1581551, 0.40828067), (0.47716063, 0.1581551, 0.16754586), (0.16639346, 0.1581551, 0.47820896), (0.3129917, 0.16476618, 0.16531807), (0.49385375, 0.16476618, 0.060896814), (0.6955795, 0.16476618, 0.0068448186), (0.90442127, 0.16476618, 0.00684458), (1.1061475, 0.16476618, 0.060896784), (0.060896724, 0.16476618, 0.49385357), (0.16531777, 0.16476618, 0.3129914), (0.16531777, 0.15178666, 0.3129914), (0.060896754, 0.15178666, 0.49385357), (1.1061475, 0.15178666, 0.060896814), (0.90442127, 0.15178666, 0.00684458), (0.6955795, 0.15178666, 0.0068448186), (0.49385375, 0.15178666, 0.060896814), (0.31299174, 0.15178666, 0.16531807), (0.40613574, 0.15178666, 0.16265869), (0.47716063, 0.15178666, 0.16754586), (0.5543899, 0.1518265, 0.20704341), (0.7162274, 0.1518265, 0.16367942), (0.8837738, 0.1518265, 0.16367894), (1.0456116, 0.15180658, 0.20704344), (0.20704338, 0.15180658, 0.5543895), (0.16639346, 0.15178666, 0.47820896), (0.16141975, 0.15178666, 0.40828067), (0.16531777, 0.04725375, 0.3129914), (0.060896754, 0.04725375, 0.49385357), (1.1061475, 0.04725375, 0.060896814), (0.90442127, 0.04725375, 0.00684458), (0.6955795, 0.04725375, 0.0068448186), (0.49385375, 0.04725375, 0.060896814), (0.31299174, 0.04725375, 0.16531807), (0.40613574, 0.04725375, 0.16265869), (0.47716063, 0.04725375, 0.16754586), (0.5543899, 0.047947526, 0.20704347), (0.7162274, 0.04794754, 0.16367942), (0.8837738, 0.04794754, 0.163679), (1.0456116, 0.047600646, 0.20704344), (0.20704338, 0.047600646, 0.5543895), (0.16639346, 0.04725375, 0.47820896), (0.16141975, 0.04725375, 0.40828067), (0.16141975, 0.035685316, 0.40828067), (0.10214883, 0.035685316, 0.510941), (1.0890601, 0.035685316, 0.10214889), (0.898594, 0.035685316, 0.051113546), (0.70140755, 0.035685316, 0.051113546), (0.51094127, 0.035685316, 0.10214901), (0.40613574, 0.035685316, 0.16265869), (0.47716063, 0.035685316, 0.16754586), (0.5543899, 0.03632029, 0.20704341), (0.7162274, 0.036320306, 0.16367942), (0.8837738, 0.036320306, 0.163679), (1.0456116, 0.03600281, 0.20704344), (0.20704338, 0.03600281, 0.5543895), (0.16639346, 0.035685316, 0.47820896), (0.16141975, 0.006382391, 0.40828067), (0.10214883, 0.006382391, 0.510941), (1.0890601, 0.006382391, 0.10214889), (0.898594, 0.006382391, 0.051113546), (0.70140755, 0.006382391, 0.051113546), (0.51094127, 0.006382391, 0.10214901), (0.40613574, 0.006382391, 0.16265869), (0.47716063, 0.006382391, 0.16754586), (0.5543899, 0.0064959526, 0.20704341), (0.7162274, 0.0064959526, 0.16367942), (0.8837738, 0.0064959526, 0.16367894), (1.0456116, 0.0064391717, 0.20704344), (0.20704338, 0.0064391717, 0.5543895), (0.16639346, 0.006382391, 0.47820896), (0.1617294, 0, 0.41263366), (0.1617294, 0.006382391, 0.41263366), (0.1617294, 0.035685316, 0.41263366), (0.1617294, 0.041139886, 0.41263366), (0.1617294, 0.04725375, 0.41263366), (0.1617294, 0.15178666, 0.41263366), (0.1617294, 0.1581551, 0.41263366), (0.4102077, 0.1581551, 0.16293883), (0.4102077, 0.15178666, 0.16293883), (0.4102077, 0.04725375, 0.16293883), (0.4102077, 0.041139886, 0.16293883), (0.4102077, 0.035685316, 0.16293883), (0.4102077, 0.006382391, 0.16293883), (0.4102077, 0, 0.16293883), (0.5478151, 0, 0.20368087), (0.5478151, 0.0064862818, 0.20368087), (0.5478151, 0.03626623, 0.20368087), (0.5478151, 0.041809596, 0.20368087), (0.5478151, 0.047888458, 0.20368087), (0.5478151, 0.1518231, 0.20368087), (0.5478151, 0.1581551, 0.20368087), (0.20358461, 0, 0.5479079), (0.20358467, 0.006382391, 0.5479079), (0.20358461, 0.035685316, 0.5479079), (0.20358461, 0.041139886, 0.5479079), (0.20358467, 0.04725375, 0.5479079), (0.20358467, 0.15178666, 0.5479079), (0.20358461, 0.1581551, 0.5479079), (0.4938535, 0.1581551, 1.5391043), (0.6955798, 0.1581551, 1.5931566), (0.90442157, 0.1581551, 1.5931563), (1.1061473, 0.1581551, 1.5391045), (1.2870094, 0.1581551, 1.4346831), (1.4346833, 0.1581551, 1.2870098), (1.5391043, 0.1581551, 1.1061476), (0.4938535, 0.9624095, 1.5391043), (0.6955798, 0.9624095, 1.5931566), (0.90442157, 0.9624095, 1.5931563), (1.1061473, 0.9624095, 1.5391045), (1.2870094, 0.9624095, 1.4346831), (1.4346833, 0.9624095, 1.2870098), (1.5391043, 0.9624095, 1.1061476), (0.499196, 0.9624095, 1.526206), (0.69740105, 0.9624095, 1.579315), (0.90259945, 0.9624095, 1.5793152), (1.1008048, 0.9624095, 1.5262065), (1.2785107, 0.9624095, 1.4236076), (1.4236076, 0.9624095, 1.2785113), (1.5262059, 0.9624095, 1.1008052), (1.5391043, 0.9396935, 1.1061476), (1.4346833, 0.9427337, 1.2870098), (1.2870094, 0.9427337, 1.4346831), (1.1061473, 0.9427337, 1.5391045), (0.90442157, 0.9427337, 1.5931563), (0.6955798, 0.9427337, 1.5931566), (0.4938535, 0.9427337, 1.5391043), (0.4938535, 0.041139886, 1.5391043), (0.6955798, 0.041139886, 1.5931566), (0.90442157, 0.041139886, 1.5931563), (1.1061473, 0.041139886, 1.5391045), (1.2870094, 0.041139886, 1.4346831), (1.4346833, 0.041139886, 1.2870098), (1.5391043, 0.041139886, 1.1061476), (0.51094097, 0.041139886, 1.4978523), (0.7014071, 0.041139886, 1.5488877), (0.89859354, 0.041139886, 1.5488877), (1.0890598, 0.041139886, 1.4978522), (1.4978522, 0.041139886, 1.0890602), (0.51094097, 0, 1.4978523), (0.7014071, 0, 1.5488877), (0.89859354, 0, 1.5488877), (1.0890598, 0, 1.4978522), (1.4978522, 0, 1.0890602), (0.5543894, 0, 1.3929578), (0.7162273, 0, 1.4363222), (0.8837737, 0, 1.4363217), (1.0456111, 0, 1.3929578), (1.3929577, 0, 1.0456117), (0.5543894, 0.1581551, 1.3929578), (0.7162273, 0.1581551, 1.4363222), (0.8837737, 0.1581551, 1.4363217), (1.0456111, 0.1581551, 1.3929578), (1.1907109, 0.1581551, 1.3091846), (1.3091844, 0.1581551, 1.1907109), (1.3929577, 0.1581551, 1.0456117), (1.1938653, 0, 1.4373425), (1.1938653, 0.041139886, 1.4373425), (1.1228404, 0, 1.4324553), (1.4385813, 0.041139886, 1.1917205), (1.4385813, 0, 1.1917205), (1.4336076, 0, 1.1217923), (1.0456111, 0.04187192, 1.3929577), (1.1228404, 0.041139886, 1.4324553), (1.4336076, 0.041139886, 1.1217923), (1.3929577, 0.041505907, 1.0456117), (0.8837737, 0.041871928, 1.4363217), (0.7162273, 0.041871928, 1.4363222), (0.5543894, 0.041505907, 1.3929578), (1.1938653, 0.1581551, 1.4373425), (1.4385813, 0.1581551, 1.1917205), (1.1228404, 0.1581551, 1.4324553), (1.4336076, 0.1581551, 1.1217923), (1.2870094, 0.16476618, 1.4346831), (1.1061473, 0.16476618, 1.5391045), (0.90442157, 0.16476618, 1.5931563), (0.6955798, 0.16476618, 1.5931566), (0.4938535, 0.16476618, 1.5391045), (1.5391043, 0.16476618, 1.1061476), (1.4346833, 0.16476618, 1.2870098), (1.4346833, 0.15178666, 1.2870098), (1.5391043, 0.15178666, 1.1061476), (0.4938535, 0.15178666, 1.5391043), (0.6955798, 0.15178666, 1.5931566), (0.90442157, 0.15178666, 1.5931563), (1.1061473, 0.15178666, 1.5391045), (1.2870094, 0.15178666, 1.4346831), (1.1938653, 0.15178666, 1.4373425), (1.1228404, 0.15178666, 1.4324553), (1.0456111, 0.1518265, 1.3929578), (0.8837737, 0.1518265, 1.4363217), (0.7162273, 0.1518265, 1.4363222), (0.5543894, 0.15180658, 1.3929578), (1.3929577, 0.15180658, 1.0456117), (1.4336076, 0.15178666, 1.1217923), (1.4385813, 0.15178666, 1.1917205), (1.4346833, 0.04725375, 1.2870098), (1.5391043, 0.04725375, 1.1061476), (0.4938535, 0.04725375, 1.5391043), (0.6955798, 0.04725375, 1.5931566), (0.90442157, 0.04725375, 1.5931563), (1.1061473, 0.04725375, 1.5391045), (1.2870094, 0.04725375, 1.4346831), (1.1938653, 0.04725375, 1.4373425), (1.1228404, 0.04725375, 1.4324553), (1.0456111, 0.047947526, 1.3929577), (0.8837737, 0.04794754, 1.4363217), (0.7162273, 0.04794754, 1.4363222), (0.5543894, 0.047600646, 1.3929578), (1.3929577, 0.047600646, 1.0456117), (1.4336076, 0.04725375, 1.1217923), (1.4385813, 0.04725375, 1.1917205), (1.4385813, 0.035685316, 1.1917205), (1.4978522, 0.035685316, 1.0890602), (0.51094097, 0.035685316, 1.4978523), (0.7014071, 0.035685316, 1.5488877), (0.89859354, 0.035685316, 1.5488877), (1.0890598, 0.035685316, 1.4978522), (1.1938653, 0.035685316, 1.4373425), (1.1228404, 0.035685316, 1.4324553), (1.0456111, 0.03632029, 1.3929578), (0.8837737, 0.036320306, 1.4363217), (0.7162273, 0.036320306, 1.4363222), (0.5543894, 0.03600281, 1.3929578), (1.3929577, 0.03600281, 1.0456117), (1.4336076, 0.035685316, 1.1217923), (1.4385813, 0.006382391, 1.1917205), (1.4978522, 0.006382391, 1.0890602), (0.51094097, 0.006382391, 1.4978523), (0.7014071, 0.006382391, 1.5488877), (0.89859354, 0.006382391, 1.5488877), (1.0890598, 0.006382391, 1.4978522), (1.1938653, 0.006382391, 1.4373425), (1.1228404, 0.006382391, 1.4324553), (1.0456111, 0.0064959526, 1.3929578), (0.8837737, 0.0064959526, 1.4363217), (0.7162273, 0.0064959526, 1.4363222), (0.5543894, 0.0064391717, 1.3929578), (1.3929577, 0.0064391717, 1.0456117), (1.4336076, 0.006382391, 1.1217923), (1.4382718, 0, 1.1873676), (1.4382718, 0.006382391, 1.1873676), (1.4382718, 0.035685316, 1.1873676), (1.4382718, 0.041139886, 1.1873676), (1.4382718, 0.04725375, 1.1873676), (1.4382718, 0.15178666, 1.1873676), (1.4382718, 0.1581551, 1.1873676), (1.1897933, 0.1581551, 1.4370624), (1.1897933, 0.15178666, 1.4370624), (1.1897933, 0.04725375, 1.4370624), (1.1897933, 0.041139886, 1.4370624), (1.1897933, 0.035685316, 1.4370624), (1.1897933, 0.006382391, 1.4370624), (1.1897933, 0, 1.4370624), (1.052186, 0, 1.3963203), (1.052186, 0.0064862818, 1.3963203), (1.052186, 0.03626623, 1.3963203), (1.052186, 0.041809596, 1.3963203), (1.052186, 0.047888458, 1.3963203), (1.052186, 0.1518231, 1.3963203), (1.052186, 0.1581551, 1.3963203), (1.3964164, 0, 1.0520933), (1.3964164, 0.006382391, 1.0520933), (1.3964164, 0.035685316, 1.0520933), (1.3964164, 0.041139886, 1.0520933), (1.3964164, 0.04725375, 1.0520933), (1.3964164, 0.15178666, 1.0520933), (1.3964164, 0.1581551, 1.0520933), (0.0068445206, 0.1581551, 0.6955799), (0.006844759, 0.1581551, 0.9044216), (0.060896754, 0.1581551, 1.1061474), (0.16531801, 0.1581551, 1.2870095), (0.31299135, 0.1581551, 1.4346833), (0.0068445206, 0.9624095, 0.6955799), (0.006844759, 0.9624095, 0.9044216), (0.060896754, 0.9624095, 1.1061474), (0.16531801, 0.9624095, 1.2870095), (0.31299135, 0.9624095, 1.4346833), (0.02068615, 0.9624095, 0.6974011), (0.02068597, 0.9624095, 0.90259945), (0.07379472, 0.9624095, 1.1008048), (0.17639363, 0.9624095, 1.2785107), (0.32148987, 0.9624095, 1.4236076), (0.31299135, 0.9427337, 1.4346833), (0.16531801, 0.9427337, 1.2870095), (0.060896754, 0.9427337, 1.1061474), (0.006844759, 0.9427337, 0.9044216), (0.0068445206, 0.9427337, 0.6955799), (0.0068445206, 0.041139886, 0.6955799), (0.006844759, 0.041139886, 0.9044216), (0.060896754, 0.041139886, 1.1061474), (0.16531801, 0.041139886, 1.2870095), (0.31299135, 0.041139886, 1.4346833), (0.051113486, 0.041139886, 0.70140713), (0.051113486, 0.041139886, 0.89859354), (0.10214895, 0.041139886, 1.0890598), (0.051113486, 0, 0.70140713), (0.051113486, 0, 0.89859354), (0.10214895, 0, 1.0890598), (0.16367888, 0, 0.71622735), (0.16367936, 0, 0.8837737), (0.20704335, 0, 1.0456113), (0.16367888, 0.1581551, 0.71622735), (0.16367936, 0.1581551, 0.8837737), (0.20704335, 0.1581551, 1.0456113), (0.2908166, 0.1581551, 1.190711), (0.40929022, 0.1581551, 1.3091846), (0.16265863, 0, 1.1938654), (0.16265863, 0.041139886, 1.1938654), (0.1675458, 0, 1.1228405), (0.4082806, 0.041139886, 1.4385815), (0.4082806, 0, 1.4385815), (0.4782089, 0, 1.4336077), (0.20704341, 0.04187192, 1.0456113), (0.1675458, 0.041139886, 1.1228405), (0.4782089, 0.041139886, 1.4336077), (0.16367936, 0.041871928, 0.8837737), (0.16367894, 0.041871928, 0.71622735), (0.16265863, 0.1581551, 1.1938654), (0.4082806, 0.1581551, 1.4385815), (0.1675458, 0.1581551, 1.1228405), (0.4782089, 0.1581551, 1.4336077), (0.16531801, 0.16476618, 1.2870095), (0.060896754, 0.16476618, 1.1061474), (0.006844759, 0.16476618, 0.9044216), (0.0068445206, 0.16476618, 0.6955799), (0.31299135, 0.16476618, 1.4346833), (0.31299135, 0.15178666, 1.4346833), (0.0068445206, 0.15178666, 0.6955799), (0.006844759, 0.15178666, 0.9044216), (0.060896754, 0.15178666, 1.1061474), (0.16531801, 0.15178666, 1.2870095), (0.16265863, 0.15178666, 1.1938654), (0.1675458, 0.15178666, 1.1228405), (0.20704335, 0.1518265, 1.0456113), (0.16367936, 0.1518265, 0.8837737), (0.16367888, 0.1518265, 0.71622735), (0.4782089, 0.15178666, 1.4336077), (0.4082806, 0.15178666, 1.4385815), (0.31299135, 0.04725375, 1.4346833), (0.0068445206, 0.04725375, 0.6955799), (0.006844759, 0.04725375, 0.9044216), (0.060896754, 0.04725375, 1.1061474), (0.16531801, 0.04725375, 1.2870095), (0.16265863, 0.04725375, 1.1938654), (0.1675458, 0.04725375, 1.1228405), (0.20704341, 0.047947526, 1.0456113), (0.16367936, 0.04794754, 0.8837737), (0.16367894, 0.04794754, 0.71622735), (0.4782089, 0.04725375, 1.4336077), (0.4082806, 0.04725375, 1.4385815), (0.4082806, 0.035685316, 1.4385815), (0.051113486, 0.035685316, 0.70140713), (0.051113486, 0.035685316, 0.89859354), (0.10214895, 0.035685316, 1.0890598), (0.16265863, 0.035685316, 1.1938654), (0.1675458, 0.035685316, 1.1228405), (0.20704335, 0.03632029, 1.0456113), (0.16367936, 0.036320306, 0.8837737), (0.16367894, 0.036320306, 0.71622735), (0.4782089, 0.035685316, 1.4336077), (0.4082806, 0.006382391, 1.4385815), (0.051113486, 0.006382391, 0.70140713), (0.051113486, 0.006382391, 0.89859354), (0.10214895, 0.006382391, 1.0890598), (0.16265863, 0.006382391, 1.1938654), (0.1675458, 0.006382391, 1.1228405), (0.20704335, 0.0064959526, 1.0456113), (0.16367936, 0.0064959526, 0.8837737), (0.16367888, 0.0064959526, 0.71622735), (0.4782089, 0.006382391, 1.4336077), (0.4126336, 0, 1.4382718), (0.4126336, 0.006382391, 1.4382718), (0.4126336, 0.035685316, 1.4382718), (0.4126336, 0.041139886, 1.4382718), (0.4126336, 0.04725375, 1.4382718), (0.4126336, 0.15178666, 1.4382718), (0.4126336, 0.1581551, 1.4382718), (0.16293877, 0.1581551, 1.1897935), (0.16293877, 0.15178666, 1.1897935), (0.16293877, 0.04725375, 1.1897935), (0.16293877, 0.041139886, 1.1897935), (0.16293877, 0.035685316, 1.1897935), (0.16293877, 0.006382391, 1.1897935), (0.16293877, 0, 1.1897935), (0.20368081, 0, 1.0521861), (0.20368081, 0.0064862818, 1.0521861), (0.20368081, 0.03626623, 1.0521861), (0.20368081, 0.041809596, 1.0521861), (0.20368081, 0.047888458, 1.0521861), (0.20368081, 0.1518231, 1.0521861), (0.20368081, 0.1581551, 1.0521861), (0.5479078, 0, 1.3964165), (0.5479078, 0.006382391, 1.3964164), (0.5479078, 0.035685316, 1.3964165), (0.5479078, 0.041139886, 1.3964165), (0.5479078, 0.04725375, 1.3964164), (0.5479078, 0.15178666, 1.3964164), (0.5479078, 0.1581551, 1.3964165), (1.5931566, 0.1581551, 0.9044213), (1.5931563, 0.1581551, 0.6955796), (1.5391043, 0.1581551, 0.4938538), (1.4346831, 0.1581551, 0.3129918), (1.2870097, 0.1581551, 0.16531783), (1.5931566, 0.9624095, 0.9044213), (1.5931563, 0.9624095, 0.6955796), (1.5391043, 0.9624095, 0.4938538), (1.4346831, 0.9624095, 0.3129918), (1.2870097, 0.9624095, 0.16531783), (1.579315, 0.9624095, 0.9026001), (1.5793152, 0.9624095, 0.69740176), (1.5262064, 0.9624095, 0.4991964), (1.4236075, 0.9624095, 0.3214905), (1.2785113, 0.9624095, 0.17639357), (1.2870097, 0.9427337, 0.16531783), (1.4346831, 0.9396935, 0.3129918), (1.5391043, 0.9396935, 0.4938538), (1.5931563, 0.9396935, 0.6955796), (1.5931566, 0.9396935, 0.9044213), (1.5931566, 0.041139886, 0.9044213), (1.5931563, 0.041139886, 0.6955796), (1.5391043, 0.041139886, 0.4938538), (1.4346831, 0.041139886, 0.3129918), (1.2870097, 0.041139886, 0.16531783), (1.5488876, 0.041139886, 0.8985941), (1.5488876, 0.041139886, 0.7014077), (1.4978521, 0.041139886, 0.5109414), (1.5488876, 0, 0.8985941), (1.5488876, 0, 0.7014077), (1.4978521, 0, 0.5109414), (1.4363222, 0, 0.88377386), (1.4363217, 0, 0.71622753), (1.3929577, 0, 0.55438995), (1.4363222, 0.1581551, 0.88377386), (1.4363217, 0.1581551, 0.71622753), (1.3929577, 0.1581551, 0.55438995), (1.3091846, 0.1581551, 0.40929022), (1.1907109, 0.1581551, 0.29081672), (1.4373424, 0, 0.4061358), (1.4373424, 0.041139886, 0.4061358), (1.4324553, 0, 0.4771607), (1.1917205, 0.041139886, 0.16141981), (1.1917205, 0, 0.16141981), (1.1217922, 0, 0.16639352), (1.3929577, 0.04187192, 0.55438995), (1.4324553, 0.041139886, 0.4771607), (1.1217922, 0.041139886, 0.16639352), (1.4363217, 0.041871928, 0.71622753), (1.4363222, 0.041871928, 0.88377386), (1.4373424, 0.1581551, 0.4061358), (1.1917205, 0.1581551, 0.16141981), (1.4324553, 0.1581551, 0.4771607), (1.1217922, 0.1581551, 0.16639352), (1.4346831, 0.16476618, 0.31299177), (1.5391043, 0.16476618, 0.4938538), (1.5931563, 0.16476618, 0.6955796), (1.5931566, 0.16476618, 0.9044213), (1.2870097, 0.16476618, 0.16531783), (1.2870097, 0.15178666, 0.16531783), (1.5931566, 0.15178666, 0.9044213), (1.5931563, 0.15178666, 0.6955796), (1.5391043, 0.15178666, 0.4938538), (1.4346831, 0.15178666, 0.3129918), (1.4373424, 0.15178666, 0.4061358), (1.4324553, 0.15178666, 0.4771607), (1.3929577, 0.1518265, 0.55438995), (1.4363217, 0.1518265, 0.71622753), (1.4363222, 0.1518265, 0.88377386), (1.1217922, 0.15178666, 0.16639352), (1.1917205, 0.15178666, 0.16141981), (1.2870097, 0.04725375, 0.16531783), (1.5931566, 0.04725375, 0.9044213), (1.5931563, 0.04725375, 0.6955796), (1.5391043, 0.04725375, 0.4938538), (1.4346831, 0.04725375, 0.3129918), (1.4373424, 0.04725375, 0.4061358), (1.4324553, 0.04725375, 0.4771607), (1.3929577, 0.047947526, 0.55438995), (1.4363217, 0.04794754, 0.71622753), (1.4363222, 0.04794754, 0.88377386), (1.1217922, 0.04725375, 0.16639352), (1.1917205, 0.04725375, 0.16141981), (1.1917205, 0.035685316, 0.16141981), (1.5488876, 0.035685316, 0.8985941), (1.5488876, 0.035685316, 0.7014077), (1.4978521, 0.035685316, 0.5109414), (1.4373424, 0.035685316, 0.4061358), (1.4324553, 0.035685316, 0.4771607), (1.3929577, 0.03632029, 0.55438995), (1.4363217, 0.036320306, 0.71622753), (1.4363222, 0.036320306, 0.88377386), (1.1217922, 0.035685316, 0.16639352), (1.1917205, 0.006382391, 0.16141981), (1.5488876, 0.006382391, 0.8985941), (1.5488876, 0.006382391, 0.7014077), (1.4978521, 0.006382391, 0.5109414), (1.4373424, 0.006382391, 0.4061358), (1.4324553, 0.006382391, 0.4771607), (1.3929577, 0.0064959526, 0.55438995), (1.4363217, 0.0064959526, 0.71622753), (1.4363222, 0.0064959526, 0.88377386), (1.1217922, 0.006382391, 0.16639352), (1.1873674, 0, 0.16172945), (1.1873674, 0.006382391, 0.16172945), (1.1873674, 0.035685316, 0.16172945), (1.1873674, 0.041139886, 0.16172945), (1.1873674, 0.04725375, 0.16172945), (1.1873674, 0.15178666, 0.16172945), (1.1873674, 0.1581551, 0.16172945), (1.4370623, 0.1581551, 0.41020775), (1.4370623, 0.15178666, 0.41020775), (1.4370623, 0.04725375, 0.41020775), (1.4370623, 0.041139886, 0.41020775), (1.4370623, 0.035685316, 0.41020775), (1.4370623, 0.006382391, 0.41020775), (1.4370623, 0, 0.41020775), (1.3963203, 0, 0.5478151), (1.3963203, 0.0064862818, 0.5478151), (1.3963203, 0.03626623, 0.5478151), (1.3963203, 0.041809596, 0.5478151), (1.3963203, 0.047888458, 0.5478151), (1.3963203, 0.1518231, 0.5478151), (1.3963203, 0.1581551, 0.5478151), (1.0520933, 0, 0.20358467), (1.0520933, 0.006382391, 0.20358473), (1.0520933, 0.035685316, 0.20358467), (1.0520933, 0.041139886, 0.20358467), (1.0520933, 0.04725375, 0.20358473), (1.0520933, 0.15178666, 0.20358473), (1.0520933, 0.1581551, 0.20358467), (1.0456116, 0.79859585, 0.20704344), (0.8837738, 0.79859585, 0.16367894), (1.0414784, 0.79859585, 0.21702218), (0.8823642, 0.79859585, 0.17438787), (0.7162274, 0.79859585, 0.16367942), (0.7176371, 0.79859585, 0.17438787), (0.5543899, 0.79859585, 0.20704341), (0.5585234, 0.79859585, 0.2170223), (0.40929016, 0.79859585, 0.29081666), (0.41586548, 0.79859585, 0.2993859), (0.29081666, 0.79859585, 0.40929028), (0.2993858, 0.79859585, 0.41586533), (0.20704338, 0.79859585, 0.5543895), (0.21702212, 0.79859585, 0.5585227), (0.5543894, 0.79859585, 1.3929578), (0.7162273, 0.79859585, 1.4363222), (0.5585227, 0.79859585, 1.382979), (0.7176369, 0.79859585, 1.4256134), (0.8837737, 0.79859585, 1.4363217), (0.882364, 0.79859585, 1.4256134), (1.0456111, 0.79859585, 1.3929578), (1.0414777, 0.79859585, 1.3829789), (1.1907109, 0.79859585, 1.3091846), (1.1841357, 0.79859585, 1.3006153), (1.3091844, 0.79859585, 1.1907109), (1.3006153, 0.79859585, 1.1841359), (1.3929577, 0.79859585, 1.0456117), (1.3829789, 0.79859585, 1.0414785), (0.16367888, 0.79859585, 0.71622735), (0.17438781, 0.79859585, 0.71763694), (0.16367936, 0.79859585, 0.8837737), (0.17438781, 0.79859585, 0.88236403), (0.20704335, 0.79859585, 1.0456113), (0.21702224, 0.79859585, 1.0414777), (0.2908166, 0.79859585, 1.190711), (0.29938585, 0.79859585, 1.1841357), (0.40929022, 0.79859585, 1.3091846), (0.41586527, 0.79859585, 1.3006153), (1.4363222, 0.79859585, 0.88377386), (1.4256133, 0.79859585, 0.8823643), (1.4363217, 0.79859585, 0.71622753), (1.4256133, 0.79859585, 0.7176372), (1.3929577, 0.79859585, 0.55438995), (1.3829789, 0.79859585, 0.5585235), (1.3091846, 0.79859585, 0.40929022), (1.3006153, 0.79859585, 0.41586554), (1.1907109, 0.79859585, 0.29081672), (1.1841358, 0.79859585, 0.29938585), (0.20704335, 0.16347097, 1.0456113), (0.2908166, 0.16347097, 1.190711), (0.4092902, 0.16347097, 1.3091846), (0.5543894, 0.16347097, 1.3929578), (0.7162273, 0.16347097, 1.4363222), (0.8837736, 0.16347097, 1.4363217), (1.0456111, 0.16347097, 1.3929578), (1.1907109, 0.16347097, 1.3091846), (1.3091844, 0.16347097, 1.1907109), (1.3929576, 0.16347097, 1.0456117), (1.4363222, 0.16347097, 0.8837738), (1.4363217, 0.16347097, 0.71622753), (1.3929576, 0.16347097, 0.55438995), (1.3091846, 0.16347097, 0.4092902), (1.1907109, 0.16347097, 0.29081672), (1.0456116, 0.16347097, 0.20704344), (0.88377374, 0.16347097, 0.16367893), (0.7162274, 0.16347097, 0.16367942), (0.5543899, 0.16347097, 0.20704341), (0.40929013, 0.16347097, 0.29081666), (0.29081666, 0.16347097, 0.40929025), (0.20704338, 0.16347097, 0.5543895), (0.16367887, 0.16347097, 0.71622735), (0.16367936, 0.16347097, 0.8837736), (0.29081666, 0.7831601, 0.40929028), (0.20704338, 0.7831601, 0.5543895), (0.16367888, 0.7831601, 0.71622735), (0.16367936, 0.7831601, 0.8837737), (0.20704335, 0.7831601, 1.0456113), (0.2908166, 0.7831601, 1.190711), (0.40929022, 0.7831601, 1.3091846), (0.5543894, 0.7831601, 1.3929578), (0.7162273, 0.7831601, 1.4363222), (0.8837737, 0.7831601, 1.4363217), (1.0456111, 0.7831601, 1.3929578), (1.1907109, 0.7831601, 1.3091846), (1.3091844, 0.7831601, 1.1907109), (1.3929577, 0.7831601, 1.0456117), (1.4363222, 0.7831601, 0.88377386), (1.4363217, 0.7831601, 0.71622753), (1.3929577, 0.7831601, 0.55438995), (1.3091846, 0.7831601, 0.40929022), (1.1907109, 0.7831601, 0.29081672), (1.0456116, 0.7831601, 0.20704344), (0.8837738, 0.7831601, 0.16367894), (0.7162274, 0.7831601, 0.16367942), (0.5543899, 0.7831601, 0.20704341), (0.40929016, 0.7831601, 0.29081666), (0.9248153, 0.79859585, 0.4986714), (0.8425725, 0.79859585, 0.47663504), (0.7574287, 0.79859585, 0.47663504), (0.6751862, 0.79859585, 0.49867156), (0.60144943, 0.79859585, 0.54124355), (0.54124343, 0.79859585, 0.6014493), (0.49867144, 0.79859585, 0.6751858), (0.6751858, 0.79859585, 1.1013298), (0.7574285, 0.79859585, 1.1233662), (0.8425724, 0.79859585, 1.1233662), (0.9248149, 0.79859585, 1.1013297), (0.99855167, 0.79859585, 1.0587578), (1.0587577, 0.79859585, 0.9985519), (1.1013297, 0.79859585, 0.9248154), (0.47663492, 0.79859585, 0.7574286), (0.47663492, 0.79859585, 0.84257245), (0.49867144, 0.79859585, 0.9248149), (0.54124343, 0.79859585, 0.9985518), (0.6014493, 0.79859585, 1.0587578), (1.1233661, 0.79859585, 0.84257257), (1.1233661, 0.79859585, 0.75742877), (1.1013297, 0.79859585, 0.67518634), (1.0587577, 0.79859585, 0.60144955), (0.9985518, 0.79859585, 0.54124355), (0.9248153, 0.0009972453, 0.4986714), (0.8425725, 0.0009972453, 0.47663504), (0.7574287, 0.0009972453, 0.47663504), (0.6751862, 0.0009972453, 0.49867156), (0.60144943, 0.0009972453, 0.54124355), (0.54124343, 0.0009972453, 0.6014493), (0.49867144, 0.0009972453, 0.6751858), (0.6751858, 0.0009972453, 1.1013298), (0.7574285, 0.0009972453, 1.1233662), (0.8425724, 0.0009972453, 1.1233662), (0.9248149, 0.0009972453, 1.1013297), (0.99855167, 0.0009972453, 1.0587578), (1.0587577, 0.0009972453, 0.9985519), (1.1013297, 0.0009972453, 0.9248154), (0.47663492, 0.0009972453, 0.7574286), (0.47663492, 0.0009972453, 0.84257245), (0.49867144, 0.0009972453, 0.9248149), (0.54124343, 0.0009972453, 0.9985518), (0.6014493, 0.0009972453, 1.0587578), (1.1233661, 0.0009972453, 0.84257257), (1.1233661, 0.0009972453, 0.75742877), (1.1013297, 0.0009972453, 0.67518634), (1.0587577, 0.0009972453, 0.60144955), (0.9985518, 0.0009972453, 0.54124355), (0.8930426, 0.0009972453, 0.5753774), (0.8317355, 0.0009972453, 0.55895054), (0.7682657, 0.0009972453, 0.55895054), (0.7069588, 0.0009972453, 0.57537746), (0.6519923, 0.0009972453, 0.6071124), (0.6071123, 0.0009972453, 0.6519923), (0.57537735, 0.0009972453, 0.7069585), (0.7069585, 0.0009972453, 1.0246239), (0.7682656, 0.0009972453, 1.0410508), (0.8317354, 0.0009972453, 1.0410508), (0.8930423, 0.0009972453, 1.0246238), (0.9480088, 0.0009972453, 0.9928889), (0.9928888, 0.0009972453, 0.948009), (1.0246238, 0.0009972453, 0.89304274), (0.5589504, 0.0009972453, 0.7682657), (0.5589504, 0.0009972453, 0.83173543), (0.57537735, 0.0009972453, 0.8930423), (0.6071123, 0.0009972453, 0.9480089), (0.6519922, 0.0009972453, 0.9928889), (1.0410507, 0.0009972453, 0.83173555), (1.0410507, 0.0009972453, 0.7682658), (1.0246238, 0.0009972453, 0.7069589), (0.9928888, 0.0009972453, 0.65199244), (0.9480089, 0.0009972453, 0.6071124), (0.8930426, 0.54664063, 0.5753774), (0.8317355, 0.54664063, 0.55895054), (0.7682657, 0.54664063, 0.55895054), (0.7069588, 0.54664063, 0.57537746), (0.6519923, 0.54664063, 0.6071124), (0.6071123, 0.54664063, 0.6519923), (0.57537735, 0.54664063, 0.7069585), (0.7069585, 0.54664063, 1.0246239), (0.7682656, 0.54664063, 1.0410508), (0.8317354, 0.54664063, 1.0410508), (0.8930423, 0.54664063, 1.0246238), (0.9480088, 0.54664063, 0.9928889), (0.9928888, 0.54664063, 0.948009), (1.0246238, 0.54664063, 0.89304274), (0.5589504, 0.54664063, 0.7682657), (0.5589504, 0.54664063, 0.83173543), (0.57537735, 0.54664063, 0.8930423), (0.6071123, 0.54664063, 0.9480089), (0.6519922, 0.54664063, 0.9928889), (1.0410507, 0.54664063, 0.83173555), (1.0410507, 0.54664063, 0.7682658), (1.0246238, 0.54664063, 0.7069589), (0.9928888, 0.54664063, 0.65199244), (0.9480089, 0.54664063, 0.6071124), (0.8872482, 0.54664063, 0.5893663), (0.8297591, 0.54664063, 0.5739625), (0.7702421, 0.54664063, 0.5739625), (0.7127532, 0.54664063, 0.5893664), (0.6612099, 0.54664063, 0.61912495), (0.6191248, 0.54664063, 0.6612099), (0.58936626, 0.54664063, 0.7127529), (0.7127529, 0.54664063, 1.0106349), (0.770242, 0.54664063, 1.0260389), (0.829759, 0.54664063, 1.0260389), (0.8872479, 0.54664063, 1.0106348), (0.9387912, 0.54664063, 0.9808764), (0.98087627, 0.54664063, 0.93879145), (1.0106348, 0.54664063, 0.88724834), (0.5739624, 0.54664063, 0.7702421), (0.5739624, 0.54664063, 0.82975906), (0.58936626, 0.54664063, 0.8872479), (0.6191248, 0.54664063, 0.93879133), (0.66120976, 0.54664063, 0.9808764), (1.0260388, 0.54664063, 0.8297592), (1.0260388, 0.54664063, 0.77024215), (1.0106348, 0.54664063, 0.7127533), (0.98087627, 0.54664063, 0.66121), (0.93879133, 0.54664063, 0.61912495), (0.80000055, 0.5466405, 0.8000009), (0.4939589, 0.79859585, 0.67323375), (0.47157773, 0.79859585, 0.7567628), (0.47157773, 0.79859585, 0.84323823), (0.4939589, 0.79859585, 0.9267668), (0.5371967, 0.79859585, 1.001657), (0.5983441, 0.79859585, 1.0628045), (0.6732338, 0.79859585, 1.1060423), (0.75676274, 0.79859585, 1.1284235), (0.8432382, 0.79859585, 1.1284235), (0.9267669, 0.79859585, 1.1060421), (1.0016569, 0.79859585, 1.0628045), (1.0628045, 0.79859585, 1.0016571), (1.1060421, 0.79859585, 0.92676735), (1.1284233, 0.79859585, 0.84323835), (1.1284233, 0.79859585, 0.756763), (1.1060421, 0.79859585, 0.6732343), (1.0628045, 0.79859585, 0.5983443), (1.001657, 0.79859585, 0.5371968), (0.92676723, 0.79859585, 0.49395886), (0.8432383, 0.79859585, 0.47157785), (0.7567629, 0.79859585, 0.47157785), (0.67323416, 0.79859585, 0.493959), (0.5983442, 0.79859585, 0.5371968), (0.5371967, 0.79859585, 0.59834415), (0.49867144, 0.78726935, 0.67518574), (0.47663492, 0.78726935, 0.7574286), (0.47663492, 0.78726935, 0.84257245), (0.49867144, 0.78726935, 0.9248148), (0.54124343, 0.78726935, 0.9985518), (0.6014493, 0.78726935, 1.0587578), (0.67518574, 0.78726935, 1.1013298), (0.7574285, 0.78726935, 1.1233662), (0.8425724, 0.78726935, 1.1233662), (0.9248148, 0.78726935, 1.1013297), (0.9985516, 0.78726935, 1.0587578), (1.0587577, 0.78726935, 0.9985519), (1.1013297, 0.78726935, 0.92481536), (1.1233661, 0.78726935, 0.84257257), (1.1233661, 0.78726935, 0.75742877), (1.1013297, 0.78726935, 0.67518634), (1.0587577, 0.78726935, 0.60144955), (0.9985518, 0.78726935, 0.54124355), (0.92481524, 0.78726935, 0.4986714), (0.8425725, 0.78726935, 0.47663504), (0.7574287, 0.78726935, 0.47663504), (0.6751862, 0.78726935, 0.49867156), (0.60144943, 0.78726935, 0.54124355), (0.54124343, 0.78726935, 0.6014493), (0.49867144, 0.006480177, 0.6751858), (0.47663492, 0.006480177, 0.7574286), (0.47663492, 0.006480177, 0.84257245), (0.49867144, 0.006480177, 0.9248149), (0.54124343, 0.006480177, 0.9985518), (0.6014493, 0.006480177, 1.0587578), (0.6751858, 0.006480177, 1.1013298), (0.7574285, 0.006480177, 1.1233662), (0.8425724, 0.006480177, 1.1233662), (0.9248149, 0.006480177, 1.1013297), (0.99855167, 0.006480177, 1.0587578), (1.0587577, 0.006480177, 0.9985519), (1.1013297, 0.006480177, 0.9248154), (1.1233661, 0.006480177, 0.84257257), (1.1233661, 0.006480177, 0.75742877), (1.1013297, 0.006480177, 0.67518634), (1.0587577, 0.006480177, 0.60144955), (0.9985518, 0.006480177, 0.54124355), (0.9248153, 0.006480177, 0.4986714), (0.8425725, 0.006480177, 0.47663504), (0.7574287, 0.006480177, 0.47663504), (0.6751862, 0.006480177, 0.49867156), (0.60144943, 0.006480177, 0.54124355), (0.54124343, 0.006480177, 0.6014493), (0.50550646, 0.0009972453, 0.6780169), (0.48396978, 0.0009972453, 0.7583943), (0.48396978, 0.0009972453, 0.8416068), (0.50550646, 0.0009972453, 0.9219838), (0.54711276, 0.0009972453, 0.9940481), (0.6059529, 0.0009972453, 1.0528885), (0.6780169, 0.0009972453, 1.0944948), (0.75839424, 0.0009972453, 1.1160314), (0.84160674, 0.0009972453, 1.1160314), (0.9219838, 0.0009972453, 1.0944947), (0.99404794, 0.0009972453, 1.0528885), (1.0528884, 0.0009972453, 0.9940483), (1.0944947, 0.0009972453, 0.9219843), (1.1160313, 0.0009972453, 0.8416069), (1.1160313, 0.0009972453, 0.7583944), (1.0944947, 0.0009972453, 0.67801744), (1.0528884, 0.0009972453, 0.6059533), (0.9940482, 0.0009972453, 0.5471129), (0.9219842, 0.0009972453, 0.5055064), (0.84160686, 0.0009972453, 0.4839699), (0.75839436, 0.0009972453, 0.4839699), (0.6780173, 0.0009972453, 0.5055066), (0.60595316, 0.0009972453, 0.5471129), (0.54711276, 0.0009972453, 0.60595304), (0.55444753, 0.0009972453, 0.7676729), (0.55444753, 0.0009972453, 0.83232826), (0.5711813, 0.0009972453, 0.8947804), (0.60350907, 0.0009972453, 0.9507738), (0.6492273, 0.0009972453, 0.99649215), (0.70522046, 0.0009972453, 1.0288199), (0.7676728, 0.0009972453, 1.0455537), (0.8323282, 0.0009972453, 1.0455537), (0.8947804, 0.0009972453, 1.0288198), (0.95077366, 0.0009972453, 0.99649215), (0.996492, 0.0009972453, 0.95077384), (1.0288198, 0.0009972453, 0.8947808), (1.0455536, 0.0009972453, 0.8323283), (1.0455536, 0.0009972453, 0.76767296), (1.0288198, 0.0009972453, 0.7052208), (0.996492, 0.0009972453, 0.6492276), (0.9507738, 0.0009972453, 0.6035092), (0.8947807, 0.0009972453, 0.57118136), (0.8323283, 0.0009972453, 0.5544476), (0.7676729, 0.0009972453, 0.5544476), (0.7052207, 0.0009972453, 0.5711814), (0.6492275, 0.0009972453, 0.6035092), (0.60350907, 0.0009972453, 0.64922744), (0.5711813, 0.0009972453, 0.70522046), (0.5589505, 0.0086823795, 0.7682658), (0.5589505, 0.0086823795, 0.8317355), (0.57537735, 0.0086823795, 0.8930423), (0.6071123, 0.0086823795, 0.9480089), (0.6519922, 0.0086823795, 0.9928889), (0.7069585, 0.0086823795, 1.0246239), (0.76826566, 0.0086823795, 1.0410508), (0.83173543, 0.0086823795, 1.0410508), (0.8930423, 0.0086823795, 1.0246238), (0.9480088, 0.0086823795, 0.9928889), (0.9928888, 0.0086823795, 0.948009), (1.0246238, 0.0086823795, 0.89304274), (1.0410507, 0.0086823795, 0.8317356), (1.0410507, 0.0086823795, 0.76826584), (1.0246238, 0.0086823795, 0.7069589), (0.9928888, 0.0086823795, 0.65199244), (0.9480089, 0.0086823795, 0.6071124), (0.8930426, 0.0086823795, 0.5753774), (0.83173555, 0.0086823795, 0.5589506), (0.7682658, 0.0086823795, 0.5589506), (0.7069588, 0.0086823795, 0.57537746), (0.6519923, 0.0086823795, 0.6071124), (0.6071123, 0.0086823795, 0.6519923), (0.57537735, 0.0086823795, 0.7069585), (0.57537735, 0.5303175, 0.8930423), (0.6071123, 0.5303175, 0.9480089), (0.6519922, 0.5303175, 0.9928889), (0.7069585, 0.5303175, 1.0246239), (0.7682656, 0.5303175, 1.0410508), (0.8317354, 0.5303175, 1.0410508), (0.8930423, 0.5303175, 1.0246238), (0.9480088, 0.5303175, 0.9928889), (0.9928888, 0.5303175, 0.948009), (1.0246238, 0.5303175, 0.89304274), (1.0410507, 0.5303175, 0.83173555), (1.0410507, 0.5303175, 0.7682658), (1.0246238, 0.5303175, 0.7069589), (0.9928888, 0.5303175, 0.65199244), (0.9480089, 0.5303175, 0.6071124), (0.8930426, 0.5303175, 0.5753774), (0.8317355, 0.5303175, 0.55895054), (0.7682658, 0.5303175, 0.55895054), (0.7069588, 0.5303175, 0.57537746), (0.6519923, 0.5303175, 0.6071124), (0.6071123, 0.5303175, 0.6519923), (0.57537735, 0.5303175, 0.7069585), (0.5589504, 0.5303175, 0.7682658), (0.5589504, 0.5303175, 0.83173543)]
                            float3 xformOp:translate:pivot = (0.80000055, 0.56041497, 0.80000055)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_2x2_ball_recept_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_2x2_ball_recept_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.4001725, 0.5605411, 0.80019325)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_brick_2x3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_brick_2x3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_hinge_brick_1x2_looking_1fve_grp"
                    {
                        def Xform "Wall_e_RIG_v001_hinge_brick_1x2_looking_1fve_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.1149706, 0.56041497, 0.38824388)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_hinge_brick_1x2_looking_2fve_grp"
                    {
                        def Xform "Wall_e_RIG_v001_hinge_brick_1x2_looking_2fve_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.1330266, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_hinge_brick_1x4_l_1fve_grp"
                    {
                        def Xform "Wall_e_RIG_v001_hinge_brick_1x4_l_1fve_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (2.2106109, 0.56041497, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bracket_1x2_inverted_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bracket_1x2_inverted_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bracket_1x2_2x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bracket_1x2_2x2_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bracket_1x2_2x2_inverted_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bracket_1x2_2x2_inverted_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7999789, 0.8003348, 0.56018215)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bracket_1x2_2x4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bracket_1x2_2x4_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.5997185, 0.8807498, 0.56018215)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bracket_5x2x1_2_holes_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bracket_5x2x1_2_holes_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79767257, 0.7218869, 2.0010352)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_panel_1x1x1_corner_grp"
                    {
                        def Xform "Wall_e_RIG_v001_panel_1x1x1_corner_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_panel_1x2x2_hollow_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_panel_1x2x2_hollow_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_panel_1x2x3_solid_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_lightGray_panel_1x2x3_solid_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8, 1.0401824, 0.4)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_30_1x1x2_3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_30_1x1x2_3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_30_1x2x2_3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_30_1x2x2_3_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.79997885, 0.3200088, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_2_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_3_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_3_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_3_stud_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_3_stud_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2802253, 0.32, 0.32)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_4_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_4_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_8_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_8_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_connector_2l_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_connector_2l_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.3937913, 0.4, 0.4)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_pin_friction_r_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_pin_friction_r_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7999985, 0.31000003, 0.32000002)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_and_pin_connector_1_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_and_pin_connector_1_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.3997633, 0.35976946, 0.76028866)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_connector_double_flexible_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_connector_double_flexible_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7603195, 0.36073422, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_connector_double_flexible_thin_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_connector_double_flexible_thin_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7603195, 0.36073422, 0.40000007)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_and_bar_connector_perpendicular_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_and_bar_connector_perpendicular_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.39997885, 0.8178586, 0.39999387)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_and_pin_connector_perpendicular_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_and_pin_connector_perpendicular_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_axle_and_pin_connector_perpendicular_3l_2_pin_holes_grp"
                    {
                        def Xform "Wall_e_RIG_v001_axle_and_pin_connector_perpendicular_3l_2_pin_holes_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.39997885, 1.1542406, 0.39999387)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_2x1_45_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_2x1_45_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_3x1_33_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_3x1_33_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.39999995, 0.56041497, 1.1999619)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_curved_2x1_no_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_curved_2x1_no_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.4, 0, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_curved_2x2_no_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_curved_2x2_no_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.8000195, 0.5594127, 0.8000082)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_curved_3x1_no_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_curved_3x1_no_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.4, 0, 0.8)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_curved_4x1_double_no_studs_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_curved_4x1_double_no_studs_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.4, 0.31993893, 1.6000001)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_2x1_inverted_45_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_2x1_inverted_45_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_2x2_inverted_45_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_2x2_inverted_45_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_2x2_inverted_45_double_convex_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_2x2_inverted_45_double_convex_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.7999789, 0.56041497, 0.79994315)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_slope_3x1_inverted_33_grp"
                    {
                        def Xform "Wall_e_RIG_v001_slope_3x1_inverted_33_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.39994502, 0.56041497, 1.2001925)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_pin_1x2_grp"
                    {
                        def Xform "Wall_e_RIG_v001_pin_1x2_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_pin_2l_grp"
                    {
                        def Xform "Wall_e_RIG_v001_pin_2l_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_pin_3l_grp"
                    {
                        def Xform "Wall_e_RIG_v001_pin_3l_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2, 0.31000003, 0.32000002)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_pin_3l_friction_bridge_grp"
                    {
                        def Xform "Wall_e_RIG_v001_pin_3l_friction_bridge_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.1991435, 0.35907802, 0.35883915)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_dish_2x2_inverted_grp"
                    {
                        def Xform "Wall_e_RIG_v001_dish_2x2_inverted_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_dish_3x3_inverted_grp"
                    {
                        def Xform "Wall_e_RIG_v001_dish_3x3_inverted_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.199997, 0.64, 1.199997)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technics_bush_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technics_bush_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.3600055, 0.36041513, 0.4000001)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technics_bush_1_2_smooth_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technics_bush_1_2_smooth_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.35997334, 0.35999995, 0.2001722)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_wheel_small_6_holes_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_wheel_small_6_holes_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2797494, 1.2589998, 0.6008633)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_tread_sprocket_wheel_small_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_tread_sprocket_wheel_small_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.2797492, 1.259, 0.40085298)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_1x3_thin_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x3_thin_001_mesh"
                        {
                            double3 xformOp:translate = (-0.155, -0.11492031862744634, 0)
                            float3 xformOp:translate:pivot = (0.5124999, 0.5156669, 1.1598299)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_1x3_thick_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x3_thick_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.35749993, 0.40031186, 1.1598299)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_1x5_thick_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x5_thick_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.35749993, 0.40031186, 1.9598299)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_1x9_thick_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x9_thick_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.35749993, 0.40031186, 3.55983)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_3x5_quarter_ellipse_thin_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_3x5_quarter_ellipse_thin_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (1.1493192, 0.20010182, 1.9739517)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_lever_small_base_grp"
                    {
                        def Xform "Wall_e_RIG_v001_lever_small_base_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.32, 0, 0.32)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

                            def Mesh "Wall_e_RIG_v001_lever_small_base_001_meshShape" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform bool doubleSided = 1
                                float3[] extent = [(-0.0112861395, 0, -0.0025085509), (0.6512861, 0.55736154, 0.6425086)]
                                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                int[] faceVertexIndices = [9, 161, 162, 25, 162, 163, 10, 25, 10, 163, 164, 27, 164, 165, 11, 27, 11, 165, 166, 29, 166, 167, 12, 29, 12, 167, 168, 31, 168, 169, 13, 31, 14, 171, 156, 19, 156, 157, 15, 19, 15, 157, 158, 21, 158, 159, 8, 21, 25, 10, 35, 100, 10, 27, 36, 35, 27, 11, 37, 36, 11, 29, 38, 37, 29, 12, 39, 38, 14, 19, 43, 42, 19, 15, 44, 43, 15, 21, 45, 44, 21, 8, 32, 45, 153, 154, 47, 106, 100, 35, 140, 141, 35, 36, 139, 140, 36, 37, 138, 139, 37, 38, 137, 138, 38, 39, 136, 137, 39, 94, 135, 136, 146, 147, 102, 55, 148, 149, 57, 56, 149, 150, 58, 57, 150, 151, 59, 58, 151, 152, 46, 59, 106, 47, 61, 105, 99, 49, 63, 98, 49, 50, 64, 63, 50, 51, 65, 64, 51, 52, 66, 65, 52, 53, 67, 66, 53, 95, 96, 67, 55, 102, 103, 69, 56, 57, 71, 70, 57, 58, 72, 71, 58, 59, 73, 72, 59, 46, 60, 73, 105, 61, 75, 104, 98, 63, 77, 97, 63, 64, 78, 77, 78, 64, 65, 66, 66, 67, 77, 78, 67, 96, 97, 77, 69, 103, 104, 75, 70, 71, 79, 74, 79, 71, 72, 73, 73, 60, 74, 79, 41, 17, 101, 47, 154, 155, 120, 34, 142, 143, 117, 134, 40, 112, 133, 146, 55, 109, 145, 61, 47, 120, 121, 48, 62, 115, 116, 68, 54, 113, 114, 55, 69, 108, 109, 75, 61, 121, 90, 62, 76, 91, 115, 76, 68, 114, 91, 69, 75, 90, 108, 33, 128, 129, 119, 80, 130, 131, 118, 124, 81, 111, 123, 127, 41, 110, 126, 9, 25, 130, 80, 23, 128, 33, 23, 33, 107, 31, 13, 81, 124, 135, 94, 40, 134, 96, 95, 54, 68, 97, 96, 68, 76, 62, 98, 97, 76, 48, 99, 98, 62, 34, 100, 141, 142, 25, 100, 34, 170, 171, 14, 17, 17, 14, 42, 101, 102, 147, 148, 56, 103, 102, 56, 70, 104, 103, 70, 74, 60, 105, 104, 74, 46, 106, 105, 60, 152, 153, 106, 46, 32, 8, 23, 107, 159, 160, 23, 8, 109, 108, 90, 89, 145, 109, 89, 144, 126, 110, 88, 125, 123, 111, 93, 122, 133, 112, 86, 132, 114, 113, 87, 91, 116, 115, 91, 85, 117, 143, 132, 84, 118, 131, 122, 92, 119, 129, 125, 82, 120, 155, 144, 83, 121, 120, 83, 90, 112, 123, 122, 86, 40, 124, 123, 112, 111, 126, 125, 93, 81, 127, 126, 111, 13, 17, 127, 81, 13, 169, 170, 17, 160, 161, 9, 23, 128, 23, 9, 80, 129, 128, 80, 118, 125, 129, 118, 92, 130, 25, 34, 131, 130, 34, 117, 122, 131, 117, 84, 40, 31, 124, 39, 12, 31, 94, 31, 40, 94, 17, 41, 127, 113, 133, 132, 87, 54, 134, 133, 113, 95, 135, 134, 54, 136, 135, 95, 53, 137, 136, 53, 52, 138, 137, 52, 51, 139, 138, 51, 50, 140, 139, 50, 49, 141, 140, 49, 99, 142, 141, 99, 48, 143, 142, 48, 116, 132, 143, 116, 85, 110, 145, 144, 88, 41, 146, 145, 110, 41, 101, 147, 146, 148, 147, 101, 42, 42, 43, 149, 148, 43, 44, 150, 149, 44, 45, 151, 150, 45, 32, 152, 151, 32, 107, 153, 152, 107, 33, 154, 153, 155, 154, 33, 119, 144, 155, 119, 82, 18, 7, 157, 156, 158, 157, 7, 20, 20, 0, 159, 158, 0, 22, 160, 159, 22, 1, 161, 160, 162, 161, 1, 24, 24, 2, 163, 162, 164, 163, 2, 26, 26, 3, 165, 164, 166, 165, 3, 28, 28, 4, 167, 166, 168, 167, 4, 30, 30, 5, 169, 168, 170, 169, 5, 16, 16, 6, 171, 170, 156, 171, 6, 18, 22, 0, 233, 234, 24, 1, 235, 236, 26, 2, 221, 222, 3, 26, 222, 223, 28, 3, 223, 224, 4, 28, 224, 225, 30, 4, 225, 226, 16, 5, 227, 228, 18, 6, 229, 230, 7, 18, 230, 231, 20, 7, 231, 232, 0, 20, 232, 233, 2, 24, 236, 221, 6, 16, 228, 229, 5, 30, 226, 227, 1, 22, 234, 235, 173, 172, 265, 266, 175, 174, 267, 268, 177, 176, 253, 254, 178, 177, 254, 255, 179, 178, 255, 256, 180, 179, 256, 257, 181, 180, 257, 258, 183, 182, 259, 260, 185, 184, 261, 262, 186, 185, 262, 263, 187, 186, 263, 264, 172, 187, 264, 265, 176, 175, 268, 253, 184, 183, 260, 261, 182, 181, 258, 259, 174, 173, 266, 267, 189, 188, 204, 205, 191, 190, 206, 207, 193, 192, 208, 209, 194, 193, 209, 210, 195, 194, 210, 211, 196, 195, 211, 212, 197, 196, 212, 213, 199, 198, 214, 215, 201, 200, 216, 217, 202, 201, 217, 218, 203, 202, 218, 219, 188, 203, 219, 204, 192, 191, 207, 208, 200, 199, 215, 216, 198, 197, 213, 214, 190, 189, 205, 206, 220, 210, 209, 208, 220, 212, 211, 210, 220, 218, 217, 216, 220, 204, 219, 218, 220, 208, 207, 206, 220, 216, 215, 214, 220, 214, 213, 212, 220, 206, 205, 204, 222, 221, 237, 238, 223, 222, 238, 239, 224, 223, 239, 240, 225, 224, 240, 241, 226, 225, 241, 242, 227, 226, 242, 243, 228, 227, 243, 244, 229, 228, 244, 245, 230, 229, 245, 246, 231, 230, 246, 247, 232, 231, 247, 248, 233, 232, 248, 249, 234, 233, 249, 250, 235, 234, 250, 251, 236, 235, 251, 252, 221, 236, 252, 237, 238, 237, 176, 177, 239, 238, 177, 178, 240, 239, 178, 179, 241, 240, 179, 180, 242, 241, 180, 181, 243, 242, 181, 182, 244, 243, 182, 183, 245, 244, 183, 184, 246, 245, 184, 185, 247, 246, 185, 186, 248, 247, 186, 187, 249, 248, 187, 172, 250, 249, 172, 173, 251, 250, 173, 174, 252, 251, 174, 175, 237, 252, 175, 176, 254, 253, 284, 269, 255, 254, 269, 270, 256, 255, 270, 271, 257, 256, 271, 272, 258, 257, 272, 273, 259, 258, 273, 274, 260, 259, 274, 275, 261, 260, 275, 276, 262, 261, 276, 277, 263, 262, 277, 278, 264, 263, 278, 279, 265, 264, 279, 280, 266, 265, 280, 281, 267, 266, 281, 282, 268, 267, 282, 283, 253, 268, 283, 284, 270, 269, 193, 194, 271, 270, 194, 195, 272, 271, 195, 196, 273, 272, 196, 197, 274, 273, 197, 198, 275, 274, 198, 199, 276, 275, 199, 200, 277, 276, 200, 201, 278, 277, 201, 202, 279, 278, 202, 203, 280, 279, 203, 188, 281, 280, 188, 189, 282, 281, 189, 190, 283, 282, 190, 191, 284, 283, 191, 192, 269, 284, 192, 193]
                                rel material:binding = </Cache1/mtl/initialShadingGroup>
                                point3f[] points = [(0.5335753, 0, 0.06306535), (0.31994495, 0, -0.0025085509), (0.10642472, 0, 0.06306535), (-0.0112861395, 0, 0.31999996), (0.10521148, 0, 0.5794208), (0.31994495, 0, 0.6425086), (0.5347885, 0, 0.5794208), (0.6512861, 0, 0.31999996), (0.5335753, 0.27875993, 0.06306535), (0.31994495, 0.27875993, -0.0025085509), (0.10642472, 0.27875993, 0.06306535), (-0.0112861395, 0.27875993, 0.31999996), (0.10521148, 0.27875993, 0.5794208), (0.31994495, 0.27875993, 0.6425086), (0.5347885, 0.27875993, 0.5794208), (0.6512861, 0.27875993, 0.31999996), (0.40853363, 0, 0.6344751), (0.40853363, 0.27875993, 0.6344751), (0.6251117, 0, 0.44638136), (0.6251117, 0.27875993, 0.44638136), (0.6251117, 0, 0.19361858), (0.6251117, 0.27875993, 0.19361858), (0.40848136, 0, 0.005614102), (0.40848136, 0.27875993, 0.005614102), (0.23175526, 0, 0.0054953396), (0.23175526, 0.27875993, 0.0054953396), (0.014888287, 0, 0.19361858), (0.014888287, 0.27875993, 0.19361858), (0.014888287, 0, 0.44638136), (0.014888287, 0.27875993, 0.44638136), (0.23170593, 0, 0.63458884), (0.23170593, 0.27875993, 0.63458884), (0.52500415, 0.3279423, 0.073376566), (0.40223885, 0.3279423, 0.016178787), (0.23765118, 0.3279423, 0.016178787), (0.11499585, 0.3279423, 0.073376566), (0.027132899, 0.3279423, 0.19869047), (0.002008915, 0.3279423, 0.31999996), (0.027132899, 0.3279423, 0.44130948), (0.1138313, 0.3279423, 0.5690099), (0.23765118, 0.3279423, 0.62382114), (0.40223885, 0.3279423, 0.62382114), (0.5261686, 0.3279423, 0.5690099), (0.6128671, 0.3279423, 0.44130948), (0.6379911, 0.3279423, 0.31999996), (0.612867, 0.3279423, 0.19869047), (0.4755659, 0.4697301, 0.1406338), (0.40223885, 0.4697301, 0.09903462), (0.23765118, 0.4697301, 0.09903462), (0.16443409, 0.4697301, 0.1406338), (0.09775992, 0.4697301, 0.23177308), (0.078694776, 0.4697301, 0.31999996), (0.09775992, 0.4697301, 0.40822682), (0.16355039, 0.4697301, 0.5011018), (0.23765118, 0.4697301, 0.54096526), (0.40223885, 0.4697301, 0.54096526), (0.47644952, 0.4697301, 0.5011018), (0.54224, 0.4697301, 0.40822682), (0.56130517, 0.4697301, 0.31999996), (0.54223996, 0.4697301, 0.23177308), (0.43825722, 0.5172586, 0.20033744), (0.40223885, 0.5172586, 0.1725849), (0.23765118, 0.5172586, 0.1725849), (0.20174272, 0.5172586, 0.20033744), (0.15105869, 0.5172586, 0.26114017), (0.13656588, 0.5172586, 0.31999996), (0.15105869, 0.5172586, 0.37885982), (0.20107093, 0.5172586, 0.44082046), (0.23765118, 0.5172586, 0.4674151), (0.40223885, 0.5172586, 0.4674151), (0.43892896, 0.5172586, 0.44082046), (0.48894128, 0.5172586, 0.37885982), (0.50343406, 0.5172586, 0.31999996), (0.4889412, 0.5172586, 0.26114017), (0.41946867, 0.55232286, 0.31999883), (0.40223885, 0.55736154, 0.31999928), (0.23765118, 0.55736154, 0.31999928), (0.22053126, 0.55296034, 0.31999883), (0.18543589, 0.5432879, 0.31999943), (0.45456398, 0.5426309, 0.31999943), (0.31994495, 0.3279423, 0.014773786), (0.31994495, 0.3279423, 0.62522626), (0.40223885, 0.3279423, 0.31999695), (0.40223885, 0.4697301, 0.3199978), (0.23765118, 0.3279423, 0.31999695), (0.23765118, 0.4697301, 0.3199978), (0.23765118, 0.3279423, 0.32000303), (0.23765118, 0.4697301, 0.3200022), (0.40223885, 0.3279423, 0.32000303), (0.40223885, 0.4697301, 0.3200022), (0.40223885, 0.5533026, 0.31999996), (0.23765118, 0.5533026, 0.31999996), (0.31994495, 0.3279423, 0.31999695), (0.31994495, 0.3279423, 0.32000306), (0.2264617, 0.3279423, 0.6201066), (0.22975665, 0.4697301, 0.5382637), (0.23509307, 0.5172586, 0.46561274), (0.23513901, 0.5563592, 0.31999922), (0.23513901, 0.5172586, 0.1744657), (0.22983274, 0.4697301, 0.10185383), (0.22655639, 0.3279423, 0.020055115), (0.41408622, 0.3279423, 0.61988807), (0.4105975, 0.46973002, 0.5381049), (0.40494737, 0.5172586, 0.46550676), (0.4048987, 0.5562545, 0.31999922), (0.4048987, 0.5172586, 0.17457628), (0.41051695, 0.4697301, 0.10201958), (0.41398597, 0.3279423, 0.020283014), (0.40223885, 0.5116943, 0.46239316), (0.40223885, 0.4697301, 0.53343785), (0.40223885, 0.3279423, 0.61347103), (0.31994495, 0.3279423, 0.6148283), (0.23765118, 0.3279423, 0.61347103), (0.23765118, 0.4697301, 0.53343785), (0.23765118, 0.5116943, 0.46239316), (0.23765118, 0.5116943, 0.17921485), (0.23765118, 0.46973002, 0.10897237), (0.23765118, 0.3279423, 0.029842913), (0.31994495, 0.3279423, 0.028501123), (0.40223885, 0.3279423, 0.029842913), (0.40223885, 0.46973002, 0.10897237), (0.40223885, 0.5116943, 0.17921485), (0.2481364, 0.3279423, 0.31999695), (0.24871172, 0.3279423, 0.6136534), (0.24871172, 0.3279423, 0.62400997), (0.39095, 0.3279423, 0.32000303), (0.39095, 0.32794225, 0.61365724), (0.39095, 0.3279423, 0.6240139), (0.3904731, 0.3279423, 0.01597789), (0.3904731, 0.32794225, 0.029651076), (0.2481364, 0.3279423, 0.015999764), (0.2481364, 0.3279423, 0.029671967), (0.23831397, 0.40731853, 0.32002574), (0.23831397, 0.40731853, 0.5864649), (0.23831397, 0.40726995, 0.595965), (0.22631337, 0.40758273, 0.5973903), (0.13094208, 0.4075729, 0.55082095), (0.050600052, 0.40672886, 0.4329352), (0.027164876, 0.40644038, 0.31999996), (0.050600052, 0.40672886, 0.20706472), (0.13198711, 0.40753135, 0.091353655), (0.22779527, 0.40773788, 0.042343527), (0.23835665, 0.40731853, 0.043966085), (0.23831397, 0.40731853, 0.05347359), (0.4015742, 0.40777108, 0.31998995), (0.4015742, 0.40777108, 0.587237), (0.4015742, 0.4074959, 0.59590805), (0.41423643, 0.407766, 0.5970746), (0.5089934, 0.40777108, 0.5507433), (0.5893085, 0.40692693, 0.43289736), (0.61273587, 0.40663853, 0.31999996), (0.58930844, 0.40692693, 0.20710254), (0.5079489, 0.40772945, 0.091430575), (0.41266897, 0.40793297, 0.04264462), (0.4015488, 0.40753803, 0.044032514), (0.4015742, 0.40777108, 0.055802763), (0.6251117, 0.007751625, 0.44638136), (0.6512861, 0.007751625, 0.31999996), (0.6251117, 0.007751625, 0.19361858), (0.5335753, 0.007751625, 0.06306535), (0.40848136, 0.007751627, 0.005614102), (0.31994495, 0.0077516264, -0.0025085509), (0.23175526, 0.007751627, 0.0054953396), (0.10642472, 0.007751625, 0.06306535), (0.014888287, 0.007751625, 0.19361858), (-0.0112861395, 0.007751625, 0.31999996), (0.014888287, 0.007751625, 0.44638136), (0.10521148, 0.007751625, 0.5794208), (0.23170593, 0.007751627, 0.63458884), (0.31994495, 0.0077516264, 0.6425086), (0.40853363, 0.007751627, 0.6344751), (0.5347885, 0.007751625, 0.5794208), (0.48652554, 0, 0.119666904), (0.38897723, 0, 0.07487193), (0.31994495, 0, 0.068538636), (0.25118303, 0, 0.07477933), (0.15347442, 0, 0.119666904), (0.08210303, 0, 0.22145982), (0.06169468, 0, 0.31999996), (0.08210303, 0, 0.41854006), (0.15252839, 0, 0.5222716), (0.25114456, 0, 0.56528634), (0.31994495, 0, 0.57146144), (0.38901794, 0, 0.56519765), (0.4874715, 0, 0.5222716), (0.5578969, 0, 0.41854006), (0.57830524, 0, 0.31999996), (0.5578969, 0, 0.22145982), (0.48652554, 0.25178668, 0.119666904), (0.38897723, 0.25178668, 0.07487193), (0.31994495, 0.25178668, 0.068538636), (0.25118303, 0.25178668, 0.07477933), (0.15347442, 0.25178668, 0.119666904), (0.08210303, 0.25178668, 0.22145982), (0.06169468, 0.25178668, 0.31999996), (0.08210303, 0.25178668, 0.41854006), (0.15252839, 0.25178668, 0.5222716), (0.25114456, 0.25178668, 0.56528634), (0.31994495, 0.25178668, 0.57146144), (0.38901794, 0.25178668, 0.56519765), (0.4874715, 0.25178668, 0.5222716), (0.5578969, 0.25178668, 0.41854006), (0.57830524, 0.25178668, 0.31999996), (0.5578969, 0.25178668, 0.22145982), (0.4779232, 0.25178668, 0.13001558), (0.38541123, 0.25178668, 0.08753461), (0.31994495, 0.25178668, 0.081528485), (0.2547351, 0.25178668, 0.08744681), (0.1620767, 0.25178668, 0.13001558), (0.09439218, 0.25178668, 0.22655016), (0.075038046, 0.25178668, 0.31999996), (0.09439218, 0.25178668, 0.41344973), (0.16117954, 0.25178668, 0.5118227), (0.2546986, 0.25178668, 0.55261546), (0.31994495, 0.25178668, 0.55847156), (0.38544977, 0.25178668, 0.55253136), (0.47882032, 0.25178668, 0.5118227), (0.54560775, 0.25178668, 0.41344973), (0.5649618, 0.25178668, 0.31999996), (0.54560775, 0.25178668, 0.22655016), (0.31997713, 0.25178668, 0.3202378), (0.108801365, 0, 0.065924495), (0.018283516, 0, 0.19502494), (-0.007599652, 0, 0.31999996), (0.018283516, 0, 0.44497502), (0.1076016, 0, 0.57653403), (0.23268783, 0, 0.63108814), (0.31994495, 0, 0.6389197), (0.40754783, 0, 0.63097566), (0.53239834, 0, 0.57653403), (0.62171644, 0, 0.44497502), (0.6475996, 0, 0.31999996), (0.62171644, 0, 0.19502494), (0.5311986, 0, 0.065924495), (0.40749615, 0, 0.009112567), (0.31994495, 0, 0.0010803044), (0.23273662, 0, 0.008995116), (0.1506993, 0, 0.11632839), (0.07813853, 0, 0.21981767), (0.057390064, 0, 0.31999996), (0.07813853, 0, 0.42018223), (0.1497375, 0, 0.5256424), (0.249998, 0, 0.56937397), (0.31994495, 0, 0.575652), (0.39016902, 0, 0.56928384), (0.4902624, 0, 0.5256424), (0.5618614, 0, 0.42018223), (0.58260983, 0, 0.31999996), (0.5618614, 0, 0.21981767), (0.48930067, 0, 0.11632839), (0.39012766, 0, 0.07078691), (0.31994495, 0, 0.06434807), (0.25003713, 0, 0.07069278), (0.15347442, 0.0083256075, 0.119666904), (0.082103014, 0.0083256075, 0.22145982), (0.06169468, 0.0083256075, 0.31999996), (0.082103014, 0.0083256075, 0.41854006), (0.15252838, 0.0083256075, 0.5222716), (0.25114456, 0.0083256075, 0.56528634), (0.31994495, 0.0083256075, 0.57146144), (0.38901794, 0.0083256075, 0.56519765), (0.4874715, 0.0083256075, 0.5222716), (0.5578969, 0.0083256075, 0.41854006), (0.57830524, 0.0083256075, 0.31999996), (0.5578969, 0.0083256075, 0.22145982), (0.48652554, 0.0083256075, 0.119666904), (0.38897723, 0.0083256075, 0.07487193), (0.31994495, 0.0083256075, 0.068538636), (0.25118303, 0.0083256075, 0.0747793), (0.082103014, 0.23427953, 0.22145982), (0.06169468, 0.23427953, 0.31999996), (0.082103014, 0.23427953, 0.41854006), (0.15252839, 0.23427953, 0.5222716), (0.25114456, 0.23427953, 0.56528634), (0.31994495, 0.23427953, 0.57146144), (0.38901794, 0.23427953, 0.56519765), (0.4874715, 0.23427953, 0.5222716), (0.5578969, 0.23427953, 0.41854006), (0.57830524, 0.23427953, 0.31999996), (0.5578969, 0.23427953, 0.22145982), (0.48652554, 0.23427953, 0.119666904), (0.38897723, 0.23427953, 0.07487193), (0.31994495, 0.23427953, 0.068538636), (0.25118303, 0.23427953, 0.07477933), (0.15347442, 0.23427953, 0.119666904)]
                            }

                            def Mesh "Wall_e_RIG_v001_lever_small_lever_001_mesh" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform bool doubleSided = 1
                                float3[] extent = [(0.120227605, 0.19332093, 0.12613824), (0.5197433, 1.9530711, 0.52565396)]
                                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                                int[] faceVertexIndices = [0, 1, 9, 8, 1, 2, 10, 9, 2, 3, 11, 10, 3, 4, 12, 11, 4, 5, 13, 12, 5, 6, 14, 13, 6, 7, 15, 14, 7, 0, 8, 15, 16, 17, 61, 62, 17, 18, 60, 61, 18, 19, 59, 60, 19, 20, 58, 59, 20, 21, 65, 58, 21, 22, 64, 65, 22, 23, 63, 64, 23, 16, 62, 63, 17, 16, 32, 33, 18, 17, 33, 34, 19, 18, 34, 35, 20, 19, 35, 36, 21, 20, 36, 37, 22, 21, 37, 38, 23, 22, 38, 39, 16, 23, 39, 32, 24, 25, 41, 40, 25, 26, 42, 41, 26, 27, 43, 42, 27, 28, 44, 43, 28, 29, 45, 44, 29, 30, 46, 45, 30, 31, 47, 46, 31, 24, 40, 47, 48, 33, 32, 39, 48, 35, 34, 33, 48, 37, 36, 35, 48, 39, 38, 37, 49, 41, 42, 43, 49, 43, 44, 45, 49, 45, 46, 47, 49, 47, 40, 41, 51, 50, 28, 27, 52, 51, 27, 26, 53, 52, 26, 25, 54, 53, 25, 24, 55, 54, 24, 31, 56, 55, 31, 30, 57, 56, 30, 29, 50, 57, 29, 28, 59, 58, 50, 51, 60, 59, 51, 52, 61, 60, 52, 53, 62, 61, 53, 54, 63, 62, 54, 55, 64, 63, 55, 56, 65, 64, 56, 57, 58, 65, 57, 50, 66, 80, 86, 83, 80, 67, 81, 86, 86, 81, 69, 82, 83, 86, 82, 68, 68, 82, 87, 74, 82, 69, 84, 87, 87, 84, 71, 85, 74, 87, 85, 70, 70, 85, 88, 77, 85, 71, 75, 88, 88, 75, 73, 76, 77, 88, 76, 72, 72, 76, 89, 79, 76, 73, 78, 89, 89, 78, 67, 80, 79, 89, 80, 66, 67, 78, 90, 81, 78, 73, 75, 90, 90, 75, 71, 84, 81, 90, 84, 69, 72, 79, 91, 77, 79, 66, 83, 91, 91, 83, 68, 74, 77, 91, 74, 70]
                                rel material:binding = </Cache1/mtl/initialShadingGroup>
                                point3f[] points = [(0.38249627, 0.49882853, 0.26338533), (0.31998548, 0.49882853, 0.23749252), (0.2574747, 0.49882853, 0.26338533), (0.23158188, 0.49882853, 0.3258961), (0.2574747, 0.49882853, 0.3884069), (0.31998548, 0.49882853, 0.41429973), (0.38249627, 0.49882853, 0.3884069), (0.4083891, 0.49882853, 0.3258961), (0.38249627, 1.6233685, 0.26338533), (0.31998548, 1.6233685, 0.23749252), (0.2574747, 1.6233685, 0.26338533), (0.23158188, 1.6233685, 0.3258961), (0.2574747, 1.6233685, 0.3884069), (0.31998548, 1.6233685, 0.41429973), (0.38249627, 1.6233685, 0.3884069), (0.4083891, 1.6233685, 0.3258961), (0.23825353, 0.24538189, 0.20020986), (0.23825353, 0.3710681, 0.14814892), (0.23825353, 0.49675435, 0.20020986), (0.23825353, 0.5488154, 0.3258961), (0.23825353, 0.49675435, 0.45158237), (0.23825353, 0.3710681, 0.5036433), (0.23825353, 0.24538188, 0.45158237), (0.23825353, 0.19332093, 0.3258961), (0.4013853, 0.24538189, 0.20020986), (0.4013853, 0.3710681, 0.14814892), (0.4013853, 0.49675435, 0.20020986), (0.4013853, 0.5488154, 0.3258961), (0.4013853, 0.49675435, 0.45158237), (0.4013853, 0.3710681, 0.5036433), (0.4013853, 0.24538188, 0.45158237), (0.4013853, 0.19332093, 0.3258961), (0.23825353, 0.25209743, 0.2069254), (0.23825353, 0.3710681, 0.15764616), (0.23825353, 0.4900388, 0.2069254), (0.23825353, 0.539318, 0.3258961), (0.23825353, 0.4900388, 0.44486678), (0.23825353, 0.3710681, 0.49414605), (0.23825353, 0.25209743, 0.44486678), (0.23825353, 0.20281817, 0.3258961), (0.4013853, 0.25209743, 0.2069254), (0.4013853, 0.3710681, 0.15764616), (0.4013853, 0.4900388, 0.2069254), (0.4013853, 0.539318, 0.3258961), (0.4013853, 0.4900388, 0.44486678), (0.4013853, 0.3710681, 0.49414605), (0.4013853, 0.25209743, 0.44486678), (0.4013853, 0.20281817, 0.3258961), (0.23825353, 0.37106794, 0.3258961), (0.4013853, 0.37106794, 0.3258961), (0.39655617, 0.49675435, 0.45158237), (0.39655617, 0.5488154, 0.3258961), (0.39655617, 0.49675435, 0.20020986), (0.39655617, 0.3710681, 0.14814892), (0.39655617, 0.24538189, 0.20020986), (0.39655617, 0.19332093, 0.3258961), (0.39655617, 0.24538188, 0.45158237), (0.39655617, 0.3710681, 0.5036433), (0.24400437, 0.49675435, 0.45158237), (0.24400437, 0.5488154, 0.3258961), (0.24400437, 0.49675435, 0.20020984), (0.24400437, 0.3710681, 0.14814892), (0.24400437, 0.24538188, 0.20020984), (0.24400437, 0.19332093, 0.3258961), (0.24400437, 0.24538195, 0.45158237), (0.24400437, 0.3710681, 0.5036433), (0.21470943, 1.6480371, 0.43117216), (0.42526153, 1.6480371, 0.43117216), (0.21470943, 1.8585893, 0.43117213), (0.42526153, 1.8585893, 0.43117216), (0.21470943, 1.8585899, 0.22062007), (0.42526153, 1.8585893, 0.22062007), (0.21470943, 1.6480371, 0.22062008), (0.42526153, 1.6480371, 0.22062007), (0.17786281, 1.8954365, 0.3258961), (0.46210814, 1.7533132, 0.18377344), (0.31998548, 1.6111906, 0.18377344), (0.17786281, 1.7533132, 0.18377344), (0.46210814, 1.6111906, 0.3258961), (0.17786281, 1.6111906, 0.3258961), (0.31998548, 1.6111906, 0.46801877), (0.46210814, 1.7533132, 0.46801877), (0.31998548, 1.8954365, 0.46801877), (0.17786281, 1.7533132, 0.46801877), (0.46210814, 1.8954365, 0.3258961), (0.31998548, 1.8954365, 0.18377344), (0.31998548, 1.7533132, 0.52565396), (0.31998548, 1.9530711, 0.3258961), (0.31998548, 1.7533132, 0.12613824), (0.31998548, 1.5535553, 0.3258961), (0.5197433, 1.7533132, 0.3258961), (0.120227605, 1.7533132, 0.3258961)]
                                texCoord2f[] primvars:st = [(0.375, 0.3125), (0.40625, 0.3125), (0.4375, 0.3125), (0.46875, 0.3125), (0.5, 0.3125), (0.53125, 0.3125), (0.5625, 0.3125), (0.59375, 0.3125), (0.625, 0.3125), (0.375, 0.68843985), (0.40625, 0.68843985), (0.4375, 0.68843985), (0.46875, 0.68843985), (0.5, 0.68843985), (0.53125, 0.68843985), (0.5625, 0.68843985), (0.59375, 0.68843985), (0.625, 0.68843985), (0.375, 0.3125), (0.40625, 0.3125), (0.40625, 0.32575285), (0.375, 0.32575285), (0.4375, 0.3125), (0.4375, 0.32575285), (0.46875, 0.3125), (0.46875003, 0.32575285), (0.5, 0.3125), (0.5, 0.32575285), (0.53125, 0.3125), (0.53125, 0.32575285), (0.5625, 0.3125), (0.5625, 0.32575285), (0.59375, 0.3125), (0.59375, 0.32575285), (0.625, 0.3125), (0.625, 0.32575285), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.5, 1), (0, 0), (0, 0), (1, 0), (0.46875, 0.677311), (0.5, 0.677311), (0.5, 0.68843985), (0.46875, 0.68843985), (0.4375, 0.677311), (0.4375, 0.68843985), (0.40625, 0.677311), (0.40625, 0.68843985), (0.375, 0.677311), (0.375, 0.68843985), (0.59375, 0.677311), (0.625, 0.677311), (0.625, 0.68843985), (0.59375, 0.68843985), (0.5625, 0.677311), (0.5625, 0.68843985), (0.53125, 0.677311), (0.53125, 0.68843985), (0.375, 0), (0.5, 0), (0.5, 0.125), (0.375, 0.125), (0.625, 0), (0.625, 0.125), (0.625, 0.25), (0.5, 0.25), (0.375, 0.25), (0.5, 0.375), (0.375, 0.375), (0.625, 0.375), (0.625, 0.5), (0.5, 0.5), (0.375, 0.5), (0.5, 0.625), (0.375, 0.625), (0.625, 0.625), (0.625, 0.75), (0.5, 0.75), (0.375, 0.75), (0.5, 0.875), (0.375, 0.875), (0.625, 0.875), (0.625, 1), (0.5, 1), (0.375, 1), (0.75, 0), (0.75, 0.125), (0.875, 0), (0.875, 0.125), (0.875, 0.25), (0.75, 0.25), (0.125, 0), (0.25, 0), (0.25, 0.125), (0.125, 0.125), (0.25, 0.25), (0.125, 0.25)] (
                                    customData = {
                                        dictionary Maya = {
                                            token name = "map1"
                                        }
                                    }
                                    interpolation = "faceVarying"
                                )
                                int[] primvars:st:indices = [0, 1, 10, 9, 1, 2, 11, 10, 2, 3, 12, 11, 3, 4, 13, 12, 4, 5, 14, 13, 5, 6, 15, 14, 6, 7, 16, 15, 7, 8, 17, 16, 18, 19, 20, 21, 19, 22, 23, 20, 22, 24, 25, 23, 24, 26, 27, 25, 26, 28, 29, 27, 28, 30, 31, 29, 30, 32, 33, 31, 32, 34, 35, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 132, 135, 137, 138, 136, 137, 139, 140, 138, 139, 141, 142, 143, 144, 145, 146, 142, 145, 147, 148, 146, 147, 149, 133, 148, 149, 134, 25, 27, 133, 132, 23, 25, 132, 136, 20, 23, 136, 138, 21, 20, 138, 140, 33, 35, 143, 142, 31, 33, 142, 146, 29, 31, 146, 148, 27, 29, 148, 133, 150, 151, 152, 153, 151, 154, 155, 152, 152, 155, 156, 157, 153, 152, 157, 158, 158, 157, 159, 160, 157, 156, 161, 159, 159, 161, 162, 163, 160, 159, 163, 164, 164, 163, 165, 166, 163, 162, 167, 165, 165, 167, 168, 169, 166, 165, 169, 170, 170, 169, 171, 172, 169, 168, 173, 171, 171, 173, 174, 175, 172, 171, 175, 176, 154, 177, 178, 155, 177, 179, 180, 178, 178, 180, 181, 182, 155, 178, 182, 156, 183, 184, 185, 186, 184, 150, 153, 185, 185, 153, 158, 187, 186, 185, 187, 188]
                                float3 xformOp:rotateXYZ = (-40, 0, 0)
                                float3 xformOp:translate:pivot = (0.31998548, 0.37106812, 0.3258961)
                                uniform token[] xformOpOrder = ["xformOp:translate:pivot", "xformOp:rotateXYZ", "!invert!xformOp:translate:pivot"]
                            }
                        }
                    }

                    def Xform "Wall_e_RIG_v001_bar_1l_clip_mecha_grp"
                    {
                        def Xform "Wall_e_RIG_v001_bar_1l_clip_mecha_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.43438256, 0.7635159, 0.160202)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_flag_2x2_square_grp"
                    {
                        def Xform "Wall_e_RIG_v001_flag_2x2_square_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.23994982, 0.8, 1.0804294)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_thread_grp"
                    {
                        def Xform "Wall_e_RIG_v001_thread_001_mesh"
                        {
                        }
                    }

                    def Xform "Wall_e_RIG_v001_cable_cap_grp"
                    {
                        def Xform "Wall_e_RIG_v001_cable_cap_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0, 0.32, 0.32)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }
                    }

                    def Xform "Wall_e_RIG_v001_technic_liftarm_1x2_with_ball_joint_straight_001_grp"
                    {
                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x2_with_ball_joint_straight_001_mesh"
                        {
                            float3 xformOp:translate:pivot = (0.5124999, 0.5156669, 1.1589142)
                            uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
                        }

                        def Xform "Wall_e_RIG_v001_technic_liftarm_1x2_with_ball_joint_ball_001_mesh"
                        {
                        }
                    }
                }

                def BasisCurves "Wall_e_RIG_v001_r_cable_stroke"
                {
                    int[] curveVertexCounts.timeSamples = {
                        1: [20],
                    }
                    point3f[] points.timeSamples = {
                        1: [(1.6348495, 16.576962, -6.074431), (1.634426, 16.56399, -6.325115), (1.6314608, 16.550467, -6.5864367), (1.6234125, 16.536524, -6.85586), (1.6077394, 16.522295, -7.13085), (1.5818967, 16.507921, -7.408848), (1.542919, 16.495113, -7.6846113), (1.4870255, 16.488623, -7.9476833), (1.4103413, 16.493547, -8.187009), (1.3089916, 16.514986, -8.39153), (1.1795027, 16.557749, -8.550402), (1.0276244, 16.619879, -8.657594), (0.8683298, 16.69267, -8.711895), (0.7169933, 16.767118, -8.712303), (0.588989, 16.83422, -8.657815), (0.49798033, 16.885874, -8.548489), (0.4427399, 16.921808, -8.393621), (0.41437322, 16.945787, -8.207262), (0.40392232, 16.961615, -8.003501), (0.40242934, 16.973083, -7.7964287)],
                    }
                    color3f[] primvars:displayColor (
                        interpolation = "vertex"
                    )
                    color3f[] primvars:displayColor.timeSamples = {
                        1: [(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)],
                    }
                    float[] primvars:displayOpacity (
                        interpolation = "vertex"
                    )
                    float[] primvars:displayOpacity.timeSamples = {
                        1: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    }
                    uniform token type = "linear"
                    float[] widths.timeSamples = {
                        1: [0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35],
                    }
                }

                def BasisCurves "Wall_e_RIG_v001_l_cable_stroke"
                {
                    int[] curveVertexCounts.timeSamples = {
                        1: [21],
                    }
                    point3f[] points.timeSamples = {
                        1: [(-1.6348541, 16.576956, -6.0744305), (-1.6345506, 16.564648, -6.312307), (-1.6324264, 16.551836, -6.559898), (-1.6266606, 16.538633, -6.8150296), (-1.6154325, 16.525154, -7.075528), (-1.5969214, 16.511509, -7.339219), (-1.568877, 16.498522, -7.602711), (-1.5273318, 16.489853, -7.8577433), (-1.4678886, 16.489878, -8.094835), (-1.3861505, 16.502966, -8.304509), (-1.2777202, 16.533491, -8.477284), (-1.1413099, 16.58381, -8.60512), (-0.9880669, 16.648218, -8.685718), (-0.8322476, 16.718998, -8.71822), (-0.68810844, 16.78843, -8.701766), (-0.56990576, 16.848793, -8.635498), (-0.4881802, 16.894197, -8.520711), (-0.4386089, 16.926073, -8.367331), (-0.4131534, 16.947674, -8.187436), (-0.40377507, 16.96226, -7.9931087), (-0.4024353, 16.973083, -7.7964287)],
                    }
                    color3f[] primvars:displayColor (
                        interpolation = "vertex"
                    )
                    color3f[] primvars:displayColor.timeSamples = {
                        1: [(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)],
                    }
                    float[] primvars:displayOpacity (
                        interpolation = "vertex"
                    )
                    float[] primvars:displayOpacity.timeSamples = {
                        1: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    }
                    uniform token type = "linear"
                    float[] widths.timeSamples = {
                        1: [0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35],
                    }
                }
            }
        }
    }

    def Scope "mtl"
    {
        def Material "initialShadingGroup"
        {
        }

        def Material "Wall_e_RIG_v001_beige_sg"
        {
            token outputs:surface.connect = </Cache1/mtl/Wall_e_RIG_v001_beige_sg/Wall_e_RIG_v001_beige_shd.outputs:surface>

            def Shader "Wall_e_RIG_v001_beige_shd"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.555109, 0.39753786, 0.1584546)
                normal3f inputs:normal = (1, 1, 1)
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 1
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "Wall_e_RIG_v001_black_sg"
        {
            token outputs:surface.connect = </Cache1/mtl/Wall_e_RIG_v001_black_sg/Wall_e_RIG_v001_black_shd.outputs:surface>

            def Shader "Wall_e_RIG_v001_black_shd"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.0073072524, 0.0073072524, 0.0073072524)
                normal3f inputs:normal = (1, 1, 1)
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 1
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "Wall_e_RIG_v001_dark_grey_sg"
        {
            token outputs:surface.connect = </Cache1/mtl/Wall_e_RIG_v001_dark_grey_sg/Wall_e_RIG_v001_dark_grey_shd.outputs:surface>

            def Shader "Wall_e_RIG_v001_dark_grey_shd"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.07092296, 0.07092296, 0.07092296)
                normal3f inputs:normal = (1, 1, 1)
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 1
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "Wall_e_RIG_v001_wall_e_anim_v003_light_gray_sg"
        {
            token outputs:surface.connect = </Cache1/mtl/Wall_e_RIG_v001_wall_e_anim_v003_light_gray_sg/Wall_e_RIG_v001_wall_e_anim_v003_light_gray_shd.outputs:surface>

            def Shader "Wall_e_RIG_v001_wall_e_anim_v003_light_gray_shd"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.26596662, 0.22995682, 0.22652267)
                normal3f inputs:normal = (1, 1, 1)
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 1
                token outputs:displacement
                token outputs:surface
            }
        }
    }
}

